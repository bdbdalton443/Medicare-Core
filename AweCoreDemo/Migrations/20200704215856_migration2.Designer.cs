// <auto-generated />
using System;
using DemoHms.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AweCoreDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200704215856_migration2")]
    partial class migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AweCoreDemo.Data.BillItemType", b =>
                {
                    b.Property<int>("BillItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BillItemTypeID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("BillItemTypes");
                });

            modelBuilder.Entity("AweCoreDemo.Data.DispenseRoutine", b =>
                {
                    b.Property<int>("DispenseRoutineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<int?>("PatientID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("TreatmentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("DispenseRoutineID");

                    b.HasIndex("ItemID");

                    b.HasIndex("PatientID");

                    b.HasIndex("TreatmentID");

                    b.ToTable("DispenseRoutines");
                });

            modelBuilder.Entity("AweCoreDemo.Data.DispenseStatus", b =>
                {
                    b.Property<int>("DispenseStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DispenseStatusID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("DispenseStatuses");
                });

            modelBuilder.Entity("AweCoreDemo.Data.HService", b =>
                {
                    b.Property<int>("HServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("HServiceID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("HServices");
                });

            modelBuilder.Entity("AweCoreDemo.Data.RoutineType", b =>
                {
                    b.Property<int>("RoutineTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoutineTypeID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("RoutineType");
                });

            modelBuilder.Entity("AweCoreDemo.Data.StockRoutine", b =>
                {
                    b.Property<int>("StockRoutineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExaminationID")
                        .HasColumnType("int");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedureID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("RoutineTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StockID")
                        .HasColumnType("int");

                    b.Property<int?>("TestConsumableID")
                        .HasColumnType("int");

                    b.Property<int?>("TreatmentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StockRoutineID");

                    b.HasIndex("ExaminationID");

                    b.HasIndex("ItemID");

                    b.HasIndex("ProcedureID");

                    b.HasIndex("RoutineTypeID");

                    b.HasIndex("StockID");

                    b.HasIndex("TestConsumableID");

                    b.HasIndex("TreatmentID");

                    b.ToTable("StockRoutines");
                });

            modelBuilder.Entity("AweCoreDemo.Data.Stok", b =>
                {
                    b.Property<int?>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StockID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ItemID");

                    b.ToTable("Stoks");
                });

            modelBuilder.Entity("AweCoreDemo.Data.TestConsumable", b =>
                {
                    b.Property<int?>("TestConsumableID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("TestID")
                        .HasColumnType("int");

                    b.HasKey("TestConsumableID");

                    b.HasIndex("ItemID");

                    b.HasIndex("TestID");

                    b.ToTable("TestConsumables");
                });

            modelBuilder.Entity("DemoHms.Bill", b =>
                {
                    b.Property<int>("BIllID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Balance")
                        .HasColumnType("int");

                    b.Property<int?>("BillStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FinalPrint")
                        .HasColumnType("bit");

                    b.Property<bool>("InitialPrint")
                        .HasColumnType("bit");

                    b.Property<int?>("PatientID")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BIllID");

                    b.HasIndex("BillStatusID");

                    b.HasIndex("PatientID");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("DemoHms.Data.Activity", b =>
                {
                    b.Property<int>("ActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityID");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("DemoHms.Data.ArmyDivision", b =>
                {
                    b.Property<int>("ArmyDivisionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ArmyDivisionID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ArmyDivision");
                });

            modelBuilder.Entity("DemoHms.Data.ArmyService", b =>
                {
                    b.Property<int>("ArmyServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ArmyServiceID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ArmyServices");
                });

            modelBuilder.Entity("DemoHms.Data.ArmyStatus", b =>
                {
                    b.Property<int>("ArmyStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ArmyStatusID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ArmyStatuses");
                });

            modelBuilder.Entity("DemoHms.Data.ArmyUnit", b =>
                {
                    b.Property<int>("ArmyUnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmyDivisionID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ArmyUnitID");

                    b.HasIndex("ArmyDivisionID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ArmyUnits");
                });

            modelBuilder.Entity("DemoHms.Data.Assignment", b =>
                {
                    b.Property<int?>("AssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Emergency")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastVisted")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<int?>("PatientTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Recommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReferralStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Reported")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentID");

                    b.HasIndex("BillStatusID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PatientID");

                    b.HasIndex("PatientTypeID");

                    b.HasIndex("ReferralStatusID");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("DemoHms.Data.BillItem", b =>
                {
                    b.Property<int>("BillItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillItemTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HServiceID")
                        .HasColumnType("int");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TestID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BillItemID");

                    b.HasIndex("BillItemTypeID");

                    b.HasIndex("HServiceID");

                    b.HasIndex("ItemID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TestID");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("DemoHms.Data.BillStatus", b =>
                {
                    b.Property<int>("BillStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillStatusID");

                    b.ToTable("BillStatus");
                });

            modelBuilder.Entity("DemoHms.Data.Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("HospitalD")
                        .HasColumnType("int");

                    b.Property<int?>("HospitalID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchID");

                    b.HasIndex("BranchTypeID");

                    b.HasIndex("HospitalD");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("DemoHms.Data.BranchType", b =>
                {
                    b.Property<int>("BranchTyeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BranchTyeID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("BranchTypes");
                });

            modelBuilder.Entity("DemoHms.Data.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("BranchID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DemoHms.Data.EmployeeGroup", b =>
                {
                    b.Property<int>("EmployeeGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Groupcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeGroupID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("EmployeeGroups");
                });

            modelBuilder.Entity("DemoHms.Data.EntityType", b =>
                {
                    b.Property<int>("EntityTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EntityTypeID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("EntityTypes");
                });

            modelBuilder.Entity("DemoHms.Data.Examination", b =>
                {
                    b.Property<int>("ExaminationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignmentID")
                        .HasColumnType("int");

                    b.Property<int?>("BillID")
                        .HasColumnType("int");

                    b.Property<int?>("BillStatusID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExaminationStatusID")
                        .HasColumnType("int");

                    b.Property<string>("Findings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ExaminationID");

                    b.HasIndex("AssignmentID");

                    b.HasIndex("BillID");

                    b.HasIndex("BillStatusID");

                    b.HasIndex("ExaminationStatusID");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("DemoHms.Data.ExaminationStatus", b =>
                {
                    b.Property<int>("ExaminationStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExaminationStatusID");

                    b.ToTable("ExaminationStatuses");
                });

            modelBuilder.Entity("DemoHms.Data.Family", b =>
                {
                    b.Property<int>("FamilyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<int>("Debit")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitialDeposit")
                        .HasColumnType("int");

                    b.Property<int>("MaxCredit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OSBalance")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FamilyID");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("DemoHms.Data.Hospital", b =>
                {
                    b.Property<int>("HospitalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractLength")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntityTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("HospitalID");

                    b.HasIndex("EntityTypeID");

                    b.HasIndex("StatusID");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("DemoHms.Data.Mapping", b =>
                {
                    b.Property<int>("MappingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HospitalID")
                        .HasColumnType("int");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.HasKey("MappingID");

                    b.HasIndex("HospitalID");

                    b.HasIndex("ModuleID");

                    b.ToTable("Mappings");
                });

            modelBuilder.Entity("DemoHms.Data.Module", b =>
                {
                    b.Property<int>("ModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ModuleID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("DemoHms.Data.NOKRelationship", b =>
                {
                    b.Property<int>("NOKRelationshipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NOKRelationshipID");

                    b.ToTable("NOKRelationships");
                });

            modelBuilder.Entity("DemoHms.Data.NextOfKin", b =>
                {
                    b.Property<int>("NextOfKinID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NOKRelationshipID")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("NextOfKinID");

                    b.HasIndex("NOKRelationshipID");

                    b.ToTable("NextOfKins");
                });

            modelBuilder.Entity("DemoHms.Data.Organisation", b =>
                {
                    b.Property<int>("OrganisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Charge")
                        .HasColumnType("int");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<int>("Debit")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganisationID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("DemoHms.Data.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArmyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArmyStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("ArmyUnitID")
                        .HasColumnType("int");

                    b.Property<string>("CardNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FamilyID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HospitalID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NextOfKinID")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<int?>("PatientTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("RankID")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceCodeID")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("PatientID");

                    b.HasIndex("ArmyStatusID");

                    b.HasIndex("ArmyUnitID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FamilyID");

                    b.HasIndex("HospitalID");

                    b.HasIndex("NextOfKinID");

                    b.HasIndex("OrganisationID");

                    b.HasIndex("PatientTypeID");

                    b.HasIndex("RankID");

                    b.HasIndex("ServiceCodeID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("DemoHms.Data.PatientType", b =>
                {
                    b.Property<int>("PatientTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PatientTypeID1")
                        .HasColumnType("int");

                    b.HasKey("PatientTypeID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("PatientTypeID1");

                    b.ToTable("PatientTypes");
                });

            modelBuilder.Entity("DemoHms.Data.Permission", b =>
                {
                    b.Property<int>("PermissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivityID")
                        .HasColumnType("int");

                    b.Property<bool>("CanAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeGroupID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("PermissionID");

                    b.HasIndex("ActivityID");

                    b.HasIndex("EmployeeGroupID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("DemoHms.Data.Procedure", b =>
                {
                    b.Property<int?>("ProcedureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdjustedAmount")
                        .HasColumnType("int");

                    b.Property<int?>("BillID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExaminationID")
                        .HasColumnType("int");

                    b.Property<int?>("ExaminationStatusID")
                        .HasColumnType("int");

                    b.Property<string>("Findings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OriginalAmount")
                        .HasColumnType("int");

                    b.Property<int?>("TestID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ProcedureID");

                    b.HasIndex("BillID");

                    b.HasIndex("ExaminationID");

                    b.HasIndex("ExaminationStatusID");

                    b.HasIndex("TestID");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("DemoHms.Data.Rank", b =>
                {
                    b.Property<int>("RankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RankID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("DemoHms.Data.ReferralStatus", b =>
                {
                    b.Property<int>("ReferralStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReferralStatusID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ReferralStatuses");
                });

            modelBuilder.Entity("DemoHms.Data.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StatusID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("DemoHms.Data.Test", b =>
                {
                    b.Property<int>("TestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TestID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("DemoHms.Data.Treatment", b =>
                {
                    b.Property<int?>("TreatmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdjustedAmount")
                        .HasColumnType("int");

                    b.Property<int?>("AssignmentID")
                        .HasColumnType("int");

                    b.Property<int?>("BIllID")
                        .HasColumnType("int");

                    b.Property<int?>("Balance")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DispenseStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("DispensedQty")
                        .HasColumnType("int");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<int?>("OriginalAmount")
                        .HasColumnType("int");

                    b.Property<int?>("PostQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("PreQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("TreatmentID");

                    b.HasIndex("AssignmentID");

                    b.HasIndex("BIllID");

                    b.HasIndex("DispenseStatusID");

                    b.HasIndex("ItemID");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("DemoHms.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ItemUnitID")
                        .HasColumnType("int");

                    b.Property<int>("ItemsPerPkg")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PackageDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ref_Supplier")
                        .HasColumnType("int");

                    b.Property<int?>("TestID")
                        .HasColumnType("int");

                    b.Property<string>("TradeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ItemTypeID");

                    b.HasIndex("ItemUnitID");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TestID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DemoHms.ItemSubGroup", b =>
                {
                    b.Property<int>("ItemSubGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemSuperTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ItemSubGroupID");

                    b.HasIndex("ItemSuperTypeID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ItemSubGroups");
                });

            modelBuilder.Entity("DemoHms.ItemSuperType", b =>
                {
                    b.Property<int>("ItemSuperTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ItemSuperTypeID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ItemSuperTypes");
                });

            modelBuilder.Entity("DemoHms.ItemType", b =>
                {
                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompleteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemSubGroupID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RefSubGroup")
                        .HasColumnType("int");

                    b.Property<string>("SubGroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeID");

                    b.HasIndex("ItemSubGroupID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("DemoHms.ItemUnit", b =>
                {
                    b.Property<int>("ItemUnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ItemUnitID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ItemUnits");
                });

            modelBuilder.Entity("DemoHms.Receipt", b =>
                {
                    b.Property<int>("ReceiptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdjustedAmount")
                        .HasColumnType("int");

                    b.Property<int?>("AdjustedCost")
                        .HasColumnType("int");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BillID")
                        .HasColumnType("int");

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcedureID")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("TreatmentID")
                        .HasColumnType("int");

                    b.HasKey("ReceiptID");

                    b.HasIndex("BillID");

                    b.HasIndex("ProcedureID");

                    b.HasIndex("ReceiptNumber")
                        .IsUnique()
                        .HasFilter("[ReceiptNumber] IS NOT NULL");

                    b.HasIndex("TreatmentID");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("DemoHms.ReceiptRoutine", b =>
                {
                    b.Property<int>("ReceiptRoutineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BillID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceiptRoutineID");

                    b.HasIndex("BillID");

                    b.ToTable("ReceiptRoutines");
                });

            modelBuilder.Entity("DemoHms.Request", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Appoved")
                        .HasColumnType("bit");

                    b.Property<int>("ApprovedQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("Approved_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Issued")
                        .HasColumnType("bit");

                    b.Property<int>("IssuedQty")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Received")
                        .HasColumnType("bit");

                    b.Property<string>("RequestedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Requested_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestID");

                    b.HasIndex("ItemID");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DemoHms.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeGroupID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HospitalId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EmployeeGroupID");

                    b.HasIndex("HospitalId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("AweCoreDemo.Data.DispenseRoutine", b =>
                {
                    b.HasOne("DemoHms.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID");

                    b.HasOne("DemoHms.Data.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.HasOne("DemoHms.Data.Treatment", "Treatment")
                        .WithMany()
                        .HasForeignKey("TreatmentID");
                });

            modelBuilder.Entity("AweCoreDemo.Data.StockRoutine", b =>
                {
                    b.HasOne("DemoHms.Data.Examination", "Examination")
                        .WithMany()
                        .HasForeignKey("ExaminationID");

                    b.HasOne("DemoHms.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID");

                    b.HasOne("DemoHms.Data.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("ProcedureID");

                    b.HasOne("AweCoreDemo.Data.RoutineType", "RoutineType")
                        .WithMany("StockRoutines")
                        .HasForeignKey("RoutineTypeID");

                    b.HasOne("AweCoreDemo.Data.Stok", "Stock")
                        .WithMany()
                        .HasForeignKey("StockID");

                    b.HasOne("AweCoreDemo.Data.TestConsumable", "TestConsumable")
                        .WithMany()
                        .HasForeignKey("TestConsumableID");

                    b.HasOne("DemoHms.Data.Treatment", "Treatment")
                        .WithMany()
                        .HasForeignKey("TreatmentID");
                });

            modelBuilder.Entity("AweCoreDemo.Data.Stok", b =>
                {
                    b.HasOne("DemoHms.Data.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("DemoHms.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID");
                });

            modelBuilder.Entity("AweCoreDemo.Data.TestConsumable", b =>
                {
                    b.HasOne("DemoHms.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID");

                    b.HasOne("DemoHms.Data.Test", "Test")
                        .WithMany("TestConsumables")
                        .HasForeignKey("TestID");
                });

            modelBuilder.Entity("DemoHms.Bill", b =>
                {
                    b.HasOne("DemoHms.Data.BillStatus", "BillStatus")
                        .WithMany("Bills")
                        .HasForeignKey("BillStatusID");

                    b.HasOne("DemoHms.Data.Patient", "Patient")
                        .WithMany("Bills")
                        .HasForeignKey("PatientID");
                });

            modelBuilder.Entity("DemoHms.Data.ArmyUnit", b =>
                {
                    b.HasOne("DemoHms.Data.ArmyDivision", "ArmyDivision")
                        .WithMany("ArmyUnits")
                        .HasForeignKey("ArmyDivisionID");
                });

            modelBuilder.Entity("DemoHms.Data.Assignment", b =>
                {
                    b.HasOne("DemoHms.Data.BillStatus", "BillStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("BillStatusID");

                    b.HasOne("DemoHms.ApplicationUser", "Doctor")
                        .WithMany("Assignments")
                        .HasForeignKey("DoctorID");

                    b.HasOne("DemoHms.Data.Patient", "Patient")
                        .WithMany("Assignments")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoHms.Data.PatientType", "PatientType")
                        .WithMany()
                        .HasForeignKey("PatientTypeID");

                    b.HasOne("DemoHms.Data.ReferralStatus", "ReferralStatus")
                        .WithMany("Assignments")
                        .HasForeignKey("ReferralStatusID");
                });

            modelBuilder.Entity("DemoHms.Data.BillItem", b =>
                {
                    b.HasOne("AweCoreDemo.Data.BillItemType", "BillItemType")
                        .WithMany("BillItems")
                        .HasForeignKey("BillItemTypeID");

                    b.HasOne("AweCoreDemo.Data.HService", "HService")
                        .WithMany("BillItems")
                        .HasForeignKey("HServiceID");

                    b.HasOne("DemoHms.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID");

                    b.HasOne("DemoHms.Data.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestID");
                });

            modelBuilder.Entity("DemoHms.Data.Branch", b =>
                {
                    b.HasOne("DemoHms.Data.BranchType", "BranchType")
                        .WithMany("Branches")
                        .HasForeignKey("BranchTypeID");

                    b.HasOne("DemoHms.Data.Hospital", "Hospital")
                        .WithMany("Branches")
                        .HasForeignKey("HospitalD");
                });

            modelBuilder.Entity("DemoHms.Data.Department", b =>
                {
                    b.HasOne("DemoHms.Data.Branch", "Branch")
                        .WithMany("Departments")
                        .HasForeignKey("BranchID");
                });

            modelBuilder.Entity("DemoHms.Data.Examination", b =>
                {
                    b.HasOne("DemoHms.Data.Assignment", "Assignment")
                        .WithMany("Examinations")
                        .HasForeignKey("AssignmentID");

                    b.HasOne("DemoHms.Bill", "Bill")
                        .WithMany("Examinations")
                        .HasForeignKey("BillID");

                    b.HasOne("DemoHms.Data.BillStatus", "BillStatus")
                        .WithMany("Examinations")
                        .HasForeignKey("BillStatusID");

                    b.HasOne("DemoHms.Data.ExaminationStatus", "ExaminationStatus")
                        .WithMany("Examinations")
                        .HasForeignKey("ExaminationStatusID");
                });

            modelBuilder.Entity("DemoHms.Data.Hospital", b =>
                {
                    b.HasOne("DemoHms.Data.EntityType", "EntityType")
                        .WithMany("Hospitals")
                        .HasForeignKey("EntityTypeID");

                    b.HasOne("DemoHms.Data.Status", "Status")
                        .WithMany("Hospitals")
                        .HasForeignKey("StatusID");
                });

            modelBuilder.Entity("DemoHms.Data.Mapping", b =>
                {
                    b.HasOne("DemoHms.Data.Hospital", "Hospital")
                        .WithMany("Mappings")
                        .HasForeignKey("HospitalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoHms.Data.Module", "Module")
                        .WithMany("Mappings")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoHms.Data.NextOfKin", b =>
                {
                    b.HasOne("DemoHms.Data.NOKRelationship", "NOKRelationship")
                        .WithMany("NextOfKins")
                        .HasForeignKey("NOKRelationshipID");
                });

            modelBuilder.Entity("DemoHms.Data.Patient", b =>
                {
                    b.HasOne("DemoHms.Data.ArmyStatus", "ArmyStatus")
                        .WithMany("Patients")
                        .HasForeignKey("ArmyStatusID");

                    b.HasOne("DemoHms.Data.ArmyUnit", "ArmyUnit")
                        .WithMany("Patients")
                        .HasForeignKey("ArmyUnitID");

                    b.HasOne("DemoHms.Data.Department", null)
                        .WithMany("Patients")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("DemoHms.Data.Family", "Family")
                        .WithMany("Patients")
                        .HasForeignKey("FamilyID");

                    b.HasOne("DemoHms.Data.Hospital", "Hospital")
                        .WithMany("Patients")
                        .HasForeignKey("HospitalID");

                    b.HasOne("DemoHms.Data.NextOfKin", "NextOfKin")
                        .WithMany("Patients")
                        .HasForeignKey("NextOfKinID");

                    b.HasOne("DemoHms.Data.Organisation", "Organisation")
                        .WithMany("Patients")
                        .HasForeignKey("OrganisationID");

                    b.HasOne("DemoHms.Data.PatientType", "PatientType")
                        .WithMany("Patients")
                        .HasForeignKey("PatientTypeID");

                    b.HasOne("DemoHms.Data.Rank", "Rank")
                        .WithMany("Patients")
                        .HasForeignKey("RankID");

                    b.HasOne("DemoHms.Data.ArmyService", "ArmyService")
                        .WithMany("Patients")
                        .HasForeignKey("ServiceCodeID");
                });

            modelBuilder.Entity("DemoHms.Data.PatientType", b =>
                {
                    b.HasOne("DemoHms.Data.PatientType", null)
                        .WithMany("PatientTypes")
                        .HasForeignKey("PatientTypeID1");
                });

            modelBuilder.Entity("DemoHms.Data.Permission", b =>
                {
                    b.HasOne("DemoHms.Data.Activity", "Activity")
                        .WithMany("Permissions")
                        .HasForeignKey("ActivityID");

                    b.HasOne("DemoHms.Data.EmployeeGroup", "EmployeeGroup")
                        .WithMany("Permissions")
                        .HasForeignKey("EmployeeGroupID");
                });

            modelBuilder.Entity("DemoHms.Data.Procedure", b =>
                {
                    b.HasOne("DemoHms.Bill", "Bill")
                        .WithMany("Procedures")
                        .HasForeignKey("BillID");

                    b.HasOne("DemoHms.Data.Examination", "Examination")
                        .WithMany("Procedures")
                        .HasForeignKey("ExaminationID");

                    b.HasOne("DemoHms.Data.ExaminationStatus", "ExaminationStatus")
                        .WithMany("Procedures")
                        .HasForeignKey("ExaminationStatusID");

                    b.HasOne("DemoHms.Data.Test", "Test")
                        .WithMany("Procedures")
                        .HasForeignKey("TestID");
                });

            modelBuilder.Entity("DemoHms.Data.Test", b =>
                {
                    b.HasOne("DemoHms.Data.Department", "Department")
                        .WithMany("Tests")
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("DemoHms.Data.Treatment", b =>
                {
                    b.HasOne("DemoHms.Data.Assignment", "Assignment")
                        .WithMany("Treatments")
                        .HasForeignKey("AssignmentID");

                    b.HasOne("DemoHms.Bill", "Bill")
                        .WithMany("Treatments")
                        .HasForeignKey("BIllID");

                    b.HasOne("AweCoreDemo.Data.DispenseStatus", "DispenseStatus")
                        .WithMany()
                        .HasForeignKey("DispenseStatusID");

                    b.HasOne("DemoHms.Item", "Item")
                        .WithMany("Treatment")
                        .HasForeignKey("ItemID");
                });

            modelBuilder.Entity("DemoHms.Item", b =>
                {
                    b.HasOne("DemoHms.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("DemoHms.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoHms.ItemUnit", "ItemUnit")
                        .WithMany("Items")
                        .HasForeignKey("ItemUnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoHms.ApplicationUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("DemoHms.Data.Test", null)
                        .WithMany("Items")
                        .HasForeignKey("TestID");
                });

            modelBuilder.Entity("DemoHms.ItemSubGroup", b =>
                {
                    b.HasOne("DemoHms.ItemSuperType", "ItemSuperType")
                        .WithMany("ItemSubGroups")
                        .HasForeignKey("ItemSuperTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoHms.ItemType", b =>
                {
                    b.HasOne("DemoHms.ItemSubGroup", "ItemSubGroup")
                        .WithMany("ItemTypes")
                        .HasForeignKey("ItemSubGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoHms.Receipt", b =>
                {
                    b.HasOne("DemoHms.Bill", "Bill")
                        .WithMany("Receipts")
                        .HasForeignKey("BillID");

                    b.HasOne("DemoHms.Data.Procedure", "Procedure")
                        .WithMany("Receipts")
                        .HasForeignKey("ProcedureID");

                    b.HasOne("DemoHms.Data.Treatment", "Treatment")
                        .WithMany("Receipts")
                        .HasForeignKey("TreatmentID");
                });

            modelBuilder.Entity("DemoHms.ReceiptRoutine", b =>
                {
                    b.HasOne("DemoHms.Bill", "Bill")
                        .WithMany("ReceiptRoutines")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoHms.Request", b =>
                {
                    b.HasOne("DemoHms.Item", "Item")
                        .WithMany("Requests")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoHms.ApplicationUser", b =>
                {
                    b.HasOne("DemoHms.Data.Department", "Department")
                        .WithMany("AppUsers")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("DemoHms.Data.EmployeeGroup", "EmployeeGroup")
                        .WithMany("AppUsers")
                        .HasForeignKey("EmployeeGroupID");

                    b.HasOne("DemoHms.Data.Hospital", "Hospital")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("HospitalId");
                });
#pragma warning restore 612, 618
        }
    }
}
