@page
@using AweCoreDemo.Utils
@using AweCoreDemo.Models
@using Microsoft.AspNetCore.Mvc

@inject DemoHms.Data.ApplicationDbContext _context
@model AweCoreDemo.Pages.Dispensory.DetailsModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Home.cshtml";
}

<h1>Details</h1>

<h1>Dispensory</h1>
<a href="@Url.Page("Index")">Back to main page</a>
<br />
<br />
<script>
    var items = @Html.Raw(DemoUtils.Encode(_context.Items.Select(o => new KeyContent(o.ItemID, o.Name))));
</script>
@{
    var gridId = "treatmentDisparch";
}

<div class="row">
    <div class="col-md-2">
        <dl class="row">
            <dt class="col-sm-4">
                <input asp-for="Assignment.AssignmentID" type="hidden"/>
                @Html.DisplayNameFor(model => model.Assignment.Description)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.Description)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Assignment.Emergency)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.Emergency)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Assignment.Recommendation)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.Recommendation)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Assignment.LastVisted)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.LastVisted)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Assignment.Reported)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.Reported)
            </dd>
            <dt class="col-sm-4">
                Patient
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.Patient.FullName)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Assignment.ReferralStatus)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.ReferralStatus.ReferralStatusID)
            </dd>
            <dt class="col-sm-4">
                Patient Type
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.Patient.PatientType.Name)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Assignment.Doctor)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.Doctor.FullName)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Assignment.CreatedOn)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.CreatedOn)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Assignment.UpdatedOn)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Assignment.UpdatedOn)
            </dd>
        </dl>
    </div>
    <div class="col-md-10">
        <div class="container">
            <ul id="ul" class="nav nav-tabs" runat="server">
                <li class="nav-item" id="l1" runat="server"><a id="conDetails" class="nav-link active" role="tab" data-toggle="tab" href="#ass1">New Consultation<span id="assCount" runat="server" style="color:red"></span></a></li>
                <li class="nav-item"><a id="labDetails" class="nav-link" role="tab" data-toggle="tab" href="#ass2" runat="server">Requests FeedBack Details<span id="fdBackCount" runat="server" style="color:red"></span></a></li>
                <li class="nav-item"><a id="pendingExam" class="nav-link" role="tab" data-toggle="tab" href="#ass3">Pending Requests<span id="pendingEx" runat="server" style="color:red"></span></a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane container active" role="tabpanel" id="ass1" runat="server">
                    <div class="card shadow mb-4" runat="server" visible="true">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Consultation Details</h6>
                        </div>
                        <div class="card-body">
                            <form method="post"><input type="hidden" asp-for="Assignment.AssignmentID" />
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                
                                <div class="form-group">
                                    <textarea id="admissionDesc" asp-for="Assignment.Description" runat="server" disabled placeholder="Description" style="border-radius:6px;width:100%;"></textarea>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <select id="billStatus" style="width: 100%; border-radius: 6px;" asp-for="Assignment.BillStatusID" asp-items="ViewBag.BillStatusID">
                                            </select>
                                        </div>
                                        <div class="col-md-6">
                                            <select id="referalStatus" style="width: 100%; border-radius: 6px;" runat="server" disabled asp-for="Assignment.ReferralStatusID" asp-items="ViewBag.ReferralStatusID" onchange="switchViewSection(this, '@Url.Action("","InlineEdt")')">
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <textarea id="recommendation" runat="server" placeholder="Reported Issue or Recommendation" disabled style="border-radius:6px;width:100%;" asp-for="Assignment.Recommendation"></textarea>
                                </div>
                                <div class="form-group" id="trtGrid">
                                    <div class="bar">
                                        <div style="float: right;">
                                            @Html.Awe().TextBox("txtSearchInl").Placeholder("search...").CssClass("searchtxt")
                                        </div>
                                        <button type="button" onclick="" class="awe-btn mbtn">Create</button>
                                        @*<button type="button" onclick="$('#@gridId').data('api').inlineCreate()" class="awe-btn">Create</button>*@
                                    </div>

                                    @(Html.Awe()
                                        .InitPopupForm()
                                        .Name("delete" + gridId)
                                        .Group(gridId)
                                        .Url(Url.Action("Delete", "Dispensory"))
                                        .Success("utils.itemDeleted('" + gridId + "')")
                                        .OnLoad("utils.delConfirmLoad('" + gridId + "')") // calls grid.api.select and animates the row
                                        .Height(200)
                                        .Modal())

                                    @(Html.Awe().Grid(gridId)
                                          .Mod(o => o.PageInfo().InlineEdit(Url.Action("Create", "Dispensory"), Url.Action("Edit", "Dispensory")))
                                          .Url(Url.Action("GridGetItems", "Dispensory"))
                                          .Parent("txtSearchInl", "search")
                                          .Height(350)
                                          .Resizable()
                                          .Reorderable()
                                        .Columns(
                                              new Column { Bind = "TreatmentID", Width = 45, Header = "ID" }
                                              .Mod(o => o.InlineId()),

                                              new Column { Bind = "Item.ExtendedName", ClientFormat = ".(Item)", Header = "Item", Width = 100 }
                                                .Mod(o => o.Inline(Html.Awe().AjaxRadioList("ItemID").Odropdown().Enabled(false).DataFunc("utils.getItems(items)"), "ItemID")),

                                              new Column { Bind = "PreQuantity", Width = 50, Header = "Qty1" }
                                                .Mod(o => o.Inline(Html.Awe().TextBox("PreQuantity").Enabled(false))),

                                              new Column { Bind = "X", Width = 35, Header = "" },

                                              new Column { Bind = "PostQuantity", Width = 50, Header = "Qty2" }
                                                .Mod(o => o.Inline(Html.Awe().TextBox("PostQuantity").Enabled(false))),

                                              new Column { Bind = "Days", Width = 50 }
                                                .Mod(o => o.Inline(Html.Awe().TextBox("Days").Enabled(false))),

                                            new Column { Bind = "AdjustedAmount", Width = 80, Header = "Total" }
                                                .Mod(o => o.Inline(Html.Awe().TextBox("AdjustedAmount").Enabled(false))),

                                            new Column { Bind = "DispensedQty", Width = 60, Header="Dispansed" }
                                                .Mod(o => o.Inline(Html.Awe().TextBox("DispensedQty"))),

                                            new Column { Bind = "Balance", Width = 60, Header="Balance" }
                                                .Mod(o => o.Inline(Html.Awe().TextBox("Balance").Enabled(false))),


                                            new Column { ClientFormat = GridUtils.InlineEditFormat(), Width = 50 },
                                            new Column { ClientFormat = Html.InlineDeleteFormatForGrid(gridId), Width = 30 }))
                                </div>
                         
                                <div class="form-group">
                                    <input type="submit" value="Save" class="btn btn-primary" style="float:right" /><label style="float:left" id="ttl">@Db.Total</label>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<br />
<br />
<div class="expl">
    grid inline editing, using razor pages to handle the ajax requests instead of mvc
</div>
<br />
<br />
<br />
@{

}

@*<script type="text/javascript">

    $.get('/InlineEdit/Create').done(function (dinner) {
        $('#ttl').text(dinner.Total);
        //document.getElementById('text1').innerHTML = 'newText';
        //$.each(cars, function (i, car) {
        //    var item = `<li>
        //            <strong>${car.make} ${car.model}</strong>
        //            (£${car.price})</li>`;
        //    $('#car-list').append(item);
        //});
    });
</script>*@

<div>
    @*<a asp-page="./Edit" asp-route-id="@Model.Assignment.AssignmentID">Edit</a> |*@
    <a asp-page="./Index">Back to List</a>
</div>
