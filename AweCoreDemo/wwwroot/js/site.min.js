var awef=function(){var n={"&":"&amp;","<":"&lt;",'"':"&quot;","'":"&#39;",">":"&gt;"};return{loop:function(n,t){var i,r,u;if(n)for(i=0,r=n.length;i<r;i++)if(u=n[i],t(u,i)===!1)break},isNotNull:function(n){return!awef.isNull(n)},isNull:function(n){return n===undefined||n===null},isNullOrEmp:function(n){return awef.isNull(n)||n.toString().length===0},encode:function(t){return String(t).replace(/[<>"']/g,function(t){return n[t]})}}}(),awe=function(n){function st(n){return n.k}function cu(n){return n.c}function yi(n,t){var i=cu(n);return t.nenc||(i=vt(i)),i}function pi(n){console&&console.error(n)}function lu(n){return n.substr(0,1).toLowerCase()+n.substr(1)}function it(n,t){return t?n.scrollTop():n.scrollLeft()}function rt(n,t,i){i?n.scrollTop(t):n.scrollLeft(t)}function f(n,t){return n.addClass(t)}function e(n,t){return n.removeClass(t)}function au(n,t){n.hi&&!t&&vu(n.d)}function vu(n,t){n.addClass(fu);n.one("animationend",function(){n.removeClass(fu);t&&t()})}function yf(n){return n.find("input,button,select,textarea,a[href],[tabindex]").filter(':visible:not([disabled]):not([tabindex="-1"])')}function u(n,t){return t?n.data("api",t):n.data("api")}function wi(n){return String(n).replace(/[&<>"']/g,function(n){return kr[n]})}function dr(n){n=ht(n);for(var t in kr)n=n.split(kr[t]).join(t);return n}function bi(){return n('<div><div class="awe-scon"><\/div><\/div>')}function pf(n,t){var i=n.which;n.ctrlKey||t.indexOf(i)+1||(i<58&&!n.shiftKey||i<48)&&i!==32||i>111&&i<146||(i<96||i>105)&&s(n)}function yu(n,t,i,r){return function(u){var f=u.which,h=t[0],e=t.val(),o=wf(h),c=e.slice(o.s,o.e);f===38?r(1):f===40?r(-1):f===188||f===190||f===110?(s(u),p(n.dec)&&(e.indexOf(i)===-1||c.indexOf(i)>-1)&&(e=e.slice(0,o.s)+i+e.slice(o.e),t.val(e),bf(h,o.s+1))):f!==109&&(f!==189||u.shiftKey)?awe.pnn(u,[]):(e.indexOf("-")>-1&&c.indexOf("-")===-1||o.s>0||n.min>=0)&&s(u)}}function wf(n){var u,t,i,r,f;return"selectionStart"in n?{s:n.selectionStart,e:n.selectionEnd}:(u=document.selection.createRange().getBookmark(),t=n.createTextRange(),t.moveToBookmark(u),i=n.createTextRange(),i.collapse(!0),i.setEndPoint("EndToStart",t),r=i.text.length,f=t.text.length,{s:r,e:r+f})}function bf(n,t){if(n.createTextRange){var i=n.createTextRange();i.move("character",t);i.select()}else n.selectionStart&&(n.focus(),n.setSelectionRange(t,t))}function ht(n){return ft(n)?t:n.toString()}function kf(n){return String(n).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function ki(n){var t=n[0],i=r;return window.getComputedStyle?i=window.getComputedStyle(t).direction:t.currentStyle&&(i=t.currentStyle.direction),i==="rtl"}function di(n){return n.length?ri(n):t}function wu(n,t,r){var u=0;return r||(n.sort(),t.sort()),n.length===t.length&&(u=1,i(n,function(n,i){t[i]!==n&&(u=0)})),u}function bu(n){return n&&n.length}function ui(t,r,u){var s;if(t.data){var f=t.data.vals,e=[],h=[],o=[];i(f,function(n,i){t.data.l[i]&&o.push(n)});s=function(t){if(!dt(h,t)){h.push(t);var r=n("#"+t).data("o");r&&r.data&&i(r.data.vals,function(n,t){dt(f,n)&&r.data.l[t]&&e.push(n);s(n)})}};t.data.vals.length>1&&i(f,function(n){dt(e,n)||s(n)});i(f,function(i){var f=n("#"+i).data("o");dt(e,i)||(f&&f.pch?oi(t,n("#"+i),yt,function(n,i){i&&(of(o,i.p)&&!u?r(i):t.v.trigger(yt,i))}):!u&&of(o,[i])&&oi(t,n("#"+i),l,function(){r({p:[i]})}))})}}function ku(n,t){var r=0,u=ht(st(n));return i(t,function(n){if(u===n)return r=1,!1}),r}function du(n,r){n.d.empty();var f=bt(n.v),u="<ul>",e=n.enb?t:' disabled="disabled"';i(n.lrs,function(i){u+='<li><label class="awe-label"><input type="'+r+'" value="'+vt(st(i))+'" name="'+n.nm+'" '+(ku(i,f)?'checked="checked"':t)+e+" />"+yi(i,n)+"<\/label><\/li>"});u+="<\/ul>";n.d.append(u)}function gi(n,t){n.pch=1;oi(n,n.v,l,function(t,i){i&&i.p||(i={p:[]});i.p.push(n.i);n.v.trigger(yt,i)});n.l&&t();ui(n,function(i){n.ldg?n.needpl=1:t(i)})}function nr(n){return function(t){var i=t.x-n.offset().left;return t.istch&&(n.width()-i<70||i<70)}}function ir(t,u,o,h,c,l,w,b,k,d,g,nt,tt,ut,ft,et,ot,st,ct,lt){function yt(c){function hi(t){var u,e,p,h,r,y;s(c);ii>3||yt&&oi?(u={},dt=u,clearInterval(ti),ei=1,f(ht,eu),l&&bt.hide(),e=yt?t.originalEvent.touches[0]:t,g=e.pageX,st=e.pageY,v.x=g,v.y=st,h=function(){var u,t,r,i;for(ri=g-ui,pt=st-fi,si&&(u=n(window),pt-=u.scrollTop(),pt>u.height()&&(pt=u.height()-20)),pt<0&&(pt=0),ht&&ht.css({left:ri,top:pt}).show(),ft&&ft(),r=0;r<kt.length;r++)if(i=kt[r],i&&st>i.Ys&&st<i.Ye&&g>i.Xs&&g<i.Xe){t=r;break}wt!==t&&k(v);t>=0&&(et?(v.cont=o[t],p=et(v)):w&&w[t]&&w[t](v));wt=t},h(),r=d,ct&&(r=(ct(p)||[]).concat(r)),y=function(n,t){var r;i(n,function(i,f){function w(t,r,o,l,a){var w,k,v;if(t>r&&t<o)return e=vf((l?o-t:t-r)/s*15),w=a?i.sh:i.sw,l&&(e*=-1),k=function(){if(dt&&(!c||(l?p>Math.abs(e):p+e<w))){p+=e;rt(b,p,a);var t=it(b,a);c&&(a?st+=e:g+=e);h();rt(b,t,a);t===nt?(clearInterval(ti),y(n,f)):v();nt=t}},v=function(){dt===u&&setTimeout(k,10)},v(),1}if(t>=f)return!0;var s=30,o=i.c,b=i.p||o,c=i.w,e,nt,l=c?it(a,1):o.offset().top,k=l+o.outerHeight(),tt=l+s,ut=k-s,v=c?it(a):o.offset().left,d=v+o.outerWidth(),ft=v+s,et=d-s,p=it(o,i.y);return i.y?r=g>v&&g<d&&(w(st,l,tt,1,1)||w(st,ut,k,0,1)):i.x&&(r=st>l&&st<k&&(w(g,v,ft,1)||w(g,et,d))),r?!1:void 0})},y(r)):ii++}var ti,yt=c.type!=="mousedown",dt,ri,pt,wt,ni=yt?c.originalEvent.touches[0]:c,bt=u?n(c.target).closest(u):t,g=ni.pageX,st=ni.pageY,ui=g-bt.offset().left,fi=st-bt.offset().top,ei,oi,kt,v,ht,si,ii;if(tt&&tt({istch:yt,x:g,y:st,drgo:bt,e:c})||tr)return!0;tr=1;setTimeout(function(){oi=1},300);s(c);kt=[];lt&&(o=lt());i(o,function(n){if(n&&n.length){var t={};t.Ys=n.offset().top;t.Ye=t.Ys+n.outerHeight();t.Xs=n.offset().left;t.Xe=t.Xs+n.outerWidth();kt.push(t)}else kt.push(r)});i(d,function(n){if(n.c.is(gt)){n.w=1;var r=iu(),t=a.height()-gt.height(),i=a.width()-gt.width();t&&(t+=r);i&&(i+=r);n.sh=t;n.sw=i}});v={drgo:bt};ht=nt(v);v.drgh=ht;vt||(ui=ni.pageX-ht.offset().left,fi=ni.pageY-ht.offset().top);si=ht.css("position")==="fixed";ii=0;n(document).on(yt?"touchmove":"mousemove",hi).one(yt?"touchend":"mouseup",function(){n(document).off("touchmove mousemove",hi);clearInterval(ti);dt=r;setTimeout(function(){e(ht,eu);tr=0},1);!ut&&ht&&ht.remove();at&&at.remove();p(wt)&&(ot?(v.cont=o[wt],ot(v)):h[wt]&&h[wt](v));k(v);b(v);l&&bt.show();!ei&&yt&&n(c.target).trigger(y)})}var at,vt;k=k||v;b=b||v;g=g||function(n){return n.drgo.clone()};d=d||[];nt=nt||function(i){var u=i.drgo,e=u.width(),o=u.height(),r=f(g(i),"awe-drag "+ht(c)).hide();return ki(t)?at=n('<div style="direction:rtl"/>').appendTo(n("body")).append(r):r.appendTo(n("body")),r.width(e).height(o),vt=1,r};t.on(ai,st||u,yt);return function(){t.off(ai,yt)}}function gu(t){if(t){var i=n("#"+t);i.length&&u(i).destroy()}}function fi(t){var i=t.p,r=i.d;r.data("o",t);gu(i.i);i.g&&(n(".awe-popup[aweg="+i.g+"]").each(function(){var t=u(n(this));t&&t.destroy()}),r.attr("aweg",i.g));f(r,"awe-popup");i.i&&r.attr("id",i.i);awe.popup(t);g(t,function(){i.api&&i.api.destroy()})}function ct(n,t){return awe.readd(n,t)}function lt(n){awe.ff(n)}function df(n,t){if(n.sc)n.fm.on(l,pr,t);else n.fm.on(y,".awe-searchbtn",t)}function nf(t,i,r){if(t.fm.html())r();else{if(t.sf){var u=n(w);t.fm.html(u);hr(t,t.sf,c(t),function(n){t.fm.html(n);r();i();lt(t)},function(){u.remove()})}else t.fm.html(nt(lf,[t.st,t.stp])),r();df.call(this,t,r)}}function rr(n){return n.d.find(":input")}function d(n){var t=[];t.push(n.d);t.push(n.f.find(".awe-btn"));n.api.enable=function(i){var r,u;if(n.enb=i,i){for(e(n.f,uu),r=0;r<t.length;r++)t[r].removeAttr(et);rr(n).removeAttr(et)}else{for(f(n.f,uu),u=0;u<t.length;u++)t[u].attr(et,et);rr(n).attr(et,et)}}}function b(n,t){var i=function(){};return u(n.v,i),n.api=i,t&&(i.load=function(i){return i&&(i.params&&(n.params=i.params),i.oparams&&(n.oparams=i.oparams)),t()}),g(n,function(){n.v.data("api",null)}),i}function ur(n,t){ie(n.d);f(n.d,"awe-load");var i=c(n);return gr(n,i),n.ldg=1,sr(n,i,function(i){var r=ct(i,n);gf(n,r);t(r)},function(){e(n.d,"awe-load");re(n.d);n.ldg=0;n.needpl&&(n.needpl=0,ur(n,t));n.lreq=i;pt(n,n.lrs,i)})}function gf(n,i){if(i&&i.d){i=i.d;var r=i.v;ft(r)&&(r=t);n.lrs=i.it;n.v.val(ri(r));o(n)}else n.lrs=i}function pt(n,t,i){n.v.trigger(tt,[t,i])}function gr(n,t,i){n.v.trigger(ni,[t,i])}function ne(n,t){n.v.trigger("awebeforeload",[t])}function wt(n,t){return n?n:t}function o(n,t){n.v.trigger(l,t);te(n.v)}function te(n){n.valid&&n.closest("form").length>0&&n.valid()}function bt(t,i){var u,r=t.val();return t.hasClass("awe-array")||i?(r.length||(r="[]"),u=r[0]==="["?n.map(br(r),function(n){return ht(n)}):[ht(r)]):u=[ht(r)],u}function fr(n,t){return ei(bt(n),t)}function kt(t){var r=[];for(var i in t)n.isArray(t[i])?r=r.concat(ei(t[i],i)):r.push({name:i,value:t[i]});return r}function ei(t,i){var u=[],r;for(n.isArray(t)||(t=[t]),r=0;r<t.length;r++)u.push({name:i,value:t[r]});return u}function c(t,r){var u=[],f,e;if(t.pro&&(u=u.concat(c(t.pro,1))),t.i&&(u=u.concat(ei(t.i,cf))),t.v&&!r&&(u=u.concat(fr(t.v,"v"))),t.oparams&&(u=u.concat(kt(t.oparams)),t.oparams=0),t.params&&(u=u.concat(kt(t.params))),t.data&&i(t.data.keys,function(i,r){u=u.concat(fr(n("#"+t.data.vals[r]),i))}),t.pars&&i(t.pars.keys,function(n,i){u=u.concat(ei(t.pars.vals[i],n))}),t.parf)for(f=t.parf,n.isArray(f)||(f=[f]),e=0;e<f.length;e++)u=u.concat(kt(f[e]()));return u}function ie(n){n.before(w)}function re(n){var t=n.prev();t.hasClass("awe-ldgcnt")&&t.remove()}function s(n){n&&(n.preventDefault?n.preventDefault():n.returnValue=!1)}function g(n,t,i){n.desf.push({f:t,type:i})}function oi(n,t,i,r){t.on(i,r);g(n,function(){t.off(i,r)},"ev")}function tf(n){var t=n.handler,i=n.event,r=n.el;r.on(i,n.selector,t);g(n.o,function(){r.off(i,t)},"ev")}function k(t,i){t.i&&n("[id="+t.i+"]").length>1&&pi("more than one element with id =",t.i);ft(t.enb)&&(t.enb=1);t.v=t.i&&n("#"+t.i)||t.elm&&n(t.elm)||pi("id not specified");t.desf=[];t.v.length||pi("can't find element "+t.i);t.name=t.i||t.nm||t.v&&t.v.attr("name");t.f=i?t.v:t.v.parent();t.lrs=[];ft(t.rtl)&&(t.rtl=ki(t.f));t.rtl&&f(t.f,"awe-rtl");t.d=i?t.v:t.f.find(".awe-display");t.v.data("o",t);g(t,function(){t.v.data("o",r)})}function er(n){n.v.val()?f(n.f,ou):e(n.f,ou)}function si(n){return n.outerHeight(!0)-n.height()}function rf(n,t){n?t.append('<tr class="awe-loadcont"><td>'+w+"<\/td><\/tr>"):t.append('<li class="awe-loadcont">'+w+"<\/li>")}function uf(n,t,i){n&&window.FormData?(i.data=new FormData(t[0]),i.contentType=!1,i.processData=!1):i.data=t.serializeArray()}function or(n,t,i,r){i||(i=1);var u=c(n,n);return u=u.concat(t),n.srl.empty(),rf(n.tl,n.srl),ff(n,u,i,0,0,r)}function ff(n,i,r,u,f,e){var o=[{name:"page",value:r}],h,s,c;n.tl&&(h=!n.srl.closest("table").find("thead:first").html(),o=o.concat({name:"isTheadEmpty",value:h}));u&&(o=o.concat({name:"isMoreClick",value:!0}),o=o.concat({name:"pivot",value:n.pivot||t}));s=i.concat(o);e&&gr(n,s);c=!e&&n.dataFunc||{};sf(n.searchUrl,c.search,n,s,function(t){var f=ct(t,n).d;u||n.srl.empty();ue(n,f,i,r,e);n.pivot=f.p;e?pt(n,t,f):n.srl.trigger(tt,[t,i])},function(){f&&f();n.srl.find(".awe-loadcont").remove()})}function ef(r,u,f){var e,o;u&&(u.th&&f.closest("table").find("thead:first").html(u.th),e=f.find(".awe-li").map(function(){return n(this).data("val")}),u.c?(o=n("<div/>").append(u.c),o.find(".awe-li").each(function(){n.inArray(n(this).data("val"),e)>=0&&n(this).remove()}),f.append(o.children())):u.it&&i(u.it,function(i){var u=r.mode?t:'<button type="button" class="awe-movebtn awe-btn" tabindex="-1"><i class="awe-icon"><\/i><\/button>';n.inArray(st(i),e)<0&&f.append('<li class="awe-li" data-val="'+vt(st(i))+'">'+u+yi(i,r)+"<\/li>")}))}function ue(t,i,r,u,f){var e,o,s;ef(t,i,t.srl);i.m&&(e=n('<div class="awe-morebtn">'+t.mt+"<\/div>").click(function(){u++;var i=n(this);i.after(n("<div class='awe-loading'><span><\/span><\/div>"));i.hide();ff(t,r,u,1,function(){i.closest(".awe-li").remove()},f)}),t.tl?(o=t.srl.find(".awe-li:not(.awe-morecont):first > td").length,s=n('<tr class="awe-li awe-morecont"><td colspan="'+o+'"><\/td><\/tr>'),t.srl.append(s),t.srl.find("tr:last td").append(e)):(t.srl.append('<li class="awe-li awe-morecont"><\/li>'),t.srl.find("li:last").append(e)))}function fe(n,i){return n===0&&(n="0"),n||(n=t),!i&&n.replace&&(n=vt(n)),n}function nt(n,t){return n.replace(/{(\d+)}/g,function(n,i){return typeof t[i]!="undefined"?t[i]:n})}function dt(t,i){return n.inArray(i,t)+1}function ee(t,i){return n.grep(t,function(n){return dt(i,n)})}function of(n,t){return ee(n,t).length}function sf(t,i,r,u,f,e){return i?n.when(i(u)).done(function(n){try{f&&f(n)}finally{e&&e()}}):hr(r,t,u,f,e)}function ut(t){return t.func?n.when(t.func(t.data,t.o)).fail(t.error).done(function(n){try{t.success&&t.success(n)}finally{t.complete&&t.complete()}}):awe.ajx(t,t.o)}function sr(t,i,r,u){return t.df?n.when(t.df(i)).fail(function(n){awe.err(t,n)}).done(function(n){try{r&&r(n)}finally{u&&u()}}):hr(t,t.url,i,r,u)}function hr(n,t,i,r,u,f){return nu(n,{url:t,data:i,success:r,type:f},u)}function nu(n,t,i){return t.complete=i,t.o=n,awe.ajx(t)}function oe(t,i){return typeof t=="string"&&(t={url:t},i&&(t.data=i)),t.type||(t.type="post"),t.traditional=!0,t.error=t.error||function(n,i,r){awe.err(t.o,n,i,r)},awe.bfr&&awe.bfr(t),n.ajax(t)}function tu(t){return!n(t.target).parents("."+yr).length&&!n(t.target).hasClass(yr)}function se(n){return"<i class='awe-cbc'><i class='awe-ce-ico "+yr+n+"'><\/i><\/i>"}function he(i){var r=i.lrs.p,f=i.lrs.pc,o=i.v,e=o.find(".awe-pager"),s;i.lrs.pgn?(s=f<8?cr(1,f,r):r<5?cr(1,5,r)+" ... "+hi(f,r):r>f-3?hi(1,r)+" ... "+cr(f-3,f,r):hi(1,r)+" ... "+cr(r-1,r+1,r,1)+" ... "+hi(f,r),e.html(s),e.find("button").click(function(){var t=n(this),r=t.data("p"),f=t.data("act"),e=t.closest(".awe-pager");i.ldg||n.when(u(o).load({start:function(){i.pg=parseInt(r)}})).done(function(){var i=e.find("[data-p="+r+"]"),t=f?e.find("[data-act="+f+"]"):i;t.length||(t=i);n(":focus").length||t.focus()})})):e.html(t)}function cr(n,i,u,f){for(var o=t,s=1,e=n;e<=i;e++,s++)o+=hi(e,u,e,f?s:r);return o}function hi(n,i,r,u){return r||(r=n),nt("<button type='button' data-p='{0}' data-act='{3}' class='awe-btn awe-pager-btn {1}'>{2}<\/button>",[n,i!==n?t:h,r,u||t])}function ce(){var t=n(":focus");window.getSelection?window.getSelection().empty?window.getSelection().empty():window.getSelection().removeAllRanges&&window.getSelection().removeAllRanges():document.selection&&document.selection.empty();t.is(":focus")||t.focus()}function iu(){var i=document.createElement("p"),t,n,u,r;return i.style.width="100%",i.style.height="200px",t=document.createElement("div"),n=t.style,n.position="absolute",n.top="0px",n.left="0px",n.visibility="hidden",n.width="200px",n.height="150px",n.overflow="hidden",t.appendChild(i),document.body.appendChild(t),u=i.offsetWidth,n.overflow="scroll",r=i.offsetWidth,u===r&&(r=t.clientWidth),document.body.removeChild(t),u-r}function at(n,t,i,r,u,f){for(;;){if(!n.length)break;var e=n.data("lvl");if(ft(e))at(n.children(":first"),t,i,r,u,f);else if(!e)return;if(e=parseInt(e,10),e<t)break;if(e===t&&!(n.hasClass("awe-gfoot")||!f&&n.hasClass("awe-nest")))break;(r===e&&!n.hasClass("awe-gfoot")||r>e)&&(r=!1);u?u.push(n):r||(i?n.hide():n.hasClass("awe-nest")&&!n.hasClass("awe-open")||n.show());n.hasClass("awe-collapsed")&&!r?at(n.next(),t,i,e,u,f):at(n.next(),t,i,r,u,f);break}}function le(n,t){function e(i){var r,u;for(r in t){if(u="("+r+")",n.substr(i+1,u.length).toUpperCase()===u.toUpperCase())return{p:r,l:u.length};if(n.substr(i+1,r.length).toUpperCase()===r.toUpperCase())return{p:r,l:r.length}}}for(var f,i="",u=[],r=0;r<n.length;r++){if(n[r]==="."&&(f=e(r),f)){r+=f.l;i&&(u.push(i),i="");u.push(f);continue}i+=n[r]}return i&&u.push(i),u}function ru(n,r,u,f,e){var o,s;return e="rl"+e,o=f[e],(!o||n.rsr)&&(o=le(r,u),f[e]=o),s=t,i(o,function(t){s+=t.p?awe.rgv(u[t.p],n.nenc):t}),s}var a=n(document),gt=n(window),i=awef.loop,ft=awef.isNull,p=awef.isNotNull,vt=awef.encode,pu,tr;n(function(){var t="background:white;padding:10px 20px;color:blue;font-size:15px;z-index:100000;";t+="position:absolute;right:0;";n("body").append('<a style="'+t+'" href="https://www.aspnetawesome.com">built using Trial version of ASP.net Awesome v. 6.3 https://www.aspnetawesome.com<\/a>')});var ci='<div class="awe-loading"><span><\/span><\/div>',w='<span class="awe-ldgcnt">'+ci+"<\/span>",et="disabled",l="change",lr="focusin",hf="focusout",yt="awepch",y="click",ni="awebeginload",tt="aweload",cf="__aweconid",li="<div class='awe-empty'>&nbsp;<\/div>",r=null,ai="touchstart mousedown",ar=" ",ti=".awe-row",uu="awe-"+et,h="awe-selected",fu="awe-changing",eu="awe-dragging",ou="awe-hasval",vr="awe-groupable",yr="awe-nonselect",su="."+h,pr=":input[name]",lf='<input type="text" name="search" class="awe-searchtxt" placeholder="{1}..."/><button type="button" class="awe-searchbtn awe-btn">{0}<\/button>',af="<input type='hidden' name='{0}' value='{1}' />",hu='<col class="awe-idn"/>',t="",vi=".",ii=Math.max,wr=Math.min,vf=Math.round,ot={},ri=function(n){return typeof n=="object"?JSON.stringify(n):n},br=n.parseJSON,v=function(){},kr={"&":"&amp;","<":"&lt;",'"':"&quot;","'":"&#39;",">":"&gt;"};return pu=function(){var n={};return{setItem:function(t,i){n[t]=i},getItem:function(t){return n[t]},removeItem:function(t){delete n[t]}}}(),tr=0,{version:"6.3.19",lerr:pi,err:function(){},errMsg:function(){return t},test:function(){},ach:o,cllp:at,gd:sr,pnn:pf,val:bt,scrollw:iu,ppk:"awe20_",gmd:r,tmd:r,rdd:ir,params:c,rgv:fe,flash:vu,format:nt,tabbable:yf,dgcf:nr,ajx:oe,guf:ut,srl:kt,addDestr:g,storage:ot,uninitPopup:function(n){awe.destroy(awe.storage[n])},bind:oi,obind:tf,grid:function(o){function gu(){ci=b.find(".awe-itc");lr=ci.first();yr=d.find(".awe-itc")}function uf(n){return ci.find(rf+'[data-k="'+wi(n)+'"]')}function k(){return o.columns}function ff(itm,col,ignoreFormat){var val=t;return!ignoreFormat&&(col.F||col.T)?col.F?val=eval(col.F)(itm,col.P):col.T&&(val=ru(o,col.T,itm,col,"cf")):val=ignoreFormat&&col.Ft?ru(o,col.Ft,itm,col,"f"):awe.rgv(itm[col.px],o.nenc),val}function pi(t){return!n(t.target).closest(".awe-grid").is(b)}function vf(){var n=(o.gl+o.th)*lt;return i(k(),function(t){st(t)||(n+=t.W||t.Mw)}),n}function ef(n,t){var i=n.attr("colspan"),r=i?parseInt(i,10):1;n.attr("colspan",r+t)}function of(t){yf(t);tt.find('td[data-i="0"]').each(function(i,r){ef(n(r),t)})}function yf(n){if(n>0)while(n--)yi.prepend(hu)}function pf(){return n(ti+su,b).map(function(){return l.model(n(this))}).get()}function fu(n,t){var i=tr+o.th-(n-1),r;return t?(r=k().length-kr,i+=r):i+=1,i}function sf(n){var t=0;try{n===1?t=pu:n===2?t=sessionStorage:n===3&&(t=localStorage)}catch(i){}return t}function wf(){et={};vt&&vt.removeItem(o.pk);yt&&yt.removeItem(o.cpk)}function ou(n,t,i){return n.I=t.I,(n.R||i)&&(n.W=t.W),n.Hid=t.Hid,(n.G||i)&&(n.Gd=t.Gd,n.Gk=t.Gk),(n.S||i)&&(n.So=t.So,n.Sort=t.Sort),n}function ei(){try{if(vt&&vt.setItem(o.pk,ri([{pg:o.pg,So:o.So},et])),yt){var t=n.map(k(),function(n){return ou({},n,1)});yt.setItem(o.cpk,ri(t))}}catch(i){}}function bf(){function a(n,t){for(var i=0;i<n.length;i++)if(n[i].I===t)return i;return-1}var n,u,f,s,h,c,e,l;if(yt&&(n=yt.getItem(o.cpk),n)){n=br(yt.getItem(o.cpk));for(var r=0,t=0,i=k();r<n.length&&t<i.length;)u=n[r],f=i[t],u.I===f.I?(ou(f,u),r++,t++):~a(n,f.I)?(s=a(i,u.I),~s?(h=i[s],i[s]=f,i[t]=h,ou(h,u),r++,t++):r++):t++}vt&&(c=vt.getItem(o.pk),c&&(e=br(c),e&&e.length===2&&(l=e[0],o.pg=l.pg,o.So=l.So,et=e[1])))}function cu(n){return k()[n.data("i")]}function hf(n){ht.find(".awe-col").length||ht.empty();ht.append(nt("<div class='awe-col awe-sortable {3}' data-i='{1}'><div class='awe-il '>{2}{0}<\/div>{4}<\/div>",[n.H,n.ix,yu,or[n.Sort]+" "+(n.Hcc||t),n.Gr?"<div class='awe-il awe-remb'><i class='awe-rem'><\/i><\/div>":t]))}function kf(){function a(){i.remove()}function h(){e(ht,"awe-highlight");i.hide()}function y(r){var f=r.drgo;return i=b.find(".awe-reh").clone().appendTo(l),u=f.hasClass(vr),s=f.hasClass("awe-rer"),t=f.data("i"),n("<table/>").append(n("<tr/>").append(f.clone()))}function c(r){var c=r.x,u,f,o,e;if(s&&(u=-1,tt.find(".awe-hc").each(function(t,i){var r=n(i);return o=r.offset(),e=o.left,c>e&&c<e+r.outerWidth()?(f=r,u=f.data("i"),!1):void 0}),f)){if(e-=5,(t<u&&!bt||bt&&t>u)&&(e+=f.outerWidth()),t!==u&&f.hasClass("awe-rer"))return i.css({left:e,top:o.top+1,height:f.outerHeight()+1}).show(),u;h()}}function w(n){var i,r,u;s&&(i=c(n),p(i)&&(r=k(),u=r.splice(t,1),r.splice(i,0,u[0]),b.trigger("awereorder"),au(),ei()))}function g(){u&&f(ht,"awe-highlight")}function nt(n){u&&(o.ldg||df(n.drgo.data("i")))}function it(){return ni.css("overflow")==="hidden"?v:nr(ni)}var i,t,u,s,l=n("body");ir(tt,"."+vr+", .awe-rer",[ht,tt],[nt,w],"awe-dcol",r,[g,c],a,h,[{c:ni,x:1,p:o.syncon?d:ni},{c:gt,x:1}],y,r,it())}function df(n){var t=k()[n],u;t.Gd||(u=0,i(k(),function(n){n.Gd&&n.Gk>u&&(u=n.Gk)}),ot(r,function(){o.p1&&(o.pg=1);hf(t);t.Gd=1;t.Gk=u+1;vi(1)}))}function gf(n){for(var i=t,r=0;r<n-1;r++)i+="<td class='awe-idn'><\/td>";return i}function te(i,r,u,f){var s=t,e=0;return n(k()).each(function(n,h){var y;if(st(h))return 1;var a=ff(i,h,r),p=t,v=t,c=h.Cc||t;e===0&&(f&&(p+=l.ceb()),(o.th||f)&&(y=fu(u),y>1&&(v+=" colspan='"+y+"' "),f||(c+=" awe-lf")));f&&o.cohc&&!e&&(c+=" awe-ceb");a||(a=li);c&&(v+=" class='"+c+"'");s+="<td"+v+">"+p+a+"<\/td>";e++}),s}function bi(n,i,r,u,f,e,s,h,c,a,v){var g=wt(h,i),w,y,b,k,d;return o.st&&n&&(r+=" awe-selectable"),o.rcf&&n&&(r+=" "+ru(o,o.rcf,n,o.rls,"rcc")),c&&(w=di[wi(n[o.k])],w&&(r+=" "+w+"-on")),y=t,b=t,o.k&&n&&p(n[o.k])&&(y+='data-k="'+wi(n[o.k])+'"'),u&&(b+="display:none;"),a&&(y+=a),y+='data-lvl="'+i+'" data-g="'+o.i+'"',n&&(ft(v)&&(v=o.nid++),o.kv[v]=n,y+=" data-i='"+v+"' "),k={clss:r,style:b,attr:y,itm:n,con:s,ind:g,ceb:e,nf:f},d=l.itmf(k),!o.rsr||s||f||(o.rsr=0),d}function rr(n,u,f,e,s,h,c,a,v){function k(){function ut(){var y=t,o,p,e,w;if(i(n.gs,function(n){function t(){var t=rr(n,u+1,f,r,r,r,r,r,v);return v=r,t}y+=l.nodef&&!a?l.nodef({gv:n,lvl:u+1,h:f,ren:t}):t()}),o=n.it,o)for(p=u,n.nt!==2&&p++,e=0;e<o.length;e++){if(s){s--;continue}if(w=b(e),y+=bi(o[e],p,"awe-row"+w,f,0,r,r,r,c,r,v),v=r,h&&h===e+1)break}return y}function ft(){var i=t,r;return n.f&&(r=tr+1,i=bi(n.f,u,"awe-gfoot",f,1,0,0,r)),i}var k=t,e,nt,rt;if(y){var d=y.i,g=y.k+u,tt=t,it=n.nt===3;w=it||!p(et[g])||y.ip?y.cl:et[g];e=w?" awe-collapsed ":t;e+="awe-ghead ";d&&(e+="awe-row ");nt='data-h="'+g+'"';it&&(nt+=' data-l="1"');p(y.c)&&!d&&(e+=o.cohc?" awe-ceb":t,tt=l.ghead(y,u));rt=bi(d,u,e,f,0,1,tt,0,c,nt,v);v=r;k+=rt}return!f&&w&&(f=1),k+=l.ncon&&!a&&l.ncon({gv:n,ren:ut,lvl:u})||ut(),k+ft()}e=e||0;var w=0,y=n.h,b=function(n){return(n+e)%2==0?t:" awe-alt"};return o.alt||(b=function(){return t}),k()}function vi(n){var p=0,w=t,ct=t,e,l,u,ft,f,rt;n||(ht.empty(),yi.empty(),tt.empty());e=1;o.hg&&i(o.hg,function(n){e=ii(e,n.L+2)});var h=[],c=[],ut=k(),at,b=yr.width();for(l=0;l<ut.length;l++)u=ut[l],u.tmpw=0,u.ix=l,u.Gd&&(h.push(u),u.Sort||(u.Sort=1)),st(u)||(u.W?b-=u.W:(u.Mw>o.cw&&(at=1),c.push(u)));if(o.gl=h.length,at&&(b-=(o.gl+o.th)*lt,c.sort(function(n,t){return t.Mw-n.Mw}),ft=function(n){if(c.length>n){var t=c[n],i=b/c.length;t.Mw>o.cw&&t.Mw>i&&(t.tmpw=t.Mw,b-=t.Mw,ft(n+1))}},ft(0)),i(ut,function(i){if(!st(i)){var r=i.W||i.tmpw;p+=r||i.Mw;n||(w+="<col "+(r?"style='width:"+r+"px'":t)+" data-i='"+i.ix+"' />")}}),o.sh&&!n){var bt={},et={},vt=1,yt;for(f=0;f<e;f++){var a=t,s,pt,ot=1,d=1,wt,y=e-1,g=[],it=v;i(k(),function(n,u){function k(n){d=1;n&&(d+=o.th);wt=u;s=l;pt=w;y=c}function tt(n){if(vt||yt===u){for(var t=0;t<h.length;t++)a='<td class="awe-idn" rowspan='+n+"><\/td>"+a;yt=u;vt=0}}var l,w,c,b,v,p;st(n)||(c=e-1,o.hg&&(n.Hg&&i(n.Hg,function(n){var i=o.hg[n],t=i.L;t===f?(l=i,w=n):t>f&&(c=c?wr(c,t):t)}),l?w===pt?(d++,y=wr(y,c),g.push(u)):(s&&it(),k(!u),g=[u]):(s&&it(),k(),g=[]),it=function(){if(s){ot=y-f;var n="awe-hgc "+s.Cc;a+='<td data-i="'+wt+'" colspan="'+d+'" rowspan='+ot+' class="'+n+'"><div class="awe-col">'+s.C+"<\/div><\/td>";s=r;i(g,function(n){et[n]=y});tt(ot)}}),b=et[u],l||b&&b!==f||(v=t,!u&&o.th&&(v="colspan='"+(o.th+1)+"'"),p=e-f,p>1&&(v+=" rowspan="+p),a+=nt("<td data-i={0} class='awe-hc {8} {3} {4} {5} {7}' {6}><div class='awe-col' unselectable='on' >{1}{2}<\/div><\/td>",[u,n.H||li,n.S?yu:t,n.S?"awe-sortable":t,n.G?vr:t,or[n.Sort],v,n.Re?"awe-rer":t,n.Hcc||t]),bt[u]=1,et[u]=-1,tt(p)))});it();ct+="<tr>"+a+"<\/tr>"}}if(!n){for(rt=o.gl+o.th,rt&&(p+=rt*lt);rt--;)w=hu+w;yi.append(w);tt.append(ct);nf.css("min-width",p+"px");o.syncon&&du.css("min-width",p+"px")}h.sort(function(n,t){return n.Gk-t.Gk});n||i(h,function(n){hf(n)});o.gl||ht.html(o.gbt)}function ur(){var u,i,c,r;if(b.is(":visible")){ki(b)?(f(b,"awe-rtl"),bt=1):f(b,"awe-ltr");u=b.outerHeight(!0)-d.height();i=n("<div><\/div>");i.css("overflow-y","scroll");i.css("position","relative");i.append("<p/>");b.append(i);c=i.find("p").position().left;i.remove();r=["left","right"];c<3&&r.reverse();var e=iu()+"px",l="padding-",s=l+r[0],h=l+r[1];si.css("margin-bottom","-"+e);o.h?(d.css("overflow-y","scroll").height(ii(o.h-u,70)),si.css(s,e).css(h,t),pr[0]&&(pr.css(s,e),pr.css(h,t))):(d.css("height",t).css("overflow-y",t),si.css(s,t).css(h,t));o.mh&&d.css("min-height",o.mh-u)}}function au(n,t){var u,f,r,e;if(o.lrso)return ot();!o.ldg&&o.lrs&&(di={},u=it(d,1),f=it(d),hi=o.lrs.fr,r=o.lrs.dt,hi?si.show():si.hide(),vi(n),kr=0,i(k(),function(n){st(n)&&kr++}),r.gs&&(hi=0),d.css("min-height",d.height()),o.nid=0,o.kv={},o.rsr=1,lr.empty(),hi&&lr.html(rr(r,0,0,0,0,hi)),e=rr(r,0,0,0,hi,0),n&&t>0&&of(t),yr.empty().append(e),gu(),d.css("min-height",""),rt(d,u,1),wu&&rt(d,f),d.trigger("scroll"),wu=1,ur(),b.trigger("awerender"))}function cf(n,t,i){var u,r;return(t||(t=uf(n)),u=parseInt(t.data("lvl"),10),!t.length)?[]:(r=[t],at(t.next(),u,0,0,r,i),r)}function ie(n,t,i){return lf(uf(n),t,i)}function lf(r,u,f){var c,s;if(!r.length)throw new Error("can't find row to update");var h=dr(r.data("k")),a=r.hasClass("awe-alt")?1:0,v=r.data("i"),e=o.lreq.slice(0);return e.push({name:"key",value:h}),u&&(e=e.concat(kt(u))),c=l.updldg(r),s=parseInt(r.data("lvl"),10),sr(o,e,function(u){var e=ct(u,o),b,y,w,k,c;p(e)&&(o.rsr=1,b=bu(e.dt.gs),y=t,(bu(e.dt.it)||b)&&(w=o.th,k=s-o.gl+(e.th-1),o.th=ii(w,k),c=o.th-w,c&&(of(c),i(ci.children("tr"),function(t){ef(n(t).children(":not(.awe-idn):first"),c)})),y=rr(e.dt,s-1,0,a,0,0,1,1,v)),l.lzrep(y,r,h,f))},function(){c.remove()})}function oi(row,clss,cmd,forceRem){function closeAll(){ncfg.S&&ci.find('.awe-nest.awe-open[data-g="'+o.i+'"]').each(function(){af(n(this))})}function showNest(n){di[row.data("k")]=clss;f(row,clss+"-on");f(n.show(),"awe-open")}for(var el,nests,clnest,fnest,cell,ncfgs=o.nsts,ncfg=ncfgs[0],key=l.model(row)[o.k],j=0;j<ncfgs.length;j++)el=ncfgs[j],el.C===clss&&(ncfg=el);if(cmd!==1&&row.nextUntil(":not(.awe-nest)",".awe-open:not(.n-"+clss+")").each(function(t,i){oi(row,n(i).data("nest"),1)}),nests=row.nextUntil(":not(.awe-nest)",".n-"+clss),cmd===1){nests.length&&(clnest=nests.first(),di[row.data("k")]=r,e(row,clss+"-on"),ncfg.L&&!forceRem?e(clnest.hide(),"awe-open"):clnest.remove());return}if(nests.length)fnest=nests.first(),fnest.is(":visible")&&cmd!==2?ncfg.T&&oi(row,clss,1):(closeAll(),showNest(fnest));else{closeAll();var lvl=row.data("lvl"),nestAttr='data-nest="'+clss+'" data-nk="'+wi(key)+'" data-g="'+o.i+'" data-i="'+row.data("i")+'"',nestRow=n(bi(0,lvl,"awe-nest n-"+clss,0,0,0,"<td colspan='"+fu(lvl,1)+"' class='awe-nestcell'><\/td>",r,r,nestAttr));if(row.after(nestRow),showNest(nestRow),cell=nestRow.find(".awe-nestcell"),ncfg.U){var zlds=n(w),zcelltm=setTimeout(function(){cell.append(zlds)},100),zsd=c(o);zsd=zsd.concat(kt({key:key}));hr(o,ncfg.U,zsd,function(n){cell.html(n)},function(){clearTimeout(zcelltm);zlds.remove()})}else ncfg.F&&eval(ncfg.F)(row,nestRow,cell)}}function af(n,t,i){if(n.is(".awe-nest")){var r=n.closest(".awe-itc").find('.awe-row[data-i="'+n.data("i")+'"]');oi(r,n.data("nest"),1,t)}else oi(n,t,1,i)}function re(t){ku.on(y,"."+t.C,function(i){if(!pi(i)){var r=n(this).closest(ti);oi(r,t.C)}})}function ot(n,r,u){function e(){var e,a,s,h;r&&r();o.ldg=1;e=[];a=[];i(k(),function(n){n.Gd?e.push(n):n.Sort!==0&&a.push(n)});e.sort(function(n,t){return n.Gk-t.Gk});a.sort(function(n,t){return n.So-t.So});var v=e.concat(a),y=[t,"asc","desc"],f=c(o);for(n&&(o.pg=n),f.push({name:"page",value:o.pg}),f.push({name:"tzo",value:(new Date).getTimezoneOffset()}),s=0;s<v.length;s++)f.push({name:"SortNames",value:v[s].P}),f.push({name:"SortDirections",value:y[v[s].Sort]});for(h=0;h<e.length;h++)f.push({name:"Groups",value:e[h].P}),f.push({name:"Headers",value:e[h].H});return o.sc&&f.push({name:"Cs",value:ri(k())}),b.find(".awe-gblc").html(w),gr(o,f),sr(o,f,function(n){var t=ct(n,o),e,s,r;t&&(o.pg=t.p,o.ps=t.ps,o.lrs=t,o.lrso=0,n.cs&&(o.columns=JSON.parse(n.cs),o.rls={}),e=o.th,t.th>e&&(o.th=t.th),s=o.th-e,r=t.k,t.a&&r&&(r=lu(r)),o.k=wt(o.ck,r),vt||(et={}),i(k(),function(n){n.px=t.a&&n.P?lu(n.P):n.P}),tr=t.gc,o.ldg=0,o.v.trigger("awebfren"),l.buildPager(o),au(u,s),ei());o.lreq=f;o.lres=n},function(){b.find(".awe-gblc").empty();o.ldg=0;o.needpl&&(o.needpl=0,ot(1));pt(o,o.lres,f)})}var f={load:e};return ne(o,f),f.load?f.load():void 0}function st(n){return!o.sgc&&n.Gd||n.Hid}var or=[t,"awe-asc","awe-desc"],yu='<i class="awe-sord"><\/i>',l=function(){},b=n("#"+o.i),gi,nu,tr,rf,uu,ai,fi,eu,vt,yt,fr,er,vu;o.v=b;o.th=0;o.ih=o.h;o.rls={};o.nid=0;o.kv={};o.alt=1;o.syncon=1;o.desf=[];b.data("o",o);g(o,function(){b.data("o",null)});var wu=0,ku=b.find(".awe-mcontent"),ht=b.find(".awe-groupbar"),yi=b.find("colgroup"),d=b.find(".awe-content"),si=b.find(".awe-gfc"),cr=si.children().first(),du=b.find(".awe-tablw"),hi,ci,lr,yr;gu();var bt,pr=b.find(".awe-header"),ni=b.find(".awe-hcon"),nf=b.find(".awe-colw"),tt=b.find(".awe-hrow"),ut,lt=16,kr,di={},et={};if(o.So=100,o.pg=1,gi=n.extend(!0,{},o),nu=o.pk,o.pk=awe.ppk+wt(nu,o.i)+o.prs,o.cpk=awe.ppk+"c_"+wt(nu,o.i)+o.cps,tr=0,u(b,l),g(o,function(){b.data("api",null)}),rf='.awe-row[data-g="'+o.i+'"]',l.desf=[],l.ft={},l.update=ie,l.select=cf,l.lay=ur,l.render=au,l.persist=ei,l.clearpersist=wf,l.getSelection=pf,l.gcv=ff,l.ich=st,l.model=function(n){return o.kv[n.data("i")]},l.renderRow=function(n,t,i){o.rsr=1;var u=o.gl+1+o.th;return bi(n,wt(t,u),"awe-row",0,0,0,0,0,1,r,i)},l.rem=function(n){o.kv[n.data("i")]=r;n.remove()},l.getRequest=function(){return o.lreq},l.getResult=function(){return o.lres},l.reset=function(){o.ldg||ot(1,function(){et={};o.columns=n.extend(!0,[],gi.columns);o.pg=gi.pg;o.So=gi.So;vi(1);b.trigger("aweinit")})},l.load=function(n){function t(){n&&(n.start&&n.start(),n.params&&(o.params=n.params),n.oparams&&(o.oparams=n.oparams),n.group&&i(k(),function(t){var i=dt(n.group,t.P);i?(t.Gd=1,t.Gk=i):t.Gd=0}),n.sort&&i(k(),function(t){var u=0,r=0;i(n.sort,function(n,i){if(t.P===n.Prop)return r=n,u=i+1,!1});r?(t.Sort=r.Sort,t.So=u):t.Sort=0}));vi(1)}return ot(r,t)},l.buildPager=he,l.conw=vf,l.itmf=function(n){var t=n.attr;return n.style&&(t+='style="'+n.style+'"'),nt("<tr {2} class='{3}' >{0}{1}<\/tr>",[gf(n.ind),n.con?n.con:te(n.itm,n.nf,n.ind,n.ceb),t,n.clss])},l.lzrep=function(n,t,r,u){t.before(n);var f=cf(r,t,u);i(f,function(n){n.remove()})},l.ceb=function(){return se(o.cohc?t:" awe-ceb")},l.ghead=function(n,t){return"<td colspan='"+fu(t,1)+"'>"+l.ceb()+n.c+"<\/td>"},l.updldg=function(t){var i=n(w);return t.find("td:not(.awe-idn):first").prepend(i),i},o.api=l,awe.ggmd&&awe.ggmd(o),uu=o.md||awe.gmd,uu&&i(uu,function(n){n(o)}),ai=r,fi=o.st,kf(),eu=o.fs,fi)b.on(y,ti+ar+eu,function(t){var i,u,c,o,s,l;pi(t)||tu(t)&&(i=n(this),eu&&(i=i.closest(ti)),u=ci.children(),c=1,t.shiftKey&&ai!==r&&fi>=2?(t.ctrlKey||fi!==2||e(u,h),o=u.index(i),s=u.index(ai),o>s&&(o=-(s=(o+=s)-s)+o),(n(t.target).closest(ti).hasClass(h)?e:f)(u.slice(o,s+1),h),fi===3&&(ai=i)):t.ctrlKey&&fi===2||fi===3?(i.toggleClass(h),ai=i):(ai=i,l=!i.hasClass(h),e(u,h),l?f(i,h):c=0),c&&ce(),b.trigger("aweselect"))});vt=sf(o.prs);yt=sf(o.cps);gt.resize(ur);b.find(".awe-reload").click(function(){l.reset()});b.on(y,".awe-remb",function(t){var u,r;pi(t)||o.ldg||(u=cu(n(this).closest(".awe-col")),u.Gd=0,r=0,i(k(),function(n){n.So<r&&(r=n.So)}),u.So=r-1,ei(),vi(1),ot())});ku.on(y,".awe-ceb",function(t){if(!pi(t)&&!n(t.target).closest(".awe-nonceb").length){var i=n(this).closest(".awe-ghead"),r=parseInt(i.data("lvl"),10),u=i.next(),o=i.data("h");i.hasClass("awe-collapsed")?(i.data("l")&&(i.data("l",0),lf(i)),e(i,"awe-collapsed"),at(u,r,!1),et[o]=0):(f(i,"awe-collapsed"),at(u,r,!0),et[o]=1);ei()}});fr=0;tf({el:b,o:o,event:y,selector:".awe-sortable",handler:function(t){function c(){o.p1&&(o.pg=1);u.Sort=s;f(e(b.find("[data-i="+h.data("i")+"]"),"awe-asc awe-desc"),or[s]);u.Gd||(o.s&&i(k(),function(n,t){if(n.Gd||n.P===u.P)return 1;n.Sort=0;e(tt.find("[data-i="+t+"]"),"awe-asc awe-desc")}),s===1&&(cu(h).So=++o.So));ei()}if(!pi(t)&&!o.ldg){fr=0;var h=n(this).closest(".awe-sortable"),u=cu(h),s=u.Sort+1;s===3&&(s=u.Gd?1:0);ot(r,c,1)}}});d.on("scroll",function(){var n=it(d);rt(ni,n);rt(cr,n)});cr.on("scroll",function(){var n=it(cr);rt(ni,n);rt(d,n)});if(o.nsts)for(l.nestClose=af,l.nestOpen=function(n,t){oi(n,t,2)},l.nestToggle=function(n,t,i){oi(n,t,0,i)},er=0;er<o.nsts.length;er++)re(o.nsts[er]);tt.on("mousemove","td:not(.awe-idn)",function(t){var u=n(t.target).closest("td"),r=u.data("i"),h=u.offset().left,c=u.outerWidth(),f=h-5,e;if((fr++,!(fr<3))&&(t.pageX>c/2+h?(f+=c,r!==k().length-1||bt||(f-=5),bt&&r--):bt||r--,r>-1&&k()[r].R)){if(!ut){ut=n('<div class="awe-resh"/>').appendTo("body");e=function(t){var i=n(t.target);i.is(ut)||i.closest(".awe-header").length||vu||(a.off("mousemove",e),ut.remove(),ut=0)};a.on("mousemove",e);ut.on("mousedown",function(t){var r,e,p,w;s(t);r=n(this).width(20).data("i");vu=1;var c=yi.find("[data-i="+r+"]"),b=tt.find("[data-i="+r+"]"),d=t.pageX,h=0,l=0,u=k()[r].W,f=lt*(o.th+o.gl),v=b.outerWidth(),y=k()[r].Mw;i(k(),function(n,t){st(n)||(f+=n.W||n.Mw,t===r||n.W||(l=1))});e=r?0:o.th*lt;u?u+=e:(u=v,f+=u-(y+o.th*lt));p=ni.width();w=function(n){var tt,w,t,g,nt,it,s;n.pageX<a.width()-10&&ut.css({left:n.pageX-10,top:n.pageY-10});tt=n.pageX;w=tt-d;bt&&(w=w*-1);t=0;l?t=u+w:(g=p-(v+w),nt=f-u,g<nt&&(g=nt),it=nt/g||1,t=(v+w)*it);t<1&&(t=1);s=1;t<y&&(s=y/t,t=t*s);t-=e;c.css("width",t+"px");k()[r].W=t;var b=t,rt=lt*(o.th+o.gl),ft=(f-(rt+(u-e)))*s+t+rt;if(!l&&(s>1||h)&&p>=ft+5)i(k(),function(n,t){if(t!==r&&k()[t].R&&!st(n)&&n.W){h||(n.ciw=n.W);var i=n.ciw*s;yi.find("[data-i="+t+"]").css("width",i+"px");n.W=i;b+=i}}),b+=lt*(o.th+o.gl),h=1,s<=1&&(h=0);else{if(s>1)return;b+=f-(u-e)}o.syncon&&du.css("min-width",b+"px");nf.css("min-width",b+"px");c.trigger("awecolresize")};a.on("mousemove",w);a.one("mouseup",function(){vu=0;a.off("mousemove",w);ut.width(10);ei();c.trigger("awecolresizeend")})})}ut.data("i",r).css({left:f,top:u.offset().top,height:u.outerHeight()})}});bf();vi();ur();b.trigger("awefinit");b.trigger("aweinit");o.l&&ot();ui(o,function(){o.ldg?o.needpl=1:ot(1)},!o.lpc)},form:function(t){function r(i){function f(){if(t.notok=1,t.ua){var n={url:wt(t.u,r.attr("action")),success:function(n){typeof n!="object"&&t.ff?r.html(n):(t.sf&&t.sf(n),r.trigger("aweformsuccess",n));t.notok=0}};uf(t.ufd,r,n);r.trigger("submit");nu(t,n,function(){r.trigger(tt)})}else r.data("aweex",1),t.u&&r.attr("action",t.u),r.submit()}var r=n(this);if(!r.data("aweex")&&(s(i),!t.bf||t.bf(r)!==!1)&&!t.notok){if(t.c)return t.p.d=n("<div>"+t.ms+"<\/div>"),t.p.btns=[{text:t.yes,click:function(){f();u(n(this)).close()},k:1},{text:t.no,click:function(){u(n(this)).close()},c:1}],fi(t),u(t.p.d).open(),!1;f()}}t.desf=[];var i="."+t.cl;ot[t.i]=t;n(document).off("submit.awe",i).on("submit.awe",i,r)},acw:v,autocomplete:function(n){function r(){pt(n)}k(n,1);b(n);d(n);var i=n.v;awe.acw(n);n.num&&i.keydown(yu(n,i,t,v));gi(n,r)},numeric:function(i){function ut(t){n(t.target).closest(i.f).length||n(":focus").is(r)||(a.off(lr+ar+y,ut),g=0,r.change(),r.val(i.ff(b(0,i.dec,i.v))))}function ht(n){var t;if(n.indexOf(u)===-1)return n;for(t=n.length-1;t>0;t--)if(n[t]!=="0")break;return n[t]===u&&t--,n.substr(0,t+1)}function et(n){var t=n.indexOf(vi)+1;return t?n.length-t:0}function ot(n,i){var r=n.replace(",",vi);return(r===vi||r===t)&&(r="0"),i?parseFloat(r):r}function b(n,f,e,o,s){var a=(e||r).val(),l,h,c;return!a&&!n?t:(l=ot(a),h=parseFloat(l),isNaN(h)&&(h=ot(i.v.val(),1)),c=f||ii(et(l),et(rt.toString())),o&&c<i.dec&&(c=i.dec),!o&&ft(i.dec)&&(c=0),n&&(h+=n),s||(p(i.min)&&(h=ii(h,i.min)),p(i.max)&&(h=wr(h,i.max))),h.toFixed(c).replace(vi,u))}function it(n){nt=1;r.val(b(rt*(n||k))).keyup()}function ct(){d||(s=setInterval(it,50))}function st(n){if(l!==n&&l)l=t;else if(l=n,d=0,setTimeout(function(){r.is(":focus")||r.focus();it()}),!(c+s)){c=setTimeout(ct,300);a.one("mouseup touchend touchcancel",function(){d=1;clearTimeout(c);clearInterval(s);c=0;s=0;e(i.f.find(".awe-spinbtn"),h);r.is(":focus")||r.focus()})}}var r=i.d,u=i.sep,rt=i.stp,k=1,s,c,d=1,l,w=i.api,g,nt,tt;if(w.foh=v,tt=i.v.val(),w.render=function(){var t=i.v.val(),n;t&&(n=b(0,0,i.v,1,1),r.val(i.ff(n)))},r.keydown(yu(i,r,u,it)),r.keydown(function(n){nt&&n.which===13&&r.change()}),w.dch=function(){var n=b(0,i.dec);n=ht(n);i.v.val(n);n!==tt&&(tt=n,o(i,{awe:1}));nt=0},w.fih=function(){if(!g){g=1;r.val(i.v.val());a.on(lr+ar+y,ut)}},i.ss){i.f.find(".awe-spinbtn").on("mousedown",function(){f(n(this),h)}).on("mouseup",function(){e(n(this),h)});i.f.find(".awe-spinup").on(ai,function(n){k=1;st(n.type)});i.f.find(".awe-spindown").on(ai,function(n){k=-1;st(n.type)})}},chk:function(n){var r,i;k(n);r=b(n);r.render=function(){n.load()};d(n);n.load=function(){rr(n).prop("checked",n.v.val()==="true")};i=n.md||awe.chkmd;i&&i(n);n.load();n.d.change(function(){n.v.val(rr(n).is(":checked")?"true":n.efv?t:"false");o(n)})},txt:function(n){var t,i;k(n);t=b(n);d(n);i=n.d;n.ff=n.ff||function(n){return n};t.foh=function(){t.render()};t.fih=function(){i.val(n.v.val())};t.dch=function(){n.v.val(i.val());o(n,{awe:1})};n.d.on(lr,function(n){t.fih(n)}).on(hf,function(n){t.foh(n)}).on(l,function(n){t.dch(n)}).on("keyup",function(){n.v.val(n.d.val())}).on("keydown keyup",function(t){n.v.trigger(t)});n.v.on(l,function(n,i){i&&i.awe||t.render()});t.render=function(){i.val(n.ff(n.v.val()))};n.num&&awe.numeric(n);t.render()},tmp:function(n){k(n);n.d.change(function(){var i=n.d.eq(0).val()+n.s+n.d.eq(1).val()+" "+(n.d.eq(2).val()||t);n.v.val(i).change()})},dpw:v,dtp:function(n){k(n);var i=n.v,r=n.f.find(".awe-clearbtn");b(n);d(n);awe.dpw(n);r.click(function(n){s(n);i.val(t).change()});er(n);n.v.change(function(){er(n)})},ajaxList:function(t){function i(n){return n||(n=1),or(t,[],n,1)}t.v=n("#"+t.i);t.srl=t.tl?t.v.find(".awe-srl"):t.v;t.mode="s";t.desf=[];b(t,i);i();ui(t,function(){i(1)},!t.lpc)},checkboxList:function(t){function r(){return n(t.d.find("input:checked")).map(function(){return n(this).val()}).get()}function u(n){function u(u){var e=bt(t.v),f;u&&i.render();f=r();t.v.val(di(f));wu(f,e)?n&&t.v.trigger(yt,n):o(t,n)}return ur(t,u)}k(t);var i=b(t,u);i.render=function(){du(t,"checkbox")};d(t);i.initev=function(){t.v.on(l,function(n,t){t&&t.i||i.render()});t.d.on(l,"input:checkbox",function(){t.v.val(di(r()));o(t,{i:1})})};t.md&&t.md(t);gi(t,u);i.initev()},destroy:function(n){n&&n.desf&&(i(n.desf,function(n){n.f()}),n.desf=[])},destroyCont:function(t){function i(){awe.destroy(n(this).data("o"))}t.find(".awe-grid,.awe-val").each(i)},radioList:function(n){function r(){var i=t,r=n.d.find("input:checked");return r.length&&(i=r.val()),i}function u(t){function u(u){u&&i.render();var f=r();n.v.val()!==f?(n.v.val(f),o(n,t)):t&&n.v.trigger(yt,t)}return ur(n,u)}k(n);n.nm="item"+n.name;var i=b(n,u);i.render=function(){du(n,"radio")};d(n);i.initev=function(){oi(n,n.v,l,function(n,t){t&&t.i||i.render()});n.d.on(l,"input:radio",function(){n.v.val(r());o(n,{i:1})})};n.md&&n.md(n);gi(n,u);i.initev()},lookup:function(i){function gt(){return ht(r.find(su).data("val"))}function ti(n){i.v.val(n);o(i);i.ms=0;u(r).close()}function vt(){var s,c,o;if(rt=0,r=bi(),f(r,"awe-lookup-popup"),p=r.find(".awe-scon"),i.scon=p,i.p.d=r,r.data("o",i),r.bind("aweresize",it),r.bind("aweclose",function(n,t){i.ms&&e(r.find(".awe-li"),h);i.ms=0;t&&t.out||i.f.find(".awe-openbtn").focus()}),s=i.tl?"<table class='awe-ajaxlist awe-lookup-list awe-selectable'><thead><\/thead><tbody class='awe-srl'><\/tbody><\/table>":"<ul class='awe-ajaxlist awe-lookup-list awe-srl awe-selectable'><\/ul>",c=i.pu?t:"<div class='awe-search'><\/div><div class='awe-list awe-srlcont'>"+s+"<\/div>",p.html(c),i.p.btns=[{text:i.ok,click:a.ok,k:1},{text:i.cancel,click:function(){u(n(this)).close()},c:1}],fi(i),i.fm=0,i.soc=1,!i.pu&&!i.setCont){i.srl=r.find(".awe-srl");o=".awe-li:not(.awe-morecont)";i.srl.on(y,o,function(t){var u=n(this);tu(t)&&(u.toggleClass(h),e(r.find(".awe-li").not(u),h),i.ms=1)}).on("dblclick",o,function(t){tu(t)&&(f(n(this),h),i.ms=0,a.ok())})}i.v.trigger("awepopupinit");u(r).lay=wt}function yt(r){var f,u;i.d.html(at);er(i);i.v.val()&&(g=1,f=n(ci),i.d.prepend(ci),u=c(i),sf(i.getUrl,bt.get,i,u,function(n){i.d.html(at);var f=t,e=ct(n,i);e&&(i.d.html(nt(ot,[yi(e,i)])),f=dr(st(e)),au(i,r));i.v.val()!==f&&(i.v.val(f),o(i,1));g=0;pt(i,n,u)},function(){g=0;f.remove()}))}function et(){n.when(or(i,i.fm.find(pr).serializeArray(),1,0)).done(function(){i.soc=0})}function it(){a.lay()}function wt(){if(i.p.isOpen){var t=si(r)+r.find(".awe-search:first").outerHeight()+si(r.find(".awe-list")),n=(i.avh||r.height())-t;n<i.p.mlh&&(n=i.p.mlh);r.find(".awe-list").height(n);r.trigger("awelay")}}var a,ft;k(i);i.soc=1;i.mode="s";i.p.af=1;var bt=i.dataFunc||{},r,p,g,rt,ot='<div class="awe-caption">{0}<\/div>',at=nt(ot,[li]),kt=i.f.find(".awe-clearbtn"),dt=i.f.find(".awe-openbtn");ui(i,function(){i.soc=1});a=b(i);d(i);a.initPopup=vt;a.search=et;a.gsval=gt;a.sval=ti;a.ok=function(){a.sval(a.gsval())};a.lay=wt;a.pinit=v;ft=i.md||awe.lmd;ft&&ft(i);yt(1);i.v.change(function(n,t){t||yt()});vt();kt.click(function(n){s(n);i.v.val(t);o(i);i.soc=1});dt.click(function(t){var f,e;if(s(t),!g){if(i.p.isOpen){u(r).close();return}i.pu||i.setCont||i.fm||(i.fm=r.find(".awe-search"),i.fm.on(l,"*",it).submit(function(n){s(n);n.stopPropagation();et()}));u(r).open({e:t});i.soc&&(i.pu||i.setCont?rt&&a.rload?a.rload():(f=n(w),p.html(f),e=c(i),r.trigger(ni,[e]),ut({o:i,data:e,url:i.pu,func:i.setCont,complete:function(){f.remove();r.trigger(tt)},success:function(n){i.pu&&p.html(n);a.pinit();lt(i);rt=1;i.soc=0}})):nf(i,it,et));it();lt(i)}})},add:function(r){function s(n){function t(t){r.d.empty();t&&f.render(r);r.v.val()!==r.d.val()?(r.v.val(r.d.val()),o(r,n)):n&&r.v.trigger(yt,n)}return ur(r,t)}var f,e;k(r);f=b(r,s);d(r);e=function(){r.d.empty();var n=bt(r.v);i(r.lrs,function(i){var f=ku(i,n),u=t;f&&(u="selected = 'selected'");r.d.append("<option "+u+' value="'+vt(st(i))+'">'+vt(cu(i))+"<\/option>")})};f.render=e;gi(r,s);r.v.on(l,function(){u(r.v).render(r)});r.d.keyup(function(){n(this).change()}).change(function(){r.v.val()!==r.d.val()&&(r.v.val(r.d.val()),o(r))})},readd:function(n,t){return typeof n!="object"?(awe.err(t,{responseText:n}),r):p(n)?n:r},ic:function(n){ot[n.i]=n},oc:function(t,i){var u=ot[t+"-aweic"],r;if(!u)throw new Error(t+" not initialized");return r=n.extend(!0,{},u),n.extend(!0,r,i),r.u?nu(r,{data:c(r),url:r.u,cache:!1,success:function(n){r.sf&&r.sf(n)}}):void 0},ip:function(t){t.f=n("#"+t.i+"-awein");t.desf=[];t.f.length&&(t.rtl=ki(t.f));gu(t.i);ot[t.i]=t;g(t,function(){ot[t.i]=null;t.clo&&awe.destroy(t.clo)})},open:function(t,i,r){var f=ot[t],u;if(p(f)){if(u=n.extend(!0,{},f),n.extend(!0,u,i),u.desf=[],f.clo=u,u.type==="op")return awe.op(r,u);if(u.type==="pf")return awe.pf(r,u)}throw new Error(t+" not initialized");},ff:function(n){awe.tabbable(n.p.d).first().focus()},pf:function(t,r){function h(n){r.setCont||o.html(n);lt(r);r.ol&&r.ol.call(r)}var f,o,e,l,a;s(t);f=bi();o=f.find(".awe-scon");r.scon=o;f.on("submit","form",function(t){if((s(t),!t.awesh)&&(t.awesh=1,!r.notok)){r.notok=1;var i=n(this),o=i.attr("method"),e={o:r,url:i.attr("action"),func:r.postFunc,success:function(n){if(typeof n=="object"){r.sf&&r.sf(n,f);var t=u(f);t&&(t.success=!0,f.trigger("awepopupformsuccess",n),r.cs&&t.close({post:!0}),r.rs&&window.location.reload(!0))}else h(n)},complete:function(){r.notok=0;f.trigger(tt)},type:o};uf(r.ufd,i,e);ut(e)}});e=[];i(r.b,function(btn){btn.click=eval(btn.sf);e.push(btn)});r.udb&&(e=e.concat([{text:r.ot,click:function(){f.find("form:first").submit()},k:1},{text:r.ct,click:function(){u(f).close()},c:1}]));r.p.d=f;r.p.btns=e;fi(r);u(f).open({e:t});r.c?h(r.c):(r.u||r.dataFunc||r.setCont)&&(l=c(r),a=n(w),o.html(a),f.trigger(ni,[l]),ut({o:r,type:"get",url:r.u,func:r.dataFunc||r.setCont,data:l,success:function(n){h(n)},complete:function(){a.remove();f.trigger(tt)}}))},op:function(t,r){var e,f,o,h,l,a;return s(t),r.e=t,e=n("#"+r.p.i),e.length&&u(e).ld?(u(e).open(r),e):(f=bi(),o=f.find(".awe-scon"),r.scon=o,h=[],i(r.b,function(btn){btn.click=eval(btn.sf);h.push(btn)}),r.p.d=f,r.p.btns=h,fi(r),u(f).open(r),r.c?(o.html(r.c),u(f).ld=1):(r.u||r.dataFunc||r.setCont)&&(l=c(r),a=n(w),o.append(a),f.trigger(ni,[l]),ut({o:r,type:"get",url:r.u,cache:!1,func:r.dataFunc||r.setCont,data:l,success:function(n){var t=u(f);t&&(t.ld=1,r.setCont||o.html(n),lt(r),r.ol&&r.ol.call(r))},complete:function(){a.remove();f.trigger(tt)}})),f)},autoSize:1,popup:v,multilookup:function(r){function ht(){return r.sel.find(".awe-li").map(function(){return n(this).data("val")}).get()}function ri(n){r.v.val(di(n));at(n);o(r);r.ms=0;u(e).close()}function at(n){g.empty();i(n,function(n){g.append(nt(af,[ot,kf(n)]))})}function vt(){var i,o,s;if(rt=0,e=bi(),f(e,"awe-multilookup-popup"),a=e.find(".awe-scon"),r.scon=a,r.p.d=e,e.data("o",r),e.bind("aweresize",it),e.bind("aweclose",function(n,t){r.ms&&(r.soc=1);r.ms=0;t&&t.out||r.f.find(".awe-openbtn").focus()}),r.p.btns=[{text:r.ok,click:h.ok,k:1},{text:r.cancel,click:function(){u(n(this)).close()},c:1}],fi(r),r.fm=0,r.soc=1,!r.pu&&!r.setCont){var c=r.tl?"<table class='awe-ajaxlist awe-lookup-list'><thead><\/thead><tbody class='awe-srl'><\/tbody><\/table>":"<ul class='awe-ajaxlist awe-lookup-list awe-srl'><\/ul>",l=r.tl?"<table class='awe-ajaxlist awe-lookup-list'><thead><\/thead><tbody class='awe-sel'><\/tbody><\/table>":"<ul class='awe-ajaxlist awe-lookup-list awe-sel'><\/ul>",p=r.pu?t:"<div class='awe-search'><\/div><div class='awe-econt'><div class='awe-list awe-srlcont'>"+c+"<\/div><div class='awe-list awe-selcont' >"+l+"<\/div><\/div>";a.html(p);r.srl=e.find(".awe-srl");r.sel=e.find(".awe-sel");r.srl.on(y,".awe-movebtn",yt);r.sel.on(y,".awe-movebtn",wt);i=[r.srl.closest(".awe-list"),r.sel.closest(".awe-list")];r.dg&&(o=function(n){yt.call(n.drgo)},s=function(n){wt.call(n.drgo)},ir(r.srl,".awe-li:not(.awe-morecont)",i,[v,o],"awe-srl",1,0,0,0,0,0,0,nr(r.srl)),ir(r.sel,".awe-li",i,[s,v],"awe-sel",1,0,0,0,0,0,0,nr(r.sel)))}r.v.trigger("awepopupinit");u(e).lay=dt}function yt(){n(this).closest(".awe-li").prependTo(r.sel);r.ms=1}function wt(){n(this).closest(".awe-li").prependTo(r.srl);r.ms=1}function it(){h.lay()}function oi(){var n,i;r.sel.html(t);rf(r.tl,r.sel);n=c(r,r);n=n.concat(fr(r.v,"selected"));r.tl&&(i=r.srl.closest("table").find("thead:first").html()?!1:!0,n=n.concat({name:"isTheadEmpty",value:i}));ut({o:r,url:r.selectedUrl,func:et.selected,data:n,success:function(n){r.sel.empty();var t=ct(n,r);t&&(ef(r,t.d,r.sel),r.loaded=1)}})}function kt(){var t=r.fm.find(pr).serializeArray(),i;i=r.loaded?or(r,ei(ht(),"selected").concat(t)):or(r,fr(r.v,"selected").concat(t));n.when(i).done(function(){r.soc=1})}function dt(){if(r.p.isOpen){var t=si(e)+e.find(".awe-search:first").outerHeight()+si(e.find(".awe-srlcont"))+si(e.find(".awe-selcont")),n=(r.avh||e.height())-t;n<r.p.mlh&&(n=r.p.mlh);e.find(".awe-list").height(n*.5);e.trigger("awelay")}}function gt(u){var v="<li>"+li+"<\/li>",f=r.d,y=f.outerHeight(),l,a,e,s,h;f.html(v);l=r.v.val();a=bt(r.v);er(r);l?(e=[],p=1,s=n(ci),r.f.prepend(s),f.css("min-height",y),h=c(r),ut({o:r,url:r.getMultipleUrl,func:et.get,data:h,success:function(n){var t=ct(n,r);t&&(f.empty(),i(t,function(n){f.append("<li>"+yi(n,r)+"<\/li>");e.push(dr(st(n)))}),au(r,u),f.trigger("aweresize"));at(e);r.v.val(di(e));wu(e,a)||o(r,1);p=0;pt(r,n,h)},complete:function(){s.remove();p=0;f.css("min-height",t)}})):g.empty().append("<input type='checkbox' name='"+ot+"' />")}var h,ft;k(r);r.soc=1;r.p.af=1;var et=r.dataFunc||{},e,a,p,rt,g=r.v.next(),ot=r.nm,ti=r.f.find(".awe-openbtn"),ii=r.f.find(".awe-clearbtn");ui(r,function(){r.soc=1});h=b(r);d(r);h.initPopup=vt;h.lay=dt;h.gsval=ht;h.sval=ri;h.pinit=v;h.ok=function(){h.sval(h.gsval())};ft=r.md||awe.lmd;ft&&ft(r);gt(1);r.v.on(l,function(n,t){r.soc=1;t||gt()});vt();ii.click(function(n){s(n);g.empty();r.v.val(t);o(r);r.soc=1});ti.click(function(t){var i,f;if(s(t),!p){if(r.p.isOpen){u(e).close();return}r.pu||r.setCont||r.fm||(r.fm=e.find(".awe-search"),r.fm.on(l,"*",it).submit(function(n){s(n);n.stopPropagation();kt()}));u(e).open({e:t});r.soc&&(r.loaded=0,r.pu||r.setCont?rt&&h.rload?h.rload():(i=n(w),a.html(i),f=c(r),e.trigger(ni,[f]),ut({o:r,data:f,url:r.pu,func:r.setCont,complete:function(){i.remove();e.trigger(tt)},success:function(n){r.pu&&a.html(n);h.pinit();lt(r);rt=1;r.soc=0}})):(nf(r,it,kt),oi()));it();lt(r)}})},tabs:function(t){var r=n("#"+t.i),o=r.find(".awe-tabsbar"),s=r.find(".awe-tabscontent").children(),u="awe-active",h=t.md||awe.tmd;i(h,function(n){n(t)});s.each(function(t,i){var h=n(i),c="awe-tab-btn",r;t?h.hide():c+=" "+u;r=n('<button type="button" class="'+c+'">'+h.data("caption")+"<\/button>");r.click(function(){e(o.children(),u);f(r,u);s.hide();h.show()});o.append(r)});r.trigger("awerender")}}}(jQuery)
/* eslint-disable */
//import * as jQuery from 'jquery';
//import {awef} from './awef.js';
//import {awe} from './awe.js';

var awem = function ($) {
    var loop = awef.loop, encode = awef.encode, isNull = awef.isNull, isNotNull = awef.isNotNull;
    var addDestrFunc = awe.addDestr, bind = awe.bind;

    var minZindex = 1;
    var maxLookupDropdownHeight = 365;
    var maxDropdownHeight = 420;
    var menuMinh = 200;
    var comboMinh = 100;
    var cacheLimit = 1000;
    var popSpace = 20;
    var popTopSpace = 0;
    var clickOutSpace = 35;
    var hpSpace = popSpace / 2;
    var reverseDefaultBtns;
    var closePopOnOutClick = 0;
    var $doc = $(document);
    var $win = $(window);
    var keyEnter = 13;
    var keySpace = 32;
    var keyUp = 38;
    var keyDown = 40;
    var keyEsc = 27;
    var keyTab = 9;
    var keyBackspace = 8;
    var keyShift = 16;
    var keyCtrl = 17;

    // keys you can type without opening menu dropdown
    // left arrow, ..., pgup, pgdn, end, home
    var nonOpenKeys = [keyEnter, keyEsc, keyShift, 37, 39, keyTab, keyCtrl, 33, 34, 35, 36]; // keys that won't open the menu

    var updownKeys = [keyUp, keyDown];

    // down and up arrow, enter, esc, shift //, left arrow, right arrow
    var controlKeys = [keyUp, keyDown, keyEnter, keyEsc, keyShift];

    var nonComboSearchKeys = updownKeys.concat(nonOpenKeys);


    var isMobile = function () { return awem.isMobileOrTablet(); };

    var saweload = 'aweload';
    var sawebeginload = 'awebeginload';
    var sawecolschange = 'awecolschanged';
    var saweinit = 'aweinit';
    var sawerowch = 'awerowch';
    var saweinl = 'aweinline';
    var saweinlsave = saweinl + 'save';
    var saweinlinv = saweinl + 'invalid';
    var saweinledit = saweinl + 'edit';
    var saweinlcancel = saweinl + 'cancel';
    var sawerowc = '.awe-row';
    var saweselected = 'awe-selected';
    var sawecollapsed = 'awe-collapsed';
    var saweselectedc = '.' + saweselected;
    var sawegridcls = '.awe-grid';
    var sawecontentc = '.awe-content';
    var sddpOutClEv = 'mousedown.ddp';//keyup.ddp
    var sfocus = 'focus';
    var smousemove = 'mousemove';
    var soddDocClEv = 'mouseup touchstart keydown';
    var smouseleave = 'mouseleave';
    var sdisabled = 'disabled';
    var sheight = 'height';
    var sminw = 'min-width';
    var se = '';
    var sclick = 'click';
    var schange = 'change';
    var skeyup = 'keyup';
    var skeydown = 'keydown';
    var smodel = 'model';
    var sposition = 'position';
    var snewrow = 'o-glnew';
    var sglrow = 'o-glrow';
    var schked = 'o-chked';
    var sglrowc = '.' + sglrow;
    var szindex = 'z-index';
    var sselected = 'selected';
    var sselectedc = '.' + sselected;
    var loadingHtml = rdiv('awe-loading', '<span/>');
    var sclosespan = '<span class="o-cls">&times;</span>';
    var scaret = '<span class="o-slbtn"><i class="o-caret"></i></span>';
    var soldngp = 'o-ldngp';
    var soldngpc = '.' + soldngp;
    var snbsp = '&nbsp;';
    var sstate = 'state';
    var svalc = '.o-v';
    var sgvalidmsg = 'o-gvalidmsg';
    var cache = {};
    var dpop = {};
    var dmenus = {};
    var tabbable = awe.tabbable;
    var identity = 0;

    $(function () {
        if (minZindex === 1) {
            var nav = $('.navbar-fixed-top:first');
            if (nav.length) {
                minZindex = nav.css(szindex);
            }
        }
    });

    function isEmp(v) {
        return isNull(v) || v === se;
    }

    function serializeAllForm(frm) {
        var arr = frm.find(':input').serializeArray();

        frm.find(':disabled[name]').each(function () {
            arr.push({ name: $(this).attr('name'), value: $(this).val() });
        });
        return arr;
    }

    function strEquals(x, y) {
        if (isNull(x) || isNull(y)) {
            return x === y;
        }

        return x.toString() === y.toString();
    }

    function empf() { }

    function cd() {
        return awem.clientDict;
    }

    function kp(item) {
        return item.k;
    }

    function cp(item) {
        return item.c;
    }

    function which(e) {
        return e.which;
    }

    function istrg(e, sel) {
        return $(e.target).closest(sel).length;
    }

    function econ(item, o) {
        var content = cp(item);
        if (!o.nenc) content = encode(content);
        return content;
    }

    function format(s, args) {
        return s.replace(/{(\d+)}/g, function (match, number) {
            return typeof args[number] !== 'undefined'
                ? args[number]
                : match;
        });
    }

    function rbtn(cls, cont, attr) {
        if (isNull(attr)) attr = se;
        return '<button type="button" class="' + cls + '" ' + attr + '>' + cont + '</button>';
    }

    function awed(o) {
        return o.i ? ' id="' + o.i + '-awed" ' : se;
    }

    function rdiv(cls, cont, attr) {
        if (isNull(cont)) cont = se;
        if (isNull(attr)) attr = se;
        return '<div class="' + cls + '" ' + attr + '>' + cont + '</div>';
    }

    function toUpperFirst(s) {
        return s.substr(0, 1).toUpperCase() + s.substr(1);
    }

    function toLowerFirst(s) {
        return s.substr(0, 1).toLowerCase() + s.substr(1);
    }

    function containsVal(itemK, vals) {
        if (isNull(itemK)) return 0;
        itemK = itemK.toString();

        for (var i = 0; i < vals.length; i++) {
            if (itemK === vals[i]) {
                return 1;
            }
        }

        return 0;
    }

    function getIxInArray(val, vals) {
        var res = -1;
        val = toStr(val);
        for (var i = 0; i < vals.length; i++) {
            if (val === vals[i]) {
                res = i;
                break;
            }
        }

        return res;
    }

    function loopTrees(items, func1) {
        for (var i = 0; i < items.length; i++) {
            var item = items[i];

            if (func1(item)) {
                return 1;
            }

            if (item.it) {
                if (loopTrees(item.it, func1)) return 1;
            }
        }
    }

    function loopTreesRoot(items, func1, root) {
        for (var i = 0; i < items.length; i++) {
            var item = items[i];

            if (func1(item, root)) {
                return 1;
            }

            if (item.it) {
                if (loopTreesRoot(item.it, func1, root || item)) return 1;
            }
        }
    }

    function contains(key, keys) {
        return $.inArray(key, keys) !== -1;
    }

    function strContainsi(c, squeryUp) {
        return (c || se).toString().toUpperCase().indexOf(squeryUp) !== -1;
    }

    function strStartsi(c, squeryUp) {
        return (c || se).toString().toUpperCase().substring(0, squeryUp.length) === squeryUp;
    }

    function strEqualsi(c, squeryUp) {
        return (c || se).toString().toUpperCase() === squeryUp;
    }

    function pickAvEl(arr) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i].length) {
                return arr[i];
            }
        }
    }

    function setDisabled(o, s) {
        if (s) {
            o.attr(sdisabled, sdisabled);
        } else {
            o.removeAttr(sdisabled);
        }
    }

    function prevDef(e) {
        e.preventDefault();
    }

    var entityMap = {
        //"&": "&amp;",
        "<": "&lt;",
        '"': '&quot;',
        "'": "&#39;",
        ">": "&gt;"
        //"é" : "&#233;"
    };

    function escape(str) {
        return encode(str);
        //return String(str).replace(/[<>"']/g, function (s) {
        //    return entityMap[s];
        //});
    }

    function toStr(v) {
        return isNull(v) ? se : v.toString();
    }

    function replaceAll(str, src, repl) {
        return str.split(src).join(repl);
    }

    function unesc(str) {
        str = toStr(str);
        for (var key in entityMap) {
            if (entityMap.hasOwnProperty(key)) {
                str = str.split(entityMap[key]).join(key);
            }
        }
        return str;
    }

    function outerh(sel, m) {
        return sel.length ? sel.outerHeight(!!m) : 0;
    }

    function readTag(o, prop, nullVal) {
        var res = nullVal;
        var tag = o.tag || o.Tag;
        if (tag) {
            if (isNotNull(tag[prop])) {
                res = tag[prop];
            }
            else if (isNotNull(tag[toLowerFirst(prop)])) {
                res = tag[toLowerFirst(prop)];
            }
        }

        return res;
    }

    function dapi(o) {
        return o.data('api');
    }

    function dto(o) {
        return o.data('o');
    }

    function getZIndex(el) {
        var val = el.css(szindex);
        if (val && val > 0) return val;
        var parent = el.parent();
        return parent && !parent.is($('body')) ? getZIndex(parent) : 0;
    }

    function calcZIndex(zIndex, el) {
        if (zIndex < minZindex) zIndex = minZindex;
        var zi = getZIndex(el);
        if (zi && zi > zIndex) {
            zIndex = zi;
        }

        return zIndex;
    }

    function datesDif(d1, d2) {
        return d1.getTime() !== d2.getTime();
    }

    function isPosFixed(elm) {
        if (!elm || !elm.length || elm.is('body')) return 0;

        if (elm.css('position') === 'fixed') {
            return 1;
        }

        return isPosFixed(elm.parent());
    }

    function setGridHeight(grid, newh) {
        var go = dto(grid);
        if (go && grid.is(':visible') && go.h !== newh) {
            go.h = newh;
            dapi(grid).lay();
        }
    }

    function scrollTo(focused, cont) {
        function y(o) {
            return o.offset().top;
        }

        var fry = y(focused);
        var fh = focused.height();
        var conh = cont.height();
        var miny = y(cont);
        var maxy = miny + conh - fh;
        var scrcont = cont;
        var winmax = $win.height() + $doc.scrollTop() - fh;
        var winmin = $doc.scrollTop();

        if (maxy > winmax && winmax < fry) {
            maxy = winmax;
            scrcont = $win;
        }

        if (miny < winmin && winmin > fry) {
            miny = winmin;
            scrcont = $win;
        }

        var delta = fry < miny ? fry - miny : fry > maxy ? fry - maxy : 0;

        // +1 for ie and ff 
        if (delta > fh + 1 && scrcont !== $win) {
            delta += conh / 2;
        }

        scrcont.scrollTop(scrcont.scrollTop() + delta);
    }

    function disbAttr(o) {
        return o.enb ? se : ' disabled="disabled"';
    }

    function initgridh(grid) {
        var o = dto(grid);
        o.h = o.ih;
        dapi(grid).lay();
    }

    function cdelta(grid, val) {
        grid.trigger(sawerowch, val);
    }

    function movedGridRow(fromgrid, togrid) {
        dto(togrid).lrso = 1;
        dto(fromgrid).lrso = 1;
        cdelta(togrid, 1);
        cdelta(fromgrid, -1);
        if (!fromgrid.find(sawerowc).length && dto(fromgrid).lrs.pc > 1) {
            dapi(fromgrid).load();
        }
    }

    function year(date) {
        return date.getFullYear();
    }

    var formf = {
        'd': function (d) {
            return d.getDate();
        },
        'dd': function (d) {
            return addZero(d.getDate());
        },
        'm': function (d) {
            return d.getMonth() + 1;
        },
        'mm': function (d) {
            return addZero(d.getMonth() + 1);
        },
        'yy': function (d) {
            return year(d);
        },
        'y': function (d) {
            return year(d).toString().substr(2);
        }
    };

    function mparsf(prop, maxlen, reqlen, customf) {
        return function (s, r, baseDate) {
            s = s.trim();
            if (baseDate) {
                if (s.length > maxlen) {
                    s = s.substr(0, maxlen);
                }

                if (!s.length || reqlen && s.length !== reqlen) {
                    return;
                }
            }

            if (s.indexOf('.') > -1) r.c = 1;

            var n = Number(s);

            if (customf) {
                n = customf(n);
            }

            r[prop] = n;
        };
    }

    function yf(n) {
        if (n > 99) return null;
        if (n > 50) n += 1900;
        else n += 2000;
        return n;
    }

    var parsf = {
        'd': mparsf('d', 2),
        'dd': mparsf('d', 2),
        'm': mparsf('m', 2),
        'mm': mparsf('m', 2),
        'yy': mparsf('y', 4, 4),
        'y': mparsf('y', 2, 0, yf)
    };

    function parseDate(frmt, value, baseDate, mind, maxd) {
        if (!value) return baseDate;
        function getHead(s) {
            var i = 2;
            while (i) {
                var h = takeh(s, i);
                var pfunc = formf[h];
                if (pfunc) {
                    return h;
                }
                i--;
            }
        }

        var mis = 0;
        var res = {};
        while (frmt) {
            var head = getHead(frmt);

            if (head) {
                frmt = frmt.substr(head.length);
                var str;

                if (frmt) {
                    // get the str to convert
                    var nextHead = getHead(frmt);
                    var sepix;
                    if (!nextHead) {
                        var sep = frmt[0];
                        sepix = value.indexOf(sep);
                    } else {
                        sepix = 2;
                        if (head === 'yy')
                            sepix = 4;
                    }

                    if (sepix === -1) {
                        mis = 1;
                        break;
                    }

                    str = value.substr(0, sepix);
                    value = value.substr(sepix + 1);
                }
                else {
                    str = value;
                }

                if (str === se) {
                    mis = 1;
                    break;
                }

                parsf[head](str, res, baseDate);

            } else {
                frmt = frmt.substr(1);
            }
        }

        if (mis || res.c) {
            return 0;
        }

        if (baseDate) {
            if (isNull(res.y)) res.y = year(baseDate);
            if (isNull(res.m) || res.m > 12 || res.m < 1) res.m = baseDate.getMonth() + 1;
            var maxDate = new Date(res.y, res.m, 0).getDate();
            if (isNull(res.d) || res.d < 1 || res.d > maxDate) res.d = baseDate.getDate();
        }

        var newDate = new Date(res.y, res.m - 1, res.d);

        if (!baseDate) {
            if (year(newDate) !== res.y || newDate.getMonth() !== res.m - 1) return 0;
        }

        if (mind && newDate < mind) {
            newDate = cdate(mind);
        }
        else if (maxd && newDate > maxd) {
            newDate = cdate(maxd);
        }

        return newDate;
    }

    function cdate(d) {
        return d ? new Date(d) : new Date();
    }

    function lastDayOfMonth(d) {
        var nd = cdate(d);
        nd.setMonth(d.getMonth() + 1);
        nd.setDate(0);
        return nd;
    }

    function formatDate(dfrm, date) {
        var res = '';
        while (dfrm) {
            var i = 2;
            while (i) {
                var h = takeh(dfrm, i);
                var pfunc = formf[h];
                if (pfunc) {
                    res += pfunc(date);
                    dfrm = dfrm.substr(h.length);
                    break;
                }
                i--;
            }

            if (!i) {
                res += dfrm.substr(0, 1);
                dfrm = dfrm.substr(1);
            }
        }

        return res;
    }

    function takeh(str, len) {
        return str.substr(0, len);
    }

    function addZero(val) {
        if (val.toString().length < 2) {
            val = '0' + val;
        }

        return val;
    }

    function itmFromLi(items, li, newVal) {
        function gitem(indxs, items) {
            if (indxs.length === 1) {
                if (newVal) {
                    items[indxs[0]] = newVal;
                }

                return items[indxs[0]];
            }

            var i = indxs.shift();
            items[i].cl = 0; // expand node
            return gitem(indxs, items[i].it);
        }

        var dindx = li.data('index');
        var item;
        if (dindx.split) {
            var indxs = dindx.split(',');
            item = gitem(indxs, items);
        } else {
            item = items[dindx];
        }

        return item;
    }

    function layDropdownPopup2(o, pop, isFixed, capHeight, opener, setHeight, keepPos, canShrink, chkfulls, minh, popuph, maxph, popup, xy, postop, minbotd) {
        var scrolltop = $win.scrollTop();

        var opTop, opOutHeight = 0, opLeft, opOutWidth = 0;
        if (xy) {
            opener = 1;
            opTop = xy.y + scrolltop;
            opLeft = xy.x + $win.scrollLeft();
        } else if (opener) {
            opTop = opener.offset().top;
            opOutHeight = opener.outerHeight();
            opLeft = opener.offset().left;
            opOutWidth = opener.outerWidth(true);
        }

        if (!keepPos) {
            pop.css('left', 0);
            pop.css('top', 0);
        }

        var winh = $win.height();
        var winw = $win.width();

        var maxw = winw - popSpace;

        var mnw = Math.min(pop.outerWidth(), maxw);

        pop.css('min-height', se);
        pop.css(sheight, se);
        pop.css('max-width', maxw);
        pop.css(sminw, canShrink ? se : mnw);
        pop.css(sposition, se);


        var toppos;
        var left;

        var topd = scrolltop;

        if (opener) {
            topd = opTop;
            capHeight = capHeight || opOutHeight;
        }

        // handle opener overflow
        var botoverflow = topd - (winh + scrolltop);
        if (botoverflow > 0) {
            topd -= botoverflow;
        }

        var topoverflow = scrolltop - (topd + capHeight);

        if (topoverflow > 0) {
            topd += topoverflow;
        }

        var top = topd - scrolltop;
        var bot = winh - (top + capHeight);

        // adjust height
        var poph = popuph || pop.outerHeight();

        if (!o.maxph) o.maxph = poph;
        else if (o.maxph > poph) poph = o.maxph;
        else o.maxph = poph;

        var autofls = chkfulls(poph);

        var valign = 'bot';
        if (autofls) {
            isFixed = 1;
        } else {
            var maxh = 0;
            if (opener) {
                var stop = top - hpSpace;
                var sbot = bot - hpSpace;
                maxh = sbot;

                if (minh > poph) minh = poph;

                if (sbot > poph || minbotd && sbot > minbotd) {
                    valign = 'bot';
                } else if (stop > sbot) {
                    valign = 'top';
                    if (poph > stop) {
                        poph = stop;
                    }

                    maxh = stop;
                } else {
                    poph = sbot;
                }

                if (poph < minh) {
                    maxh = poph = minh;
                }

                if (maxph && poph > maxph) {
                    poph = maxph;
                }

                if (poph > winh - popSpace) {
                    maxh = poph = winh - popSpace;
                }
            } else {
                maxh = winh - popSpace;
                if (postop) {
                    maxh -= popTopSpace;
                }
            }

            setHeight(poph, maxh, valign);
        }

        if (popup) {
            popup.trigger('aweresize');
        }

        if (isFixed) {
            topd = top;
            pop.css(sposition, 'fixed');
        }

        var w = pop.outerWidth(true);
        var h = pop.outerHeight(true);
        if (o.avh) h = o.avh + o.nph;

        if (opener) {
            left = opLeft;
            var lspace = winw - (left + w);
            if (lspace < 0) {

                var ow = opOutWidth;
                if (ow < w)
                    left -= w - ow;

                if (left < 10) {
                    left = 10;
                }
            }

            if (autofls) {
                left = toppos = hpSpace;
            }
            else if (bot < h + hpSpace && (top > h + hpSpace || top > bot)) {
                //top
                toppos = topd - h;

                if (top < h) {
                    toppos = topd - top;
                    if (h + hpSpace < winh) toppos += hpSpace;
                }
            } else {
                //bot
                toppos = topd + capHeight;

                if (bot < h + hpSpace) {

                    toppos -= h - bot;

                    if (h + hpSpace < winh) toppos -= hpSpace;
                }
            }
        } else {
            if (postop) {
                toppos = hpSpace + popTopSpace;
            } else {
                var diff = winh - h;
                toppos = diff / 2;
                if (diff > 200) toppos -= 45;
            }

            left = Math.max((winw - pop.outerWidth()) / 2, 0);
        }

        if (!keepPos || autofls) {
            pop.css('left', left);
            pop.css('top', Math.floor(toppos));
        }
    }

    function buttonGroupRadio(o) {
        return nbuttonGroup(o);
    }

    function buttonGroupCheckbox(o) {
        return nbuttonGroup(o, 1);
    }

    function nbuttonGroup(o, multiple) {
        var $odisplay;

        function init() {
            $odisplay = o.mo.odisplay;
            o.f.addClass('o-btng');

            $odisplay.on(sclick, '.awe-btn', function () {
                o.api.toggleVal($(this).data('val'));
            });
        }

        function setSelectionDisplay() {
            var val = awe.val(o.v);

            var items = se;
            loop(o.lrs, function (item, index) {
                var selected = containsVal(kp(item), val) ? saweselected : "";
                items += rbtn('awe-btn awe-il ' + selected, econ(item, o), 'data-index="' + index + '" data-val="' + encode(kp(item)) + '"' + disbAttr(o));
            });

            $odisplay.html(items);
        }

        function setSelectionDisplayChange() {
            var vals = awe.val(o.v);
            $odisplay.children(saweselectedc).removeClass(saweselected);
            loop(vals, function (v) {
                $odisplay.children().filter(function () {
                    return strEquals($(this).data('val'), v);
                }).addClass(saweselected);
            });
        }

        var opt = {
            setSel: setSelectionDisplay,
            setSelChange: setSelectionDisplayChange,
            init: init,
            multiple: multiple,
            noMenu: 1
        };

        return odropdown(o, opt);
    }

    function multiselb(o) {
        o.d.addClass("multiselb");
        function renderCaption() {
            return o.mo.inlabel;
        }

        return odropdown(o, {
            multiple: 1,
            renderCaption: renderCaption
        });
    }

    function multiselect(o) {
        var $multi = $(rdiv('o-mltic'));
        var $searchtxt = $('<input type="text" class="o-src awe-il awe-txt" ' + awed(o) + ' autocomplete="off" ' + disbAttr(o) + '/>');
        var $caption = $('<span class="o-cptn"></span>');
        var glrs, api, comboPref, vprop, dropmenu, dd;
        var isCombo = readTag(o, "Combo");
        var searchOutside = !isMobile() || isCombo;
        var ddopt = {};

        o.d.addClass("o-mltsl");
        var reor = readTag(o, "Reorderable");

        if (searchOutside)
            $multi.append($searchtxt);

        $multi.prepend($caption);

        function init() {
            dd = o.mo.dd;
            dropmenu = dd.menu;
            comboPref = o.mo.cp;
            vprop = o.mo.vprop;
            o.mo.odisplay.append($multi);
            $caption.html(o.mo.caption);

            if (searchOutside) {
                o.mo.srctxt = $searchtxt;
            }

            api = o.api;
            glrs = api.glrs;
        }

        function setCaption(hide) {
            if (hide) {
                $caption.hide();
            } else {
                $caption.show();
            }
        }

        function renderSel(vals) {
            // add multiRem for vals
            var items = se;
            var lrs = glrs();

            loop(vals, function (val) {
                var found = 0;
                loopTrees(lrs, function (item) {
                    var itemv = item[vprop];
                    if (isNotNull(itemv)) itemv = itemv.toString();
                    if (itemv === val) {
                        items += renderSelectedItem(item);
                        found = 1;
                        return 1;
                    }
                });

                if (!found) {
                    var con = val;

                    if (isCombo && con.match('^' + comboPref)) {
                        con = con.replace(comboPref, se);
                    }

                    items += renderSelectedItem({ k: val, c: con });
                }
            });

            if (searchOutside) {
                $searchtxt.val(se);
                autoWidth($searchtxt);
                $searchtxt.before(items);
            } else {
                $multi.append(items);
            }

            var count = $multi.find('.o-mlti').length;

            if (!count && searchOutside) {
                $searchtxt.width(0);
            }

            setCaption(count);
        }

        var setSelectionDisplay = function () {
            $multi.find('.o-mlti').remove();

            renderSel(awe.val(o.v));
        };

        function setSelectionDisplayChange() {
            var vals = awe.val(o.v);

            // remove keys
            $multi.find('.o-mltrem').each(function () {
                var val = $(this).parent().data('val');
                var indexFound = getIxInArray(val, vals);
                if (indexFound > -1) {
                    // remove from vals
                    vals.splice(indexFound, 1);
                } else {
                    $(this).parent().remove();
                }
            });

            renderSel(vals);
        }

        function autoWidth(input) {
            input.css('width', Math.min(Math.max((input.val().length + 2) * 10, 21), $multi.width()) + 'px');
        }

        function renderSelectedItem(item) {
            return rdiv('o-mlti awe-il awe-btn',
                '<span class="o-mltcptn">' + opt.renSelCap(item) + '</span><span class="o-mltrem">&times;</span>',
                'data-val="' + escape(item[vprop]) + '"');
        }

        function postSearchFunc(k) {
            if (!contains(k, nonComboSearchKeys) && searchOutside) {
                if (!dropmenu.find(svalc + ':visible').length) {
                    dd.close();
                } else {
                    if (!(!$searchtxt.val() && k === keyBackspace)) {
                        dd.open();
                    }
                }
            }
        }

        function addComboVal(val) {
            var itemFound;
            var valu = val.toUpperCase();

            loopTrees(glrs(), function (item) {
                if (strEqualsi(cp(item), valu)) {
                    itemFound = item;
                    val = item[vprop];
                    return 1;
                }
            });

            if (!itemFound) val = comboPref + val;

            api.toggleVal(val, 1);
        }

        if (searchOutside) {
            $searchtxt.on(skeyup, function (e) {
                var k = which(e);
                if (!dropmenu.hasClass('open') && !contains(k, nonOpenKeys)) {
                    if (!(k === keyBackspace && !$searchtxt.val())) {
                        dd.open();
                    }
                }

                if (isCombo && k === keyEnter) {
                    var stval = $searchtxt.val();
                    if (stval) {
                        addComboVal(stval);
                        $searchtxt.val(se);
                    }
                }
            }).on(skeydown, function (e) {
                if (which(e) === keyBackspace && !$searchtxt.val()) {
                    $multi.find('.o-mltrem:last').click();
                }

                if (which(e) === keyEnter) {
                    prevDef(e);
                }

                autoWidth($searchtxt);
            }).on('focusin', function () {
                setCaption(1);
                autoWidth($(this));
            }).on('focusout', function () {
                $searchtxt.val(se).change();
                o.needrend = 1;
                if (!$multi.children('.o-mlti').length) {
                    setCaption();
                }

                $searchtxt.width(20);
            });
        }

        $multi.on(sclick, function (e) {
            if (!o.enb) return;
            if (!$(e.target).is('.o-mltrem')) {
                dd.open();

                searchOutside
                    && !(isMobile() && $(e.target).closest('.o-mlti').length)
                    && $searchtxt.width(1).focus(); // width 1 for focus on mobile 
                dd.lay();
            }
        });

        $multi.on(sclick, '.o-mltrem', function (e) {
            if (!o.enb) return;
            var it = $(this);
            var val = it.parent().data('val');
            it.attr('awepid', o.i);
            api.toggleVal(unesc(val), null, 1);
            dd.close();
            searchOutside && $searchtxt.focus();
        });

        if (reor) {
            dragReor({
                from: $multi,
                sel: '.o-mlti',
                tof: function () {
                    return [$('body')];
                },
                gcon: function () { return $multi; },
                plh: 'awe-hl',
                cancel: function () { return !o.enb; },
                splh: 1,
                dropFunc: function (cx) {
                    var drgo = cx.drgo;
                    cx.plh.after(drgo).remove();
                    api.moveVal(drgo.data('val'), drgo.prev().data('val'));
                    drgo.show();
                }
            });
        }

        ddopt.afls = !isCombo;
        ddopt.psf = postSearchFunc;
        ddopt.noAutoSearch = searchOutside;
        ddopt.naa = 1;

        if (searchOutside) ddopt.srctxt = $searchtxt;

        var opt = {
            setSel: setSelectionDisplay,
            setSelChange: setSelectionDisplayChange,
            init: init,
            multiple: 1,
            prerender: function () { },
            combo: isCombo,
            d: ddopt
        };

        return odropdown(o, opt);
    }

    function colorDropdown(o) {
        var caption;

        function init() {
            caption = o.mo.caption;
        }

        o.d.addClass("o-cldd");

        o.df = function () {
            return $.map(['#5484ED', '#A4BDFC', '#7AE7BF', '#51B749', '#FBD75B', '#FFB878', '#FF887C', '#DC2127', '#DBADFF', '#E1E1E1'],
                function (item) { return { k: item, c: item }; });
        };

        var renderCaption = function (selected) {
            var sel = caption;
            if (selected.length) {
                var color = kp(selected[0]);
                sel = '<div style="background:' + color + '" class="o-color">' + snbsp + '</div>';
            }

            return sel;
        };

        var renderItemDisplay = function (item) {
            return '<span class="o-clitm" style="background:' + kp(item) + '">' + snbsp + '</span>';
        };

        var opt = {
            renderCaption: renderCaption,
            init: init,
            menuClass: "o-clmenu",
            d: {
                renderItemDisplay: renderItemDisplay,
                noAutoSearch: 1
            }
        };

        odropdown(o, opt);
    }

    function imgItem(item) {
        return rdiv('o-igit', (item.url ? '<img src="' + item.url + '"/> ' : '') + encode(cp(item)));
    }

    function imgDropdown(o) {
        var caption;
        o.d.addClass('o-igdd');

        function init() {
            caption = o.mo.caption;
        }

        var opt = {
            menuClass: "o-igmenu",
            init: init,
            renderCaption: function (selected) {
                var sel = caption;
                if (selected.length)
                    sel = '<img src="' + selected[0].url + '"/>' + encode(cp(selected[0]));
                return sel;
            },
            d: {
                renderItemDisplay: imgItem
            }
        };

        odropdown(o, opt);
    }

    function timepicker(o) {
        o.f.addClass("o-tmp");

        function pad(num) {
            var s = "00" + num;
            return s.substr(s.length - 2);
        }

        o.df = function () {
            var step = readTag(o, "Step") || 30;
            var items = [];
            var ampm = o.tag.AmPm;
            for (var i = 0; i < 24 * 60; i += step) {
                var apindx = 0;
                var hour = Math.floor(i / 60);
                var minute = i % 60;

                if (ampm) {

                    if (hour >= 12) {
                        apindx = 1;
                    }

                    if (!hour) {
                        hour = 12;
                    }

                    if (hour > 12) {
                        hour -= 12;
                    }
                }

                var item = ampm ? hour : pad(hour);

                item += ":" + pad(minute);

                if (ampm) item += " " + ampm[apindx];

                items.push(item);
            }

            return $.map(items, function (v) { return { k: v, c: v }; });
        };

        return combobox(o);
    }

    function combobox(o) {
        o.d.addClass('combobox');

        var $v = o.v;
        var disb = disbAttr(o);
        var cmbtxt = $('<input type="text" class="awe-txt o-cbxt o-src" size="1" autocomplete="off" ' + awed(o) + ' ' + disb + ' />');
        var $openbtn = $(rbtn('o-cbxbtn o-ddbtn awe-btn o-btn', scaret, 'tabindex="-1"' + disb));
        var docClickReg = 0;
        var glrs;
        var clsEmptQuery = readTag(o, "ClsEq");
        var searchOnFocus = readTag(o, "Sof");
        var api, dd, dropmenu;
        var vprop;
        var contval = se;

        function init() {
            o.mo.odisplay.append(cmbtxt).append($openbtn);
            vprop = o.mo.vprop;
            cmbtxt.attr('placeholder', o.mo.caption);
            api = o.api;
            glrs = api.glrs;
            dd = o.mo.dd;
            dropmenu = dd.menu;
        }

        function setSelectionDisplay() {
            var vals = awe.val($v);

            var selected = [];

            function f1(item) {
                if (containsVal(item[vprop], vals) && !item.nv) {
                    selected = [item];
                    return 1;
                }
            }

            loopTrees(glrs(), f1);

            var txtval = se;
            if (!selected.length && vals.length) {
                txtval = vals[0];
            }
            else if (selected.length) {
                txtval = unesc(cp(selected[0]));
            }

            cmbtxt.val(txtval);
        }

        function onDocClick(e) {
            var trg = $(e.target);

            if (!trg.closest(dropmenu).length &&
                !trg.closest(o.d).length &&
                trg.closest('[awepid]').attr('awepid') !== o.i) {

                // js click while focused won't loose txt focus

                compval();
                checkComboval();
                docClickReg = 0;

                if ($(':focus').closest(o.d).length) return;
                $doc.off('click focusin', onDocClick);
            }
        }

        cmbtxt.on('focusin', function () {
            this.selectionStart = this.selectionEnd = this.value.length;
            if (searchOnFocus) {
                setTimeout(function () { cmbtxt.select(); }, 10);
            }

            if (!docClickReg) {
                $doc.on('click focusin', onDocClick);
                docClickReg++;
            }
        }).on(skeydown, function (e) {
            if (which(e) === keyEnter && !dd.isOpen()) {
                prevDef(e);
                checkComboval();
            }
        }).on(skeyup, function (e) {
            var key = which(e);
            if (!dd.isOpen()) {
                if (contains(key, updownKeys)) {
                    dd.open();
                }

                if (key === keyEnter) {
                    checkComboval();
                }
            }
        });

        function postSearchFunc(k) {
            if (!contains(k, nonComboSearchKeys)) {
                if (!dropmenu.find(svalc + ':visible').length) {
                    dd.close();
                }

                compval();
            }
        }

        $openbtn.on(sclick, function () {
            dd.filter(se);
            if (!isMobile())
                cmbtxt.focus();
        });

        function compval() {
            var query = cmbtxt.val();
            var newVal = query;
            var cval = query;

            query = query.toUpperCase();

            loopTrees(glrs(), function (item) {
                if (strEqualsi(cp(item), query)) {
                    newVal = item[vprop];
                    cval = cp(item);
                    return 1;
                }
            });

            $v.data('comboval', newVal);
            contval = cval;
        }

        function checkComboval() {
            if (!$v.parent().length) {
                return;
            }

            var comboval = $v.data('comboval');

            if (isNotNull(comboval)) {
                if (o.v.val() !== comboval) {
                    api.toggleVal(comboval);
                    //cmbtxt.val(contval);
                }

                cmbtxt.val(contval);
            }
        }

        odropdown(o, {
            d: {
                noAutoSearch: 1,
                srctxt: cmbtxt,
                psf: postSearchFunc,
                afls: 0,
                ceq: clsEmptQuery,
                autosel: 1
            },
            setSel: setSelectionDisplay,
            setSelChange: setSelectionDisplay,
            combo: 1,
            init: init,
            prerender: function () { }
        });
    }

    function menuDropdown(o) {
        o.d.addClass("o-mdd");
        var opt = {
            menuClass: "o-mddm",
            noAutoSearch: 1,
            d: {
                click: function (zev) {
                    var $trg = $(zev.target);
                    if ($trg.is(svalc)) {
                        var click = $trg.data(sclick);

                        if (click) {
                            eval(click);
                        } else {
                            var $a = $trg.find('a');
                            if ($a.length)
                                $a.get(0).click();
                        }
                    }

                    o.mo.dd.close();
                },
                renderItemDisplay: function (item) {
                    var res;
                    var href = kp(item) || item.href;
                    if (href && !item.click) {
                        res = '<a href="' + href + '">' + econ(item, o) + '</a>';
                    } else {
                        res = econ(item, o);
                    }

                    return res;
                },

                renItAttr: function (i, it) {
                    var res = ' data-index="' + i + '" ';
                    if (it.click) res += ' data-click="' + it.click + '"';
                    return res;
                }
            }
        };

        return odropdown(o, opt);
    }

    function autocomplete(o) {
        var input = $('#' + o.i);
        var propId;
        var lastVal;
        var cache = o.c;
        var dd = dropmenu({
            i: o.i, rtl: o.rtl, opener: input, srctxt: input, select: onSelect,
            sf: searchFunc, sfo: o, nacc: !cache, minl: o.minl, dl: o.dl, itemFunc: o.itemFunc,
            psf: postSearchFunc, clsempt: 1, ck: o.ck, gval: gval, nom: 1, combo: 1, ceq: 1, nenc: o.nenc
        });

        addDestrFunc(o, dd.destroy);

        if (o.k) {
            propId = $('#' + o.k);
            input.on('keyup ' + schange, function () {
                if (input.val() !== lastVal) {
                    propId.val(se).change();
                }
            });
        }

        input.keyup(function (e) {
            var key = which(e);
            if (!dd.isOpen() && contains(key, updownKeys)) {
                dd.open();
            }
        }).on(saweload, dd.cc);

        function gval() {
            return input.val();
        }

        function onSelect(item) {
            var selval = unesc(item.c);
            input.val(selval).focus();

            if (propId) {
                propId.val(item.k).change();
                lastVal = selval;
            }
        }

        function postSearchFunc(k) {
            if (!contains(k, nonComboSearchKeys)) {
                if (!dd.menu.find(svalc + ':visible').length) {
                    dd.close();
                }
            }
        }

        function searchFunc(_, info) {
            var term = info.term;
            if (term.length < o.ml) return [];

            var c = info.cache;
            c.t = c.t || {}; // terms used
            c.n = c.n || []; // no result terms

            if (cache) {
                if (c.t[term]) return [];
                c.t[term] = 1;

                // ignore terms that contain nr terms
                for (var i = 0; i < c.n.length; i++) {
                    if (term.indexOf(c.n[i]) >= 0) {
                        return [];
                    }
                }
            }

            var prm = awe.params(o);
            prm.push({ name: "v", value: term });

            var f = o.df ? o.df(term, prm) : awe.ajx({ url: o.u, data: prm, o: o });
            return $.when(f).done(function (data) {
                if (!data || !data.length) {
                    c.n.push(term);
                }

                return data;
            }).fail(function () {
                c.t[term] = 0;
            });
        }
    }

    function dataSource(glrs, cacheKey) {
        return {
            gc: function () {
                return cache[cacheKey];
            },
            cc: function () {
                cache[cacheKey] = null;
            },
            glr: function () {
                var lrs = glrs();
                var cacheObj = cache[cacheKey];
                if (cacheObj) {
                    var res = cacheObj.Items.slice(0);

                    for (var i = 0; i < lrs.length; i++) {
                        if (isNull(cacheObj.Keys[kp(lrs[i])])) {
                            res.push(lrs[i]);
                        }
                    }

                    return res;
                }

                return lrs;
            },
            addc: function (result, gval) {
                if (!cache[cacheKey]) cache[cacheKey] = { Items: [], Keys: {} };
                var cacheObj = cache[cacheKey];

                var keys = cacheObj.Keys;
                var items = cacheObj.Items;

                var chcount = 0;
                loopTrees(items, function () {
                    chcount++;
                });

                if (gval && chcount > cacheLimit) {
                    var vals = gval();
                    var nitems = [];
                    var nkeys = {};

                    if (vals.length) {
                        loopTreesRoot(items,
                            function (item, root) {
                                for (var j = 0; j < vals.length; j++) {
                                    if (strEquals(vals[j], item.k)) {
                                        nkeys[vals[j]] = nitems.length;
                                        nitems.push(root || item);
                                        vals.splice(j, 1);
                                        break;
                                    }
                                }
                            });
                    }

                    cache[cacheKey] = { Items: nitems, Keys: nkeys };
                    keys = nkeys;
                    items = nitems;
                }

                for (var i = 0; i < result.length; i++) {
                    var item = result[i];
                    var key = kp(item) || cp(item);
                    if (isNull(keys[key])) {
                        keys[key] = items.length;
                        items.push(item);
                    } else {
                        items[keys[key]] = item;
                    }
                }
            }
        };
    }

    function dropmenu(o) {
        var srcThresh = 10;
        o.i = o.i || '__m' + identity++;

        dmenus[o.i] = o;
        var mo = o.o || {};

        var filterFunc = strContainsi;
        if (o.flts) filterFunc = strStartsi;
        var getFunc = o.getFunc;
        var searchFunc = o.sf;
        var isCombo = o.combo;
        var comboPref = o.cmbp;
        var showCmbItm = o.cmbi;
        var opener, hpos, opBtn, olc;
        var itemFunc = o.itemFunc;
        var noSelClose = o.noSelClose;
        var noAutoSearch = o.noAutoSearch;
        var vprop = o.vprop || 'k';
        var closeOnEmpty = o.clsempt;
        var maxh = o.maxh;

        var nacc = o.nacc;
        var ds = o.ds || dataSource(o.df || function () { return []; }, o.ck || o.i);
        var glrs = ds.glr;

        var isFixed = 0;
        var zIndex = minZindex;
        var asmi = o.asmi;

        if (isNotNull(asmi)) {
            noAutoSearch = asmi === -1 ? 1 : 0;
            srcThresh = asmi;
        }

        var hostc = $('body');
        var srcinfo = '<li class="o-info">' + cd().SearchForRes + '</li>';
        var attr = 'tabindex="-1" data-i="' + o.i + '"';
        var modal = $(rdiv('o-pmodal o-pu', se, attr));
        var $dropmenu = $(rdiv('o-menu o-pu ' + (o.clss || se), se, attr));
        var popt;

        var $itemscont = $(rdiv('o-itsc'));
        var $menu = $('<ul class="o-mnits" tabindex="-1">' + (searchFunc ? srcinfo : se) + '</ul>');
        var slistctrl = slist($itemscont, { sel: svalc, afs: svalc + '.o-ditm', botf: botf, topf: topf });
        var autofocus = slistctrl.autofocus;

        var $menuSearchCont = $(rdiv('o-srcc ' + soldngp, '<input type="text" class="o-src awe-txt" placeholder="' + cd().Search + '..." size="1"/>' + loadingHtml));
        var $menuSearchTxt = $menuSearchCont.find('.o-src');
        var srctxt = o.srctxt || $menuSearchTxt;
        var lastq;

        if (isMobile())
            $dropmenu.addClass('o-mobl');

        if (o.rtl) {
            $dropmenu.addClass('awe-rtl').css('direction', 'rtl');
        }

        if (o.srctxt) {
            noAutoSearch = 1;
        }

        $dropmenu.append($menuSearchCont);
        $dropmenu.append($itemscont);
        $itemscont.append($menu);
        $menuSearchCont.hide();

        o.renderItemDisplay = o.renderItemDisplay || function (item) {
            return itemFunc ? eval(itemFunc)(item) : econ(item, o);
        };

        o.renItAttr = o.renItAttr || function (i, it) {
            return 'data-index="' + i + '" data-val="' + it[vprop] + '"';
        };

        var getSrcTerm = o.gterm || function () {
            return srctxt.val().trim();
        };

        var onItemClick = o.click || function (e) {
            if ($(e.target).closest('.awe-cbc').length) {
                return;
            }

            var clickedItem = $(this);

            var itm = null;
            if (!clickedItem.hasClass('o-cmbi')) {
                itm = itmFromLi(glrs(), clickedItem);
            }

            var cmbival = comboPref + srctxt.val();

            o.select && o.select(itm, cmbival);

            clickedItem.attr('awepid', o.i);
            if (!noSelClose) {
                close();
            }

            $menuSearchTxt.val(se);

            if (noSelClose) {
                var index = clickedItem.data('index');
                filter(se, index);
                lay();
            }
        };

        renderMenu();

        var id = o.i + '-dropmenu';
        $('#' + id).remove();
        $('#' + id + '-modal').remove();
        $dropmenu.attr('id', id);
        modal.attr('id', id + '-modal');

        function mergeOpener(opt) {
            opener = opt.opener || opener;
            hpos = opt.hpos || hpos || opener;
            olc = opt.opnlc || olc || opener;
            opBtn = opt.fcs || opBtn || opener;
        }

        function setOpener(opt) {
            if (olc) {
                olc.off(skeydown, openerOnKeyDown);
            }

            mergeOpener(opt);
            var uidialog = 0, ddpop = 0;

            if (hpos) {
                uidialog = hpos.closest('.awe-uidialog');
                ddpop = hpos.closest('.o-pmc');
            }

            isFixed = 1;
            if (uidialog && uidialog.length) {
                hostc = uidialog;
                zIndex = hostc.css(szindex);
            } else if (hpos && hpos.parents('.modal-dialog').length) {
                hostc = hpos.closest('.modal');
                zIndex = hostc.css(szindex);
            } else if (ddpop && ddpop.length) {
                zIndex = ddpop.css(szindex);
                if (ddpop.css(sposition) !== 'fixed') {
                    isFixed = 0;
                }
            } else {
                isFixed = isPosFixed(hpos);
            }

            olc && olc.on(skeydown, openerOnKeyDown);

            if (!$dropmenu.closest(hostc).length) {
                hostc.append(modal.hide());
                hostc.append($dropmenu);
            }
        }

        function openerOnKeyDown(e) {
            if (isOpen()) {
                handleMoveSelectKeys(e);
            }
        }

        setOpener(o);

        $dropmenu.on(sclick, svalc, onItemClick)
            .on(smousemove, svalc, function () { slistctrl.focus($(this)); })
            .on(skeydown, handleMoveSelectKeys);

        $dropmenu.on(sclick, '.o-itm .awe-cbc', function () {
            var itm = $(this).closest('.o-itm');
            var mylvl = parseInt(itm.data('lvl'), 10);
            var next = itm.next();
            var ditm = itmFromLi(glrs(), itm);

            // expand
            if (itm.hasClass(sawecollapsed)) {
                // if lazy node
                if (ditm.l) {
                    ditm.l = 0;
                    setTimeout(function () { itm.prepend(loadingHtml); }, 100);
                    // lazy request
                    $.when(getFunc(kp(ditm)))
                        .done(function (res) {
                            var lazyIt = res[0];
                            if (lazyIt) lazyIt._lz = 1;
                            itmFromLi(glrs(), itm, lazyIt);
                            filter(lastq, itm.data('index'));
                        });
                } else {
                    ditm.cl = 0;
                    itm.removeClass(sawecollapsed);
                    awe.cllp(next, mylvl, false);
                }
            } // collapse
            else {
                ditm.cl = 1;
                itm.addClass(sawecollapsed);
                awe.cllp(next, mylvl, true);
            }
        });

        function handleMoveSelectKeys(e) {
            slistctrl.keyh(e);

            if (which(e) === keyEsc) {
                $(e.target).closest('.awe-popup').data('esc', 1);
                close();
            }
        }

        srctxt.on(skeyup, srctxtKeyup);

        $win.on('resize domlay', lay);

        $dropmenu.on(skeydown, function (e) {
            if (which(e) === keyTab) {
                prevDef(e);
                tabbable(opener).focus();
            }
        });

        function destroy() {
            $dropmenu.remove();
            modal.remove();
            $win.off('resize domlay', lay);
            srctxt.off(skeyup, srctxtKeyup);
        }

        var searchTimerOn;
        var searchTimerTerm;
        var searchTimer;
        var localSearchResCount;
        var itrkc = 0;

        function srctxtKeyup(e) {
            if (!contains(which(e), nonComboSearchKeys) && !e.ctrlKey) {
                var term = getSrcTerm();

                // no search when term == -1
                if (term === -1) {
                    localSearchResCount = 0;
                    term = se;
                } else {
                    localSearchResCount = filter(term);

                    if (localSearchResCount && !o.naa) {
                        open({ nor: 1 });
                    }
                }

                // close on empty query
                if (o.ceq && !term) {
                    close();
                }
                else if (closeOnEmpty && !localSearchResCount) {
                    close();
                }

                if (searchFunc && term) {
                    if (searchTimerOn) {
                        itrkc++;
                    }

                    if (!searchTimerOn) {
                        searchTimerOn = 1;
                        searchTimerTerm = term;

                        searchTimer = setInterval(function () {
                            var newTerm = getSrcTerm();

                            if (newTerm === searchTimerTerm && !itrkc) {
                                clearInterval(searchTimer);
                                searchTimerOn = 0;

                                if (searchTimerTerm) {
                                    srctxt.closest(soldngpc).addClass('o-ldng');

                                    var nsrcfunc = o.minl && searchTimerTerm.length < o.minl
                                        ? function () { return []; }
                                        : eval(searchFunc);

                                    ds.addc([]);
                                    $.when(nsrcfunc(o.sfo,
                                        {
                                            term: searchTimerTerm,
                                            count: localSearchResCount,
                                            cache: ds.gc()
                                        }))
                                        .always(function () {
                                            srctxt.closest(soldngpc).removeClass('o-ldng');
                                        })
                                        .done(function (result) {
                                            nacc && ds.cc();
                                            ds.addc(result, o.gval);

                                            renderMenu();
                                            var term = getSrcTerm();

                                            if (term !== -1) {
                                                var rescount = filter(getSrcTerm());

                                                if (!localSearchResCount && rescount) {
                                                    open({ nor: 1 });
                                                }
                                            }

                                            lay();
                                            o.psf && o.psf(which(e));
                                        });
                                }
                            }

                            searchTimerTerm = newTerm;
                            itrkc = 0;

                        },
                            o.dl || 250);
                    }
                } else {
                    o.psf && o.psf(which(e));
                }
            }
        }

        function botf() {
            var st = $itemscont.scrollTop();
            var sth = $itemscont.height();
            var h = $menu.height();
            if (sth + st < h) {
                $itemscont.scrollTop(st + 25);
            }
        }

        function topf() {
            var st = $itemscont.scrollTop();
            if (st > 0) {
                $itemscont.scrollTop(st - 25);
            }
        }

        function renderMenu() {
            var rs = glrs();

            var count = renderList(rs);

            if ((count > srcThresh || searchFunc) && !noAutoSearch) {
                $menuSearchCont.show();
            } else {
                $menuSearchCont.hide();
            }
        }

        function renderList(rs, query) {
            lastq = query;
            var unescf = function (s) { return s; };
            var itcount = 0;
            var matchFound = 0;
            var side = 'padding-' + (o.rtl ? 'right' : 'left') + ':';
            var res = '';
            var filtf = function () { return 1; };
            var eq = '';

            if (query) {
                eq = escape(query);
                var upquery = query.toUpperCase();
                if (query !== eq) {
                    unescf = unesc;
                }

                filtf = function (s) {
                    return filterFunc(s, upquery);
                };
            }

            var selVal;
            if (o.gval && !o.nom) {
                selVal = o.gval();
            }

            function renderNodes(items, indx, idn, hide, lzn) {
                var res = se;
                for (var i = 0; i < items.length; i++) {
                    var item = items[i];
                    var cont = unescf(cp(item));
                    var clss = item.cs || 'o-itm';
                    var selected = 0;
                    var collapsed = item.cl;
                    var lazy = item.l;

                    var itres = se;

                    var lazyNode = item._lz;
                    item._lz = 0;
                    if (item.it) {
                        itres = renderNodes(item.it, indx + i + ',', idn + 1, hide || collapsed && !query, lazyNode);
                    }

                    var ren = 0;

                    if (itres || !query) {
                        ren = 1;
                    }
                    else if (!item.nv && (filtf(cont) || lzn)) {
                        if (isCombo && cont.length === query.length) {
                            matchFound = 1;
                            if (o.autosel) {
                                clss += ' ' + sselected;
                                selected = 1;
                            }
                        }

                        ren = 1;
                    }

                    var attr = se;

                    if (ren) {
                        var cllp = o.clp && (itres || lazy) ? "<i class='awe-cbc'><i class='awe-ce-ico'></i></i>" : se;
                        if (collapsed) clss += ' ' + sawecollapsed;

                        if (!item.nv) {
                            clss += ' o-v';
                            if (!o.nom
                                && selVal
                                && containsVal(item[vprop], selVal)
                                && (!o.autosel || strEqualsi(cp(item), srctxt.val().toUpperCase()))) {
                                clss += ' ' + sselected;
                                selected = 1;
                            }
                        }

                        var style = se;
                        if (idn) {
                            style = side + (idn + 2) + 'em;';
                        }

                        if (selected) {
                            if (o.rtl) {
                                style += 'background-position:right ' + (idn || .5) + 'em center;';
                            }
                            else if (idn) {
                                style += 'background-position-x:' + idn + 'em;';
                            }
                        }

                        if (hide) {
                            style += 'display:none;';
                        }

                        if (style) {
                            attr = 'style="' + style + '" ';
                        }

                        attr += 'data-lvl="' + (idn + 1) + '" ';

                        res = res + '<li class="' + clss + ' o-ditm" ' + attr + o.renItAttr(indx + i, item) + '>'
                            + cllp + o.renderItemDisplay(item) + '</li>' + itres;
                        itcount++;
                    }
                }

                return res;
            }

            res += renderNodes(rs, se, 0);

            if (isCombo && showCmbItm && query && !matchFound) {
                res = '<li class="o-itm o-v o-cmbi" data-val="' + comboPref + query + '">' + o.renderItemDisplay({ c: eq, k: eq }) + '</li>' + res;
            }

            if (!rs.length) {
                res += '<li class="o-empt">(' + cd().Empty + ')</li>';
            }

            if (searchFunc && !query) {
                res += srcinfo;
            }

            $menu.html(res);
            return itcount;
        }

        function docClickHandler(e) {
            if (istrg(e, '.o-pmodal') && e.type === 'touchstart') return;

            if (e.type === skeydown && e.ctrlKey) return;

            if (!istrg(e, olc) && !istrg(e, $dropmenu)) {
                close();
                opener && opener.trigger('aweblur');
                if (istrg(e, '.o-pmodal')) {
                    o.mdcls && o.mdcls();
                }
            }
        }

        function close() {
            if (isOpen()) toggleOpen();
        }

        function open(opt) {
            if (!isOpen()) toggleOpen(opt);
        }

        function isOpen() {
            return $dropmenu.hasClass('open');
        }

        function toggleOpen(opt) {
            popt = opt;
            if (opt) {
                setOpener(opt);
            }

            opt = opt || {};
            $dropmenu.toggleClass('open');
            if (isOpen()) {
                o.maxph = 0;

                if (hpos && zIndex) {
                    zIndex = calcZIndex(zIndex, hpos);
                }

                opBtn && opBtn.addClass('awe-focus');

                if (zIndex) {
                    modal.css(szindex, zIndex + 1);
                    $dropmenu.css(szindex, zIndex + 1);
                }

                $doc.on(soddDocClEv, docClickHandler);

                // render for searchfunc cache merging
                if (ds.gc() && !opt.nor || mo.needrend) {
                    renderMenu(opt);
                    mo.needrend = 0;
                }

                $dropmenu.show();

                lay();

                if (!(noAutoSearch || isMobile())) {
                    $menuSearchTxt.focus();
                }

                autofocus();

                dpop[o.i] = hpos;
            } else {
                opBtn && opBtn.removeClass('awe-focus');
                $dropmenu.hide();
                modal.hide();
                $doc.off(soddDocClEv, docClickHandler);

                if ($menuSearchTxt.val() && lastq) {
                    $menuSearchTxt.val(se);

                    // reset search
                    filter(se);
                }
            }
        }

        function lay() {
            var maxpoph = maxh || maxDropdownHeight;
            if (maxh === 0) maxpoph = $(window).height();

            if (!$dropmenu.hasClass('open')) return;

            var oitemsc = $dropmenu.find('.o-itsc');
            var oitemscst = oitemsc.scrollTop();

            oitemsc.css('max-height', maxpoph + 'px');
            //oitemsc.css('max-height', se);
            oitemsc.css(sheight, se);
            $dropmenu.css('width', se);

            var minw = o.minw || 0;

            if (opener && !(popt && popt.xy)) {
                minw = Math.max(opener.outerWidth(), minw);
            }

            if (minw)
                $dropmenu.css(sminw, minw + 'px');

            function chkfulls(height) {
                var winw = $win.width();
                var winh = $win.height();
                var limh = 300;
                var limw = 200;
                if (!isCombo && o.afls) {
                    if (height > winh - limh - popSpace && $dropmenu.width() > winw - limw - popSpace) {
                        $dropmenu.width(winw - popSpace);
                        setHeight(0, winh - popSpace - clickOutSpace, 'fls');

                        modal.show();
                        return 1;
                    } else {
                        modal.hide();
                    }
                }
            }

            function setHeight(poph, maxh, valign) {
                var rest = $dropmenu.outerHeight() - oitemsc.height();

                if (valign === 'top') {
                    oitemsc.css(sheight, poph - rest);
                } else {
                    var h = maxh - rest;
                    if (valign !== 'fls') {
                        h = Math.min(h, maxpoph);
                    }

                    h && oitemsc.css('max-height', h);
                }
            }

            layDropdownPopup2(o, $dropmenu, isFixed, null, olc, setHeight, 0, 0, chkfulls, isCombo ? comboMinh : menuMinh, 0, maxpoph, 0, popt && popt.xy, 0, 0);

            oitemsc.scrollTop(oitemscst);
        }

        function filter(query, index, noautofocus) {
            var items = glrs();

            var count = renderList(items, query);

            var focitem = index ? $menu.find('[data-index="' + index + '"]') : null;

            if (!noautofocus) {
                autofocus(focitem);
            }

            return count;
        }

        function clearc() {
            ds.cc();
            renderMenu();
        }

        var api = {
            cc: clearc,
            filter: filter,
            open: open,
            topen: toggleOpen,
            close: close,
            isOpen: isOpen,
            menu: $dropmenu,
            render: renderMenu,
            destroy: destroy,
            lay: lay
        };

        return api;
    }

    function odropdown(o, opt) {
        opt = opt || {};

        var inlabel = readTag(o, 'InLabel', se);
        var caption = readTag(o, 'Caption', cd().Select);
        var autoSelectFirst = readTag(o, 'AutoSelectFirst');
        var minWidth = readTag(o, 'MinWidth');
        var cacheKey = readTag(o, 'Key', o.i);
        var captionFunc = readTag(o, 'CaptionFunc');
        var useConVal = readTag(o, 'UseConVal');
        var comboPref = readTag(o, 'GenKey') ? '__combo:' : se;
        var openOnHover = readTag(o, "OpenOnHover");
        var noSelClose = readTag(o, 'NoSelClose');
        var clearCacheOnLoad = readTag(o, 'ClearCacheOnLoad');
        var btn = $(rbtn('o-ddbtn o-btn awe-btn"', scaret, awed(o) + disbAttr(o)));
        var $odropdown = $(rdiv('o-dd'));
        var $odisplay = $(rdiv('o-disp ' + soldngp, loadingHtml));
        var $valCont = $(rdiv('valCont')).hide();
        var btnCaption = $(rdiv('o-cptn', inlabel + caption));

        var vprop = useConVal ? 'c' : 'k';
        var valInputType = opt.multiple ? "checkbox" : "radio";

        var ds = dataSource(function () { return o.lrs; }, cacheKey);
        var glrs = ds.glr;
        var isCombo = opt.combo;

        var api = o.api;
        api.render = render;
        api.initev = initev;
        api.glrs = glrs;
        api.toggleVal = toggleVal;
        api.moveVal = moveVal;
        var fcs = opt.d ? null : btn;

        var dmcfg = {
            i: o.i,
            rtl: o.rtl,
            opener: $odropdown,
            ds: ds,
            sfo: o,
            select: onSelect,
            cmbp: comboPref,
            sf: readTag(o, 'SearchFunc'),
            nacc: readTag(o, 'NoCache'),
            getFunc: getFunc,
            cmbi: readTag(o, "CmbItm", 1),
            itemFunc: readTag(o, 'ItemFunc'),
            clss: readTag(o, "PopupClass", se) + ' ' + (opt.menuClass || se),
            noSelClose: noSelClose,
            asmi: readTag(o, "Asmi"),
            combo: isCombo,
            vprop: vprop,
            fcs: fcs,
            opnlc: fcs,
            gval: function () { return awe.val(o.v); },
            afls: 1,
            mdcls: afterClose,
            maxh: readTag(o, 'PopupMaxHeight'),
            minw: readTag(o, 'PopupMinWidth'),
            clp: readTag(o, 'CollapseNodes'),
            o: o,
            nenc: o.nenc
        };

        $.extend(dmcfg, opt.d);

        if (minWidth) $odropdown.css(sminw, minWidth);

        $odropdown.append($odisplay);
        o.d.append($valCont).append($odropdown);
        o.f.addClass('o-field');

        var dd = dropmenu(dmcfg);
        api.dd = dd;

        addDestrFunc(o, dd.destroy);

        o.mo = { odisplay: $odisplay, caption: caption, odropdown: $odropdown, inlabel: inlabel, vprop: vprop, cp: comboPref, dd: dd };

        opt.renderCaption = opt.renderCaption || function (selected) {
            var sel = caption;
            if (selected.length) {
                sel = opt.renSelCap(selected[0]);
            }

            return inlabel + sel;
        };

        opt.renSelCap = opt.renSelCap || function (item) {
            return captionFunc ? eval(captionFunc)(item) : econ(item, o);
        };

        opt.setSel = opt.setSel || function () {
            btnCaption.html(getSelectedCaption());
        };

        opt.setSelChange = opt.setSelChange || function () {
            btnCaption.html(getSelectedCaption());
        };

        opt.prerender = opt.prerender || function () {
            btn.append(btnCaption);
            $odisplay.append(btn);
        };

        function getFunc(k) {
            var lazyReq = o.lreq.slice(0);
            lazyReq.push({ name: "Key", value: k });
            return awe.gd(o, lazyReq);
        }

        function onSelect(item, val) {
            toggleVal(item ? unesc(item[vprop]) : val);
            !noSelClose && afterClose();
        }

        function afterClose() {
            var osrc = $odisplay.find('.o-src');
            if (osrc.length && !isMobile()) {
                osrc.focus();
            } else {
                if (opt.multiple) {
                    $odropdown.attr('tabindex', '0').focus().removeAttr('tabindex');
                } else {
                    btn.focus();
                }
            }
        }

        function getSelectedCaption() {
            function getNodesSelItms(items, res, vals) {
                for (var i = 0; i < items.length; i++) {
                    var item = items[i];

                    if (containsVal(kp(item), vals) && !item.nv) res.push(item);

                    if (item.it) getNodesSelItms(item.it, res, vals);
                }
            }

            var vals = awe.val(o.v);

            var selected = [];
            getNodesSelItms(glrs(), selected, vals);

            return opt.renderCaption(selected);
        }

        function toggleVal(val) {
            if (opt.multiple) {
                var arrval = awe.val(o.v, 1);
                var exindx = getIxInArray(val, arrval);
                if (exindx > -1) {
                    // remove ex val
                    arrval.splice(exindx, 1);
                } else {
                    // add new val
                    arrval.push(toStr(val));
                }

                if (arrval && arrval.length) {
                    val = JSON.stringify(arrval);
                } else {
                    val = '';
                }
            }

            o.v.val(val);
            renderValInputs();
            awe.ach(o, { ign: 1 });
        }

        function moveVal(val, afval) {
            val = toStr(val);
            var arrval = awe.val(o.v);

            var from = getIxInArray(val, arrval);
            arrval.splice(from, 1);

            if (afval) {
                var to = getIxInArray(afval, arrval);
                arrval.splice(to + 1, 0, val);
            } else {
                arrval.unshift(val);
            }

            o.v.val(JSON.stringify(arrval));
            renderValInputs();
        }

        function initev() {
            function onChange(e, evdata) {
                if (!evdata || !evdata.ign) {
                    api.render();
                }
            }

            bind(o, o.v, schange, onChange);
        }

        function render() {
            opt.setSel();

            renderValContAndMenu();
        }

        function renderValContAndMenu() {
            renderValInputs();

            if (!opt.noMenu) {
                dd.render();
            }
        }

        function renderValInputs() {
            var res = se;
            var rawvals = awe.val(o.v);

            var vals = [];

            var lrs = glrs();

            for (var i = 0; i < rawvals.length; i++) {
                var val = rawvals[i];
                var found = 0;

                loopTrees(lrs, function (item) {
                    var itemv = toStr(item[vprop]);
                    if (val === itemv) {
                        vals.push(itemv);
                        found = 1;
                        return 1;
                    }
                });

                if (isCombo && !found && !isEmp(val) && (val.match("^" + comboPref) || !opt.multiple)) {
                    vals.push(val);
                }
            }

            if (autoSelectFirst && (!vals.length || vals.length === 1 && vals[0] === se)) {
                loopTrees(lrs, function (item) {
                    if (!item.nv) {
                        vals = [item[vprop]];
                        return 1;
                    }
                });
            }

            var attr = disbAttr(o);
            attr += ' name="' + o.nm + '"';

            loop(vals, function (value) {
                res += '<input type="' + valInputType + '" value="' + encode(value) + '" ' + attr + ' checked="checked"/>';
            });

            if (!vals.length && opt.multiple) res = '<input type="checkbox" name="' + o.nm + '" />';

            $valCont.html(res);
        }

        function setOpenOnHover() {
            var waitingToClose;
            var waitingToOpen;

            function cancelClose() {
                if (waitingToClose) {
                    clearTimeout(waitingToClose);
                    waitingToClose = null;
                }
            }

            var smousemoveleave = smousemove + ' ' + smouseleave;

            dd.menu.on(smousemove, cancelClose);

            $odropdown.on(smousemove,
                function () {

                    function onMoveLeave(e) {
                        if (e.type === smouseleave || !istrg(e, $odropdown)) {
                            clearTimeout(waitingToOpen);
                            waitingToOpen = null;
                            $doc.off(smousemoveleave, onMoveLeave);
                        }
                    }

                    cancelClose();

                    if (o.enb && !dd.isOpen()) {
                        if (waitingToOpen) return;

                        $doc.on(smousemoveleave, onMoveLeave);

                        waitingToOpen = setTimeout(function () {
                            waitingToOpen && hoverOpen();
                            waitingToOpen = null;
                            $doc.off(smousemoveleave, onMoveLeave);
                        }, 120);
                    }
                });

            function hoverOpen() {
                dd.open();

                $doc.on(smousemoveleave, docMove);

                function docMove(e) {
                    if ((e.type === smouseleave || !(istrg(e, $odropdown) || istrg(e, dd.menu))) && !waitingToClose) {
                        waitingToClose = setTimeout(function () {
                            $doc.off(smousemoveleave, docMove);
                            dd.close();
                            waitingToClose = null;
                        }, 250);
                    }
                }
            }
        }

        opt.init && opt.init();
        opt.prerender();

        if (!opt.noMenu) {
            $odropdown.on(sclick, '.o-ddbtn', function () {
                if (!openOnHover) {
                    dd.topen();
                } else {
                    dd.open(o);
                }
            });

            o.v.on(saweload, function (e) {
                if (ds.gc()) {
                    clearCacheOnLoad && ds.cc();
                    renderValContAndMenu();
                }
            });

            if (openOnHover) setOpenOnHover();
        }

        function changeHandler() {
            opt.setSelChange();
            dd.render();
            o.v.data('comboval', null);
        }

        o.v.on(schange, changeHandler);
    }

    function slist(cont, opt) {
        var itemsel = opt.sel;
        var onenter = opt.enter;
        var focuscls = opt.fcls || sfocus;
        var selcls = opt.sc || sselected;
        var svisf = ':visible:first';
        var itemselector = itemsel + svisf;
        var afs = opt.afs;
        if (afs) afs += svisf;

        function focus(item) {
            remFocus();
            item.addClass(focuscls);
        }

        function remFocus() {
            cont.find('.' + focuscls).removeClass(focuscls);
        }

        function y(o) {
            return o.offset().top;
        }

        function scrollTo(to, cangomid) {
            if (to.length && to.is(':visible')) {
                var fry = y(to);
                var fh = to.outerHeight();
                var conh = cont.height();
                var miny = y(cont);
                var maxy = miny + conh - fh;

                var scrcont = cont;
                var winmax = $win.height() + $doc.scrollTop() - fh;
                var winmin = $doc.scrollTop();

                if (maxy > winmax && winmax < fry) {
                    maxy = winmax;
                    scrcont = $win;
                }

                if (miny < winmin && winmin > fry) {
                    miny = winmin;
                    scrcont = $win;
                }

                var delta = fry < miny ? fry - miny : fry > maxy ? fry - maxy : 0;

                // +1 for ie and ff 
                if (cangomid && delta > fh + 1 && scrcont !== $win) {
                    delta += conh / 2;
                }

                scrcont.scrollTop(scrcont.scrollTop() + delta);
            }
        }

        function scrollToFocused(cangomid) {
            scrollTo(cont.find('.' + focuscls), cangomid);
        }

        function autofocus($itemToFocus) {
            if ($itemToFocus) {
                focus($itemToFocus);
            } else {
                var $selected = cont.find('.' + selcls + ':visible');
                if ($selected.length === 1) {
                    focus($selected);
                } else {
                    if (afs && cont.find(afs).length) {
                        focus(cont.find(afs));
                    } else {
                        focus(cont.find(itemselector));
                    }
                }
            }

            scrollToFocused(1);
        }

        function handleMoveSelectKeys(e) {
            var key = which(e);

            var focused = cont.find('.' + focuscls);

            var select = function (item, f) {
                if (!focused.length) {
                    autofocus();
                }
                else if (item.length) {
                    focus(item);
                    scrollToFocused();
                } else if (f) {
                    f();
                }
            };

            if (contains(key, controlKeys)) {
                if (key === keyDown) {
                    prevDef(e);
                    var $next = focused.nextAll(itemselector);
                    select($next, opt.botf);
                } else if (key === keyUp) {
                    prevDef(e);
                    var $prev = focused.prevAll(itemselector);
                    select($prev, opt.topf);
                } else if (key === keyEnter) {
                    if (onenter) {
                        onenter(e, focused);
                    }
                    else {
                        prevDef(e);
                        focused.click();
                    }
                }

                return 1;
            }

            return 0;
        }

        return {
            focus: focus,
            scrollToFocused: scrollToFocused,
            scrollTo: scrollTo,
            keyh: handleMoveSelectKeys,
            autofocus: autofocus,
            remf: remFocus
        };
    }

    function notif(text, time, clss) {
        var notifCont = $('#o-notifcont');

        if (!notifCont.length) {
            notifCont = $(rdiv('o-ntpc', se, 'id="o-notifcont"'));
            notifCont.appendTo($('body'));
        }

        var $popup = $(rdiv('o-ntp')).addClass(clss);
        var $content = $(rdiv('o-ntc')).html(text || 'error occured');
        var $closeBtn = $(sclosespan);

        notifCont.append($popup);
        $popup.append($content);
        $popup.append($closeBtn);
        $popup.append(rdiv('o-ntlb'));

        $closeBtn.on(sclick, function () { close(); });

        $content.css('max-height', $win.height() - 50);

        $popup.css('opacity', .97);

        if (time) {
            setTimeout(function () {
                close(1);
            }, time);
        }

        function close(fade) {

            if (fade === 1) {
                setTimeout(function () { $popup.remove(); }, 1000);
                $popup.addClass('o-clsg');
                $popup.css('opacity', 0);
                $popup.css('margin-top', -$popup.outerHeight(true));
            } else {
                $popup.remove();
            }
        }

        return $popup;
    }

    function dropdownPopup(o) {
        var pp = o.p; // popup properties
        var popup = pp.d; // popup div
        pp.i = pp.i || se;
        o.cx = {};
        var wrap = $(rdiv('o-pwrap', rdiv('o-pmc o-pu', se, 'tabindex="-1" data-i="' + pp.i + '"'))).hide();

        var api = function () { };
        o.cx.api = api;
        var itmoved, header, $opener, openerId, fls, popt, top;
        var btns = pp.btns;

        var outsideClickClose = readTag(o, "Occ");

        var isDropDown = readTag(o, "Dd", !!o.api);
        var showHeader = readTag(o, "Sh", !isDropDown);
        var toggle = readTag(o, "Tg");

        var sopener = o.opener;
        var $dropdownPopup = wrap.find('.o-pmc').addClass(pp.pc);
        pp.mlh = 0;

        popup.addClass('o-pc');

        if (!isDropDown) {
            popup.addClass('o-fpp');
        }

        if (isNull(pp.minw)) {
            popup.css(sminw, pp.minw);
        }

        if (o.rtl) {
            $dropdownPopup.addClass('awe-rtl').css('direction', 'rtl');
        }

        $dropdownPopup.append(popup);

        var modal = $(rdiv('o-pmodal o-pu', se, 'tabindex="-1" data-i="' + pp.i + '"'));
        modal.on(skeyup, closeOnEsc);

        $dropdownPopup.on(skeydown,
            function (e) {
                if (e.keyCode === keyTab) {
                    var tabbables = tabbable($dropdownPopup),
                        first = tabbables.first(),
                        last = tabbables.last();
                    var trg = $(e.target);
                    if (trg.is(last) && !e.shiftKey) {
                        first.focus();
                        return false;
                    } else if (trg.is(first) && e.shiftKey) {
                        last.focus();
                        return false;
                    }
                }
            });

        var isFixed;
        var zIndex = minZindex;

        function layPopup(isResize, canShrink) {
            if (pp.nolay) return;

            if (isResize) {
                // reset position changed by dragging popup
                itmoved = 0;
            }

            if (!pp.isOpen) return;

            var winavh = $win.height() - popSpace;
            var winavw = $win.width() - popSpace;

            if (top) {
                winavh -= popTopSpace;
            }

            modal.css(szindex, zIndex);
            $dropdownPopup.css('overflow-y', 'auto');
            if (zIndex) {
                $dropdownPopup.css(szindex, zIndex);
            }

            popup.css('width', se);
            popup.css(sheight, se);
            popup.css('max-height', se);

            var oapi = o.api || {};

            if (oapi.rlay) {
                oapi.rlay();
            }

            var capHeight = o.f ? outerh(o.f.find('.awe-openbtn:first'), 1) : 0;

            fls = pp.f;
            top = pp.top;

            if (openerId && !$opener.closest(document).length) {
                $opener = $('#' + openerId);
            }

            var height = pp.dh || pp.h;

            if (!height) {
                height = Math.max(350, outerh($dropdownPopup));
            }

            var maxph = 0;

            var dpw = $dropdownPopup.outerWidth();
            var pow = popup.outerWidth();

            var nonpopw = dpw - pow;

            var resth = $dropdownPopup.outerHeight() - popup.outerHeight();

            if (oapi.lay) {
                height = pp.dh || maxLookupDropdownHeight;
                maxph = pp.dh || maxLookupDropdownHeight;
            }

            var limw = winavw;
            if (pp.mw) {
                popup.css('max-width', pp.mw);
                limw = pp.mw;
            }

            if (pp.w) {
                if (!isDropDown || pp.wws) {
                    var minw = Math.min(pp.w, Math.min(limw, winavw)) - nonpopw;
                    popup.css(sminw, minw);
                }
            }

            var minh = height;
            if (!isDropDown || pp.hws) {
                if (pp.h) {
                    minh = pp.h;
                    if (height < minh) height = minh;
                    if (maxph < minh) maxph = minh;
                    popup.css('min-height', Math.min(pp.h, winavh) - resth);
                }
            }

            function chkfulls(ph) {
                var pw = $dropdownPopup.outerWidth();
                var h = $dropdownPopup.outerHeight();
                var wlim = 25, hlim = 70;

                if (pp.af) {
                    wlim = 200;
                    hlim = 300;

                    h = Math.max(ph, h);
                }

                if (isNotNull(pp.wlim)) {
                    wlim = pp.wlim;
                }

                var hcondit = pw > winavw - wlim && h > winavh - hlim;

                if (!oapi.lay) {
                    hcondit = hcondit && h * .7 > winavh - h;
                }

                if (hcondit) {
                    fls = 1;
                }

                if (fls) {

                    var avh = winavh - resth - (showHeader || btns ? 0 : clickOutSpace);
                    if (oapi.lay) {
                        o.avh = avh;
                        o.nph = resth;
                    }

                    popup.css('width', winavw - nonpopw);
                    popup.css(sheight, avh);
                }

                if (fls || pp.m) {
                    modal.show();
                } else {
                    modal.hide();
                }

                return fls;
            }

            function setmaxheight(poph, maxh, valign) {
                var avh = maxh - resth;

                popup.css('max-height', avh);

                if (oapi.lay) {
                    avh = poph - resth;

                    popup.css(sheight, avh);

                    o.avh = avh;
                    o.nph = resth;
                }
            }

            layDropdownPopup2(o,
                $dropdownPopup,
                isFixed,
                capHeight,
                isDropDown ? $opener : null,
                setmaxheight,
                itmoved,
                canShrink,
                chkfulls,
                minh,
                height,
                maxph,
                popup,
                popt && popt.xy,
                top);

            popup.trigger('awepos');
        }

        function outClickClose(e) {
            var shouldClose;
            if (isNotNull(outsideClickClose)) {
                shouldClose = outsideClickClose;
            } else {
                shouldClose = closePopOnOutClick || $opener && isDropDown;
            }

            function lookForMe(it) {
                var popup = it.closest('.o-pu');

                var pid, mclick = 0;
                if (it.is('.o-pmodal')) {
                    mclick = 1;
                }

                if (popup.length) {
                    pid = popup.data('i');
                }

                if (pid) {
                    if (pid === pp.i && !mclick) return 1;

                    var popener = dpop[pid];
                    if (popener)
                        return lookForMe(popener);
                }
            }

            if (shouldClose) {
                var trg = $(e.target);
                if (!lookForMe(trg)) {
                    if (!trg.closest($opener).length) {
                        if (!trg.closest('.ui-datepicker').length) {
                            api.close({ nofocus: 1 });
                        }
                    }
                }
            } else {
                $doc.off(sddpOutClEv, outClickClose);
            }
        }

        function loadHandler() {
            layPopup();
        }

        $dropdownPopup.on(saweload + ' ' + sawebeginload, loadHandler);

        function resizeHandler() {
            layPopup(1, 1);
        }

        $win.on('resize domlay', resizeHandler);

        api.lay = resizeHandler;

        api.open = function (opt) {
            popt = opt || {};
            var e = popt.e;
            if (toggle) {
                if (pp.isOpen) {
                    return api.close();
                }
            }

            sopener = sopener || popt.opener;

            if (sopener) {
                $opener = sopener;
            } else {
                if (e && e.target) {
                    $opener = $(e.target);
                    var btn = $opener.closest('button');
                    if (btn.length) $opener = btn;
                }

                if (o.f && o.f.closest('.awe-field').length) {
                    $opener = o.f;
                }

                if ($opener && !$opener.is(':visible')) {//|| p.f
                    $opener = null;
                }
            }

            var hostc = $('body');
            isFixed = 1;

            if ($opener) {
                openerId = $opener.attr('id');
                var uidialog = $opener.closest('.awe-uidialog');
                var parPop = $opener.closest('.o-pmc');

                if (uidialog.length) {
                    hostc = uidialog;
                    zIndex = hostc.css(szindex);
                } else if ($opener.parents('.modal-dialog').length) {
                    hostc = $opener.closest('.modal');
                    zIndex = hostc.css(szindex);
                } else if (parPop.length) {
                    zIndex = parPop.css(szindex);
                    if (parPop.css(sposition) !== 'fixed') {
                        isFixed = 0;
                    }
                } else {
                    isFixed = isPosFixed($opener);
                    zIndex = calcZIndex(zIndex, $opener);
                }
            }

            if (!isDropDown) {
                hostc = $('body');
                isFixed = 1;
                header.show();
            } else {
                itmoved = 0;
            }

            if (showHeader) {
                header.show();
            } else {
                header.hide();
            }

            hostc.append(modal);
            hostc.append(wrap);
            wrap.show();
            pp.isOpen = 1;

            layPopup(0, isDropDown);

            dpop[pp.i] = $opener;

            setTimeout(function () {
                $doc.on(sddpOutClEv, outClickClose);
            }, 100);

            if (!isMobile() && !pp.nf) {
                setTimeout(function () {
                    var popTab = tabbable(popup).first();
                    if (popTab.length) {
                        popTab.focus();
                    } else {
                        tabbable(wrap).first().focus();
                    }
                },
                    10);
            }

            popup.trigger('aweopen');
        };

        api.close = function (popt) {
            var opt = popt || {};
            var nofocus = opt.nofocus;

            popup.trigger('awebfclose', opt);
            if (opt.noclose && !opt.force) return;

            itmoved = 0;
            wrap.hide();
            if (modal) modal.hide();
            pp.isOpen = 0;
            if (pp.cl) {
                pp.cl();
            }

            popup.trigger('aweclose', { out: nofocus });

            if (!pp.dntr) {
                awe.destroyCont(wrap);
                wrap.remove();
                if (modal) modal.remove();
            }

            $doc.off(sddpOutClEv, outClickClose);

            if (!nofocus) {
                if ($opener && $opener.length) {
                    (o.fcs || $opener).focus();
                }
            }

            return true;
        };

        api.destroy = function () {
            awe.destroyCont(wrap);
            api.close({ force: 1, nofocus: 1 });
            wrap.remove();
            if (modal) modal.remove();
            $win.off('resize domlay', resizeHandler);
        };

        popup.data('api', api);
        pp.api = api;

        header = $(rdiv('o-phdr', rdiv('o-ptitl', pp.t || snbsp) + sclosespan));

        $dropdownPopup.prepend(header);
        header.find('.o-cls').click(api.close);

        function getDragPopup() {
            itmoved = 1;
            return $dropdownPopup;
        }

        if (!isDropDown) {
            dragAndDrop({
                from: header,
                ch: getDragPopup,
                kdh: 1,
                cancel: function () { return fls; }
            });
        }

        addFooter(btns, $dropdownPopup, popup, 'o-pbtns');

        function closeOnEsc(e) {
            if (which(e) === keyEsc) {
                var dtpf = $(e.target).closest('.awe-datepicker-field');
                if (dtpf.length && dtpf.find('.awe-val').datepicker('widget').is(':visible')) {
                    /*empty*/
                } else {
                    if (!popup.data('esc')) {
                        api.close({ esc: 1 });
                    }
                }

                popup.data('esc', null);
            }
        }

        $dropdownPopup.on(skeyup, closeOnEsc);

        return wrap;
    }

    function addFooter(btns, cont, popup, fclass) {
        // add btns if any
        if (btns && btns.length) {
            var btnslen = btns.length;

            var footer = $('<div/>').addClass(fclass);

            if (reverseDefaultBtns && btnslen > 1) {
                if (btns[btnslen - 1].c) {
                    var cbtn = btns.pop();
                    var kbtn = btns.pop();
                    btns.push(cbtn);
                    btns.push(kbtn);
                }
            }

            loop(btns, function (el) {
                var cls = !el.k ? 'awe-sbtn' : 'awe-okbtn';
                var btn = $(rbtn('awe-btn ' + cls + ' o-pbtn', el.text));

                if (el.tag) {
                    var tag = el.tag;
                    if (tag.K)
                        loop(tag.K, function (key, indx) {
                            btn.attr(key, tag.V[indx]);
                        });
                }

                btn.click(function () { el.click.call(popup); });
                footer.append(btn);
            });

            cont.append(footer);
        }
    }

    function inlinePopup(o) {
        var p = o.p; //popup properties
        var popup = p.d; //popup div
        var wrap = $('<div class="o-inlp awe-popupw"></div>').hide();

        //minimum height of the lookup/multilookup content
        p.mlh = 250;

        wrap.append(popup);

        //decide where to attach the inline popup
        //tag and tags are set using .Tag(object) .Tags(string)
        if (o.tag && o.tag.target) {
            $('#' + o.tag.target).append(wrap);
        } else if (o.tag && o.tag.cont) {// cont used in grid nesting
            o.tag.cont.prepend(wrap);
        } else if (o.tags) {
            $('#' + o.tags).append(wrap);
        } else if (o.f) { //component field
            o.f.after(wrap);
        } else {
            $('body').prepend(wrap);
        }

        var api = function () { };
        api.open = function () {
            wrap.show();
            p.isOpen = 1;
            popup.trigger('aweopen');
        };
        api.close = function () {
            wrap.hide();
            p.isOpen = 0;
            if (p.cl) {
                p.cl();
            }
            popup.trigger('aweclose');
            if (!p.dntr) {
                wrap.remove();
            }
        };
        api.destroy = function () {
            api.close();
            wrap.remove();
        };

        popup.data('api', api);

        var closeBtn = $(rbtn('awe-btn', snbsp + '&times;' + snbsp)).click(api.close);

        if (readTag(o, "Sh", 1)) {
            wrap.prepend($('<div class="o-inltitl"></div>').append(closeBtn).append("<span class='o-inltxt'>" + p.t + "</span>"));
        }

        addFooter(p.btns, wrap, popup);

        return wrap;
    }

    function gridPageInfo(o) {
        var $grid = o.v;
        var $pageInfo = $('<div class="o-gpginf"></div>');
        var delta = 0;
        var $footer = $grid.find('.awe-footer');
        if (!$footer.length) return;

        $grid.on(sawerowch, function (e, data) {
            if (data) {
                delta += data;
                render();
            }
        });

        $grid.find('.awe-footer').append($pageInfo);

        $grid.on('awebfren', function (e) {
            if (!$(e.target).is($grid)) return;
            delta = 0;
            render();
        });

        function render() {
            var lrs = dto($grid).lrs;
            var pageSize = lrs.ps;
            var itemsCount = lrs.ic + delta;

            var first = pageSize * (lrs.p - 1) + 1;
            var last = lrs.pgn ? first + pageSize - 1 + delta : itemsCount;
            if (last > itemsCount) last = itemsCount;
            if (!itemsCount || !last) first = 0;

            $grid.find('.o-gpginf').html(first + ' - ' + last + ' ' + format(cd().GridInfo, [itemsCount]));
        }
    }

    function gridPageSize(o) {
        if (isMobile()) return;

        var items = [5, 10, 20, 50];
        function addIfLacks(ni) {
            if (!contains(ni, items)) {
                items.push(ni);
                items.sort(function (a, b) {
                    return a - b;
                });
            }
        }

        var $grid = o.v;

        var $footer = $grid.find('.awe-footer');
        if (!$footer.length) return;

        var psi = o.i + 'PageSize';

        $grid.find('.awe-footer').append('<div class="awe-ajaxradiolist-field o-gpgs awe-field"><input id="' + psi + '" class="awe-val" type="hidden" value="' + o.ps + '" /><div class="awe-display"></div></div>');

        addIfLacks(o.ps);

        function setPages() {
            return $.map(items, function (val) {
                return { c: val, k: val };
            });
        }

        awe.radioList({ i: psi, nm: psi, df: setPages, l: 1, md: awem.odropdown, tag: { InLabel: cd().PageSize + ": " } });

        o.data.keys.push("pageSize");
        o.data.vals.push(psi);
        o.data.l.push(1);
    }

    function gridInfScroll(o) {
        var $grid = o.v;
        var con = $grid.find(sawecontentc);
        var scon = con.children().first();
        var loading;
        var gonext = 0;
        var lastSt;
        function adjustMargin() {
            var diff = Math.max(con.height() - scon.height() + 25, 25);
            scon.css('margin-bottom', diff + 'px');
        }

        adjustMargin();

        function setSt(st) {
            lastSt = st;
            con.scrollTop(st);
        }

        con.on('scroll', function () {
            var res = o.lrs;
            var st = con.scrollTop();
            var sconh = scon.outerHeight(true);
            var conh = con.innerHeight();
            var maxst = sconh - conh + 1;
            var lst = lastSt;

            adjustMargin();

            if (loading) {
                con.scrollTop(lst);
            } else {
                if (lst < st) {

                    if (gonext < 0) {
                        gonext = 0;
                    }

                    if (st > maxst - 3) {
                        gonext++;
                        if (gonext > 1 && res.p < res.pc) {
                            loading = 1;
                            $.when(nextPage())
                                .done(function () {
                                    gonext = loading = 0;
                                    st = 1;
                                    setSt(st);
                                });
                        } else {
                            st--;
                            setSt(st);
                        }
                    }
                }
                else if (lst > st) {

                    if (gonext > 0) {
                        gonext = 0;
                    }

                    if (st < 3) {
                        gonext--;
                        if (gonext < -2 && res.p > 1) {
                            loading = 1;
                            $.when(prevPage())
                                .done(function () {
                                    gonext = loading = 0;
                                    st = maxst;
                                    setSt(st);
                                });
                        } else {
                            st++;
                            setSt(st);
                        }
                    }
                }

                lastSt = st;
            }

            function nextPage() {
                return dapi($grid).load({ oparams: { page: res.p + 1 } });
            }

            function prevPage() {
                return dapi($grid).load({ oparams: { page: res.p - 1 } });
            }
        });
    }

    function isMobileOrTablet() {
        return false;
    }

    var clientDict = {
        Empty: 'empty',
        GridInfo: "of {0} items",
        Select: 'please select',
        SearchForRes: 'search for more results',
        Search: 'search',
        NoRecFound: 'no records found',
        PageSize: 'page size',
        Months: [
            "January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        ],
        Days: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
    };

    function gldng(disb, noEmpMsg) {
        return function (o, opt) {
            opt = opt || {};
            opt.lhtm = opt.lhtm || '<div class="spinner"><div class="dot1"></div><div class="dot2"></div></div>';
            var ctm = opt.ctm || 40;

            var $grid = o.v;
            var $mcontent = $grid.find(sawecontentc);
            var isOn;

            var exfeat = o.api.ft['ldng'];

            if (exfeat) exfeat.remf();

            var feat = {};

            function apply() {
                if (isOn || disb) return;
                function setNoRec() {
                    $mcontent.find('.o-gempt').remove();
                    if (!$mcontent.find(sawerowc).length) {
                        var msg = o.props["empMsg"] || cd().NoRecFound;
                        $mcontent.prepend($('<div class="o-gempt">' + msg + '</div>')
                            .css('margin-top', Math.max($mcontent.height() / 2 - 90, 10) + 'px'));
                    }
                }

                function onBeginLoad(e) {
                    if ($(e.target).is($grid)) {
                        $grid.find('.o-gempt').remove();

                        var $spin = $('<div class="spinCont">' + opt.lhtm + '</div>').hide();
                        $spin.height($mcontent.height());
                        $mcontent.prepend($spin);
                        $spin.children().first().css('margin-top', $mcontent.height() / 2 - ctm + 'px');
                        $spin.delay(150).fadeIn();
                    }
                }

                function onLoad(e) {
                    if ($(e.target).is($grid)) {
                        $mcontent.find('.spinCont:first').fadeOut().remove();

                        if (!noEmpMsg) {
                            setNoRec();
                        }
                    }
                }

                $grid.on(sawebeginload, onBeginLoad)
                    .on(saweload, onLoad);

                if (!noEmpMsg) {
                    $grid.on(sawerowch, setNoRec);
                }

                feat.remf = function () {
                    if (isOn) {
                        $grid.off(sawebeginload, onBeginLoad)
                            .off(saweload, onLoad)
                            .off(sawerowch, setNoRec);
                        isOn = 0;
                    }
                };

                isOn = 1;
            }

            o.api.ft['ldng'] = feat;

            apply();

            feat.apply = apply;
        };
    }

    function gridLoading(o, opt) {
        gldng()(o, opt);
    }

    function gridMovRows(opt) {
        return function (o) {
            var $grid = o.v;
            var $fromCont = $grid.find(sawecontentc);
            var gridsIds = [o.v.attr('id')];
            var isOn;
            var curhov;
            var drgo;
            var model;

            var feat = { apply: apply };

            function clgapi(of) {
                return dapi(of.closest(sawegridcls));
            }

            function apply() {
                if (isOn) return;
                var scroll = [];
                if (opt && opt.G) {
                    gridsIds = opt.G;
                }

                scroll.push({ c: $win, y: 1 });

                function newo(cx) {
                    clgapi(drgo).rem(drgo);
                    return $(clgapi(cx.cont).renderRow(model));
                }

                function ondrop(cx) {
                    var $toGrid = cx.cont.closest(sawegridcls);
                    if (!$toGrid.is($grid)) {
                        movedGridRow($grid, $toGrid);
                    }
                }

                function swrap(cx) {
                    curhov = 0;
                    drgo = cx.drgo;
                    model = dapi($grid).model(drgo);

                    // create dragobj
                    if (drgo.closest('.awe-itc').is('tbody')) {
                        return $('<div/>')
                            .prop('class', $grid.prop('class'))
                            .append($('<table/>')
                                .append(drgo.closest('table').find('colgroup').clone())
                                .append(drgo.clone()));
                    }
                }

                function shov(cx) {
                    if (curhov !== cx.cont) {
                        cx.plh.remove();

                        curhov = cx.cont;
                        cx.plh = $(clgapi(curhov).renderRow(model)).addClass('awe-hl');
                    }
                }

                var remf = dragReor({
                    from: $fromCont.find('.awe-itc:first'),
                    tof: function () {
                        var gobjs = [];
                        loop(gridsIds, function (val) {
                            var tog = $('#' + val).find(sawecontentc);
                            scroll.push({ c: tog, y: 1 });
                            gobjs.push(tog);
                        });

                        return gobjs;
                    },
                    sel: '.awe-row',
                    plh: 'awe-hl',
                    scroll: scroll,
                    newo: newo, // gen new obj to append
                    ondrop: ondrop,
                    hovec: function (cx) {
                        // hovering cont
                        cx.cont.find('.awe-itc:first').append(cx.plh);
                    },
                    cancel: function (cx) {
                        return awe.dgcf($fromCont)(cx) || cx.drgo.closest('.o-glrow').length;
                    },
                    swrap: swrap,
                    shov: shov
                });

                feat.rem = function () {
                    if (isOn) {
                        remf();
                        isOn = 0;
                    }
                };

                isOn = 1;
            }

            o.api.ft['mvr'] = feat;

            apply();

            feat.apply = apply;
        };
    }

    function gridInlineEdit(createUrl, editUrl, oneRow, reloadOnSave, rowClick, dataFunc, initRow) {
        var df = dataFunc || {};

        function vldClsName(prop) {
            return 'ovld-' + toLowerFirst(prop);
        }

        return function (o) {
            var $grid = o.v;
            var api = dapi($grid);
            var newic = 1;
            var activeRow;

            function oneRowCheck(action) {
                if (oneRow) {
                    var otherRow = $grid.find(sglrowc).first();
                    if (otherRow.length && otherRow.data(sstate) !== 3) {
                        checkAndPreventActionUntilSave(otherRow, action);
                        return 1;
                    }
                }
            }

            api.inlineCreate = function inlineCreate(newModel) {
                if (oneRowCheck(function () { inlineCreate(newModel); })) {
                    return;
                }

                newModel = newModel || {};
                var nitm = $(api.renderRow(newModel));
                nitm.addClass(snewrow);
                $grid.find('.awe-content:first .awe-itc:first').prepend(nitm);
                $grid.trigger(sawerowch);
                inlineEdit(nitm);
            };

            api.inlineEdit = inlineEdit;
            api.inlineCancel = function ($row, focus) { cancelRow($row, focus); };
            api.inlineSave = save;

            function isMine(trg) {
                return trg.closest(sawegridcls).is($grid);
            }

            $grid.on(sclick, '.o-glsvb', function () {
                var trg = $(this);
                if (isMine(trg)) {
                    save(trg.closest(sawerowc), 1);
                }
            })
                .on(sclick, '.o-glcanb', function () {
                    var trg = $(this);
                    if (isMine(trg)) {
                        api.inlineCancel(trg.closest(sawerowc), 1);
                    }
                })
                .on(sclick, '.o-gledtb', function () {
                    var trg = $(this);
                    if (isMine(trg)) {
                        inlineEdit(trg.closest(sawerowc));
                    }
                });

            function inlineEdit(row, td) {
                if (oneRowCheck(function () { inlineEdit(row, td); })) {
                    return;
                }

                activeRow = row;

                row.addClass(sglrow + ' awe-nonselect');

                var $colgroup = row.closest('.awe-table').find('colgroup');

                var model = api.model(row);
                var hidden = se;
                var prefix = o.i + (model[o.k] || se);

                var gcvcontf = function (column) {
                    var tdi = $colgroup.find('col[data-i="' + column.ix + '"]').index();
                    var gtd = row
                        .children().eq(tdi);
                    return gtd;
                };

                if (!$colgroup.length) {
                    gcvcontf = function (column) {
                        return row.find('.awe-cv[data-i="' + column.ix + '"]');
                    };
                }

                if (row.hasClass(snewrow)) {
                    prefix += 'new' + newic++;
                }

                var idFunc = function (strid) {
                    return prefix + strid;
                }

                function parseFormat(str, value) {
                    var boolVal = value ? 'checked' : se;
                    str = str.split('#Value').join(escape(value))
                        .split('#Prefix').join(prefix)
                        .split('#ValChecked').join(boolVal);

                    for (var key in model) {
                        var sval = getVal(key);
                        str = str.split(".(" + key + ")").join(sval)
                            .split(".(" + toUpperFirst(key) + ")").join(sval);
                    }

                    str = str.replace(/\.\(\w+\)/g, "");
                    return str;
                }

                function getVal(prop) {
                    var val = isNull(prop) ? se : model[o.lrs.a ? toLowerFirst(prop) : prop];

                    if (isNull(val)) val = se;
                    return val instanceof Array ? JSON.stringify(val) : val;
                }

                var cx = { id: idFunc, model: model, val: getVal };

                var strInitFuncs = [];
                var initFuncs = [];

                loop(o.columns, function (column) {
                    var tag = column.Tag || column.tag;

                    if (tag) {
                        var uiinl = tag.inline || tag.inlinef;

                        var inlelms = tag.Format || tag.inline;

                        if (tag.inlinef) {
                            inlelms = tag.inlinef(cx);
                        }
                        else if (tag.FormatFunc) {
                            inlelms = eval(tag.FormatFunc)(model, tag.Fpar);
                        }

                        var inl = inlelms;

                        if (inl && uiinl) {
                            if (!(inl instanceof Array)) {
                                inl = [inl];
                            }

                            loop(inl, function (rule) {
                                var id = rule.modelProp || rule.valProp || column.P;

                                if (rule.func) {
                                    rule.init = function (rcx) {
                                        var opt = rule.opt || {};
                                        if (typeof opt === 'function') {
                                            opt = opt(rcx);
                                        }

                                        opt.id = rcx.id(id);

                                        rule.func(opt);
                                    }

                                    var type = 'hidden';

                                    if (rule.func === awem.aweui.datepicker) {
                                        type = 'text';
                                    }

                                    rule.format = '<input type="' + type + '" id="#Prefix' + id + '" value="#Value" name="' + id + '" />';
                                }

                                rule.ValProp = rule.valProp || id;
                                rule.ModelProp = id;
                            });

                            tag.Format = inl;
                            inlelms = inl;
                        }

                        if (inlelms && inlelms.length) {
                            var gtd = gcvcontf(column);
                            if (!column.Hid) {
                                gtd.empty();
                            }

                            for (var j = 0; j < inlelms.length; j++) {
                                var inlel = inlelms[j];

                                var val = getVal(inlel.ValProp);

                                var inlHtml = inlel.html && inlel.html(cx) || parseFormat(inlel.Format || inlel.format || se, val);

                                if (column.Hid) {
                                    hidden += inlHtml;
                                } else {
                                    var prop = inlel.ModelProp;
                                    var validstr =
                                        prop &&
                                            inlHtml.indexOf(sgvalidmsg) === -1 ?
                                            rdiv(sgvalidmsg + ' ' + vldClsName(prop), se, 'vld-for="' + prop + '"') :
                                            se;

                                    var cellcont = rdiv('oinlc', rdiv('oinle', inlHtml) + validstr);
                                    addHidden(gtd.append(cellcont));
                                }

                                if (inlel.JsFormat) {
                                    strInitFuncs.push(parseFormat(inlel.JsFormat, val));
                                }
                                else if (inlel.init) {
                                    initFuncs.push(inlel.init);
                                }
                            }
                        }
                    }
                });

                if (hidden) {
                    addHidden(row
                        .children().last());
                }

                function addHidden(cont) {
                    if (hidden) {
                        cont.append($('<div>' + hidden + '</div>').hide());
                        hidden = se;
                    }
                }

                if (strInitFuncs.length) {
                    for (var i = 0; i < strInitFuncs.length; i++) {
                        eval(strInitFuncs[i]);
                    }
                }

                loop(initFuncs, function (f) {
                    f(cx);
                });

                var inState = serializeAllForm(row
                );

                row
                    .data('ins', inState);
                row
                    .trigger(saweinledit);

                // init(row, td) 
                initRow && initRow(row
                    , td);

                var selfunc = function (elm) { return tabbable(elm).first(); };

                // focus first input
                if (!isMobile()) {
                    setTimeout(function () {
                        if (td && selfunc(td).length) {
                            selfunc(td).focus();
                        } else {
                            // no focus when hor scrollbar
                            var gcont = $grid.find('.awe-content');
                            if (gcont.children().first().width() <= gcont.width())
                                selfunc(row
                                ).focus();
                        }
                    });
                }

                if (rowClick) {
                    setTimeout(function () {
                        regOutClick(row
                        );
                    });
                }
            }

            function save(erow, isClick) {
                if (erow.data('slock')) {
                    return;
                }

                erow.data('slock', 1);
                erow.data(sstate, 2);

                // check for changes
                var currState = serializeAllForm(erow);
                var diff = 0;
                var ins = erow.data('ins');
                if (ins.length !== currState.length) {
                    diff = 1;
                } else {
                    for (var i = 0; i < ins.length; i++) {
                        if (ins[i].name !== currState[i].name || ins[i].value !== currState[i].value) {
                            diff = 1;
                            break;
                        }
                    }
                }

                if (!diff && !erow.hasClass(snewrow)) {
                    cancelRow(erow, isClick);
                    return 1;
                }

                o.lrso = 1;

                function onError(p1, p2, p3) {
                    erow.data(sstate, 0);
                    awe.err(o, p1, p2, p3);
                }

                function onComplete() {
                    erow.data('slock', 0);
                }

                function onSuccess(rdata) {
                    erow.find('.' + sgvalidmsg).empty();
                    var errors = rdata._errs;
                    if (errors) {

                        erow.data(sstate, 1);
                        erow.trigger(saweinlinv);

                        for (var fldName in errors) {
                            var msg = se;
                            loop(errors[fldName], function (cerr) {
                                msg += rdiv('field-validation-error', cerr);
                            });

                            if (!fldName || !erow.find('.' + vldClsName(fldName)).length) {
                                $grid.find('.' + sgvalidmsg + ':last').append(msg);
                            } else {
                                erow.find('.' + vldClsName(fldName)).html(msg);
                            }
                        }
                    } else {
                        erow.data(sstate, 3);

                        var ritem = rdata.Item || rdata.item;

                        awe.destroyCont(erow);

                        if (reloadOnSave) {
                            api.load();
                        } else if (ritem) {
                            // new
                            var nitm = $(api.renderRow(ritem));
                            erow.after(nitm).remove();

                            awe.flash(nitm);

                            closeActiveRow(erow);
                            nitm.trigger(saweinlsave, { r: rdata });
                        } else {
                            // edit
                            var item = api.model(erow);
                            var key = o.k;

                            $.when(api.update(item[key], 0, 1)).done(function () {
                                closeActiveRow(erow);
                                var row = api.select(item[key])[0];
                                if (isClick) focusRowEditBtn(row);
                                row.trigger(saweinlsave, { r: rdata });
                            });
                        }
                    }
                }

                function getUrlOrFunc(opt) {
                    if (opt.func) {
                        var res = $.when(opt.func(opt.data))
                            .fail(opt.error)
                            .done(function (result) {
                                try {
                                    opt.success && opt.success(result);
                                }
                                finally {
                                    opt.complete && opt.complete();
                                }
                            });

                        return res;
                    } else {
                        return awe.ajx(opt, o);
                    }
                }

                var sdata = erow.find(':input').serializeArray();
                var opt = {
                    data: sdata.concat(awe.params(o, 1)),
                    success: onSuccess,
                    complete: onComplete,
                    error: onError
                }

                if (erow.hasClass(snewrow)) {
                    opt.url = createUrl;
                    opt.func = df.create;
                } else {
                    opt.url = editUrl;
                    opt.func = df.edit;
                }

                getUrlOrFunc(opt);
            }

            function cancelRow($row, isClick) {

                awe.destroyCont($row);

                if ($row.hasClass(snewrow)) {
                    $grid.trigger(saweinlcancel);
                    $row.remove();
                } else {
                    var rowi = $row.data('i');
                    var item = api.model($row);
                    var nrow = $(api.renderRow(item, null, rowi));
                    $row.hasClass('awe-alt') && nrow.addClass('awe-alt');
                    $row.after(nrow).remove();

                    if (isClick) {
                        focusRowEditBtn(nrow);
                    }

                    nrow.trigger(saweinlcancel);
                }

                $grid.trigger(sawerowch);
                closeActiveRow($row);
            }

            function closeActiveRow($row) {
                if (activeRow && (activeRow.is($row) || !activeRow.closest(document).length)) {
                    activeRow = null;
                    if ($grid.find(sglrowc).length) {
                        activeRow = $grid.find(sglrowc).first();
                    }
                }
            }

            if (rowClick) {
                $grid.on('click focusin',
                    '.awe-row:not(.o-glar)',
                    function (e) {
                        var row = $(this);
                        if (isMine(row)) {
                            var cell = $(e.target).closest('td, .awe-cv');
                            if ((e.type === 'focusin' ||
                                istrg(e, 'button')) &&
                                !row.hasClass(sglrow) ||
                                !row.closest(document).length) {
                                return;
                            }

                            activeRow = row;
                            if (!row.hasClass(sglrow)) {
                                inlineEdit(row, cell);
                            } else {
                                regOutClick(row);
                            }
                        }
                    });
            }

            function regOutClick(row) {
                function outclick(e) {
                    // row, target
                    function lookFor(src, pivot) {

                        if (pivot.closest(src).length) {
                            return 1;
                        }

                        // multirem, child odropdown item
                        var apid = pivot.attr('awepid');
                        if (apid) {
                            return lookFor(src, $('#' + apid));
                        }

                        var popup = pivot.closest('.o-pu');

                        if (popup.length) {
                            var popener = dpop[popup.data('i')];
                            if (popener) {
                                return lookFor(src, popener);
                            }
                        }
                    }

                    var trg = $(e.target);
                    if (!$(row).closest(document).length) {
                        deregOutclick();
                    } else {
                        var isInDom = trg.closest(document).length;
                        var foundRowAsParent = lookFor(row, trg);
                        if (isInDom && !foundRowAsParent && !trg.closest('.ui-datepicker').length) {
                            save(row);
                            deregOutclick();
                            row.removeClass('o-glar');
                        }
                    }
                }

                var ev = saweinlsave + ' ' + saweinlcancel;

                function deregOutclick() {
                    $doc.off(sclick, outclick);
                    row.off(skeydown, onKeyDown);
                    row.off(ev, deregOutclick);
                }

                function onKeyDown(e) {
                    if (which(e) === keyTab) {
                        var tabls = tabbable(row);
                        if ($(e.target).is(tabls.last()) && !e.shiftKey) {
                            prevDef(e);
                            row.next().find('td:first').click();
                        }
                        else if ($(e.target).is(tabls.first()) && e.shiftKey) {
                            prevDef(e);
                            row.prev().find('td:first').click();
                        }
                    }
                }

                if (row.hasClass('o-glar')) {
                    return;
                }

                row.addClass('o-glar');
                row.data(sstate, 0);

                $doc.on(sclick, outclick);

                row.on(skeydown, onKeyDown);
            }

            function checkAndPreventActionUntilSave(row, action) {
                var state = row.data(sstate);

                var ev = saweinlsave + ' ' + saweinlinv;

                function onSaveFin(e) {
                    row.off(ev, onSaveFin);
                    if (e.type === saweinlsave) {
                        action();
                    } else {
                        scrollTo(row, $grid.find(sawecontentc));
                    }
                }

                if (state === 3) {
                    action();
                } else {
                    if (!state) {
                        if (save(row)) {
                            action();
                            return;
                        }
                    }

                    if (!state || state === 2) {
                        row.on(ev, onSaveFin);
                    } else if (row.data(sstate) === 1) {
                        scrollTo(row, $grid.find(sawecontentc));
                    }
                }
            }

            function onGridBeforeLoad(e, aobj) {
                if ($(e.target).is($grid)) {
                    var ierows = $grid.find(sglrowc).length;

                    if (ierows) {
                        var loadFunc = aobj.load;
                        aobj.load = null;

                        if (ierows === 1) {
                            checkAndPreventActionUntilSave(activeRow, loadFunc);
                        }
                    }
                }
            }

            if (rowClick) {
                $grid.on('awebeforeload', onGridBeforeLoad);
            }

            function focusRowEditBtn(row) {
                row.find('.o-gledtb').focus();
            }
        };
    }

    var regHandlers = { ca: {}, mp: {} }; // column autohide; minipager

    function gridColAutohide(o) {
        function isColumnHidden(column) {
            return !o.sgc && column.Gd || column.Hid;
        }

        // 1 or 0 if not autohide
        function autohidVal(col) {
            var v = readTag(col, "Autohide", false);
            return v;
        }

        var $grid = o.v;

        function autohideColumns(isInit) {
            var changes = 0;
            var avw = $grid.find('.awe-hcon').width() || $grid.find(sawecontentc).width() - awe.scrollw();
            var eo = dto($grid);

            if (avw < 0) return changes;

            if (!eo) {
                removeRegHandle(o, 'ca');
                return changes;
            }

            var ahcols = $.grep(eo.columns, function (col) {
                return autohidVal(col);
            }).sort(function (a, b) { return autohidVal(b) - autohidVal(a); }).reverse();

            // unhide autohidden
            loop(ahcols, function (col) {
                if (col.Hid === 2) {
                    col.Hid = 0;
                    changes++;
                }
            });

            var contentWidth = o.api.conw();
            if (avw < contentWidth) {
                loop(ahcols, function (col) {
                    if (!isColumnHidden(col) && !col.Uhid) {
                        col.Hid = 2;
                        changes--;
                        contentWidth -= col.W || col.Mw;
                        if (contentWidth <= avw) return false;
                    }
                });
            }

            if (changes) {
                if (!isInit && !$grid.find('.awe-nest:visible').length) {
                    dapi($grid).render();
                }

                $grid.trigger(sawecolschange);
            }

            return changes;
        }

        $grid.on(saweinit, function (e) {
            if ($(e.target).is($grid)) {
                autohideColumns(1);
            }
        });

        removeRegHandle(o, 'ca');

        function resizeHandler() {
            autohideColumns();
        }

        $win.on('aweresize resize domlay', resizeHandler);

        regHandlers['ca'][o.i] = {
            h: resizeHandler,
            e: 'aweresize resize domlay'
        };
    }

    function removeRegHandle(o, k) {
        var reghandle = regHandlers[k][o.i];
        if (reghandle) {
            $win.off(reghandle.e, reghandle.h);
        }
    }

    function gridColSel(o) {
        var $grid = o.v;
        var scid = o.i + 'ColSel';

        $grid.find('.awe-footer').append('<div class="awe-ajaxcheckboxlist-field o-gcolsl" ><input id="' + scid + '" class="awe-val awe-array" type="hidden" /><div class="awe-display"></div></div>');

        function getColumnsDataFunc() {
            var result = [];
            loop(o.columns, function (col, i) {
                if (!readTag(col, "Nohide")) {
                    var name = readTag(col, "Caption") || col.H || col.P || "col" + (i + 1);
                    result.push({ k: i, c: name });
                }
            });

            return result;
        }

        var so = '<i class="o-o"></i>';

        awe.checkboxList({ i: scid, nm: scid, df: getColumnsDataFunc, l: 0, md: awem.multiselb, tag: { InLabel: so + so + so, NoSelClose: 1 } });
        var colSel = $('#' + scid);

        function setItems() {
            var selColIndx = []; // value
            loop(o.columns,
                function (col, i) {
                    if (!col.Hid && !readTag(col, "Nohide")) selColIndx.push(i);
                });

            colSel.val(JSON.stringify(selColIndx));
            dapi(colSel).load();
        }

        bind(o, $grid, saweinit + ' ' + sawecolschange + ' ' + saweload + ' awereorder', function (e, d) {
            if ($(e.target).is($grid) && !(d && d.c)) {
                setItems();
            }
        });

        colSel.on(schange, function () {
            var colIndxs = $.parseJSON($(this).val() || "[]");
            loop(o.columns, function (col, i) {
                if ($.inArray(i.toString(), colIndxs) === -1 && !readTag(col, "Nohide")) {
                    if (!col.Hid) {
                        col.Hid = 1; // hide column

                        if (col.Gd) {
                            // remove grouped when hiding column
                            col.Gd = 0;
                            o.lrso = 1;
                        }
                    }
                } else {
                    if (col.Hid) {
                        col.Hid = 0;
                        col.Uhid = 1;
                    }
                }
            });

            var api = dapi($grid);
            api.persist();
            api.render();
            $grid.trigger(sawecolschange, { c: 1 });
        });
    }

    function gridMiniPager(o) {
        return gridAutoMiniPager(o, 1);
    }

    function gridAutoMiniPager(oo, useMiniPager) {
        var $grid = oo.v;
        var $footer = $grid.find('.awe-footer');
        if (!$footer.length) return;
        var api = dapi($grid);
        var original = api.buildPager;

        var miniPager = function (o) {
            var pageCount = o.lrs.pc;
            var page = o.lrs.p || 1;
            if (o.lrs.pgn) {
                var result = se;

                result += renderButton(1, icon('o-arw double left'), 0, page < 2, 'ba');
                result += renderButton(page - 1, icon('o-arw left'), 0, page < 2, 'b');

                result += renderButton(page, page, 1, 0, 'c');

                result += renderButton(page + 1, icon('o-arw right'), 0, pageCount <= page, 'f');
                result += renderButton(pageCount, icon('o-arw double right'), 0, pageCount <= page, 'fa');

                var $pager = $grid.find('.awe-pager');
                $pager.html(result);

                $pager.find('.awe-btn').on(sclick, function () {
                    var p = $(this).data('p');
                    var act = $(this).data('act');
                    if (!o.ldg) {
                        $.when(dapi($grid).load({ start: function () { o.pg = parseInt(p); } }))
                            .done(function () {
                                var fbtn = $pager.find('[data-act=' + act + "]");
                                if (fbtn.is(':disabled')) {
                                    fbtn = $pager.find('.awe-btn:not(:disabled)').first();
                                }

                                if (!$(':focus').length) {
                                    fbtn.focus();
                                }
                            });
                    }
                });

                setTimeout(function () {
                    api.lay();
                }, 10);
            }
        };

        decideSwitch();

        if (!useMiniPager) {
            removeRegHandle(oo, 'mp');

            $win.on('aweload resize domlay', tryminipager);

            regHandlers['mp'][oo.i] = {
                h: tryminipager,
                e: 'resize domlay'
            };
        }

        function tryminipager() {
            if (decideSwitch()) {
                api.buildPager(oo);
            }
        }

        function decideSwitch() {
            var cval = api.buildPager;
            var pc = oo.lrs ? oo.lrs.pc : 0;
            var nval = useMiniPager || $win.width() < 1000 && pc > 5 ? miniPager : original;
            api.buildPager = nval;
            return nval !== cval;
        }

        function icon(icls) {
            return '<span class="' + icls + '" aria-hidden="true"></span>';
        }

        function renderButton(page, caption, selected, disabled, act) {
            var clss = "awe-btn ";
            if (selected) clss += saweselected + ' ';
            if (disabled) clss += "awe-disabled ";
            var dis = disabled ? sdisabled : se;
            return rbtn(clss, caption, 'data-p="' + page + '" data-act="' + act + '" ' + dis);
        }
    }

    function gridkeynav(o) {
        var grid = o.v;
        var api = dapi(grid);

        grid.addClass('keynav');
        grid.attr('tabindex', '0');
        var sctrl = slist(grid.find(sawecontentc), { sel: sawerowc, fcls: sfocus, sc: 'n', topf: topFunc, botf: botFunc, enter: onenter });

        function topFunc() {
            chpage(-1);
        }

        function botFunc() {
            chpage(1);
        }

        function onenter(e, focused) {
            if (focused.length) {
                prevDef(e);
                var shift = e.shiftKey;

                if (!shift && focused.find('.awe-movebtn').length) {

                    var next = pickAvEl([focused.next(), focused.prev()]);

                    focused.removeClass(sfocus);
                    focused.find('.awe-movebtn').click();

                    if (next) {
                        sctrl.focus(next);
                    }

                } else {
                    focused.click();
                }

                if (shift) {
                    if (grid.closest('.awe-lookup-popup').length) {
                        focused.addClass(saweselected);
                    }

                    var lookupPopup = grid.closest('.awe-lookup-popup, .awe-multilookup-popup');
                    if (lookupPopup.length) {
                        dto(lookupPopup).api.ok();
                    }
                }
            }
        }


        var nofocus;
        grid.keydown(function (e) {
            var trg = $(e.target);
            var k = which(e);
            if ((k === keyDown || k === keyUp) && trg.is('.awe-btn:not(.o-ddbtn)')) {
                trg = grid;
                grid.focus();
            }

            if (trg.is(grid)) {
                var keys = [40, 38, 35, 36, 34, 33];

                sctrl.keyh(e);

                if ($.inArray(k, keys) !== -1) {
                    prevDef(e);
                }

                if (k === 34) {
                    // page down
                    chpage(1);
                } else if (k === 33) {
                    // page up
                    chpage(-1);
                } else if (k === 35) {
                    // end
                    sctrl.focus(grid.find(sawerowc).last());
                    sctrl.scrollToFocused();
                } else if (k === 36) {
                    // home
                    sctrl.focus(grid.find(sawerowc).first());
                    sctrl.scrollToFocused();
                } else if (k === 32) {
                    //space
                    onenter(e, grid.find('.' + sfocus));
                }
            }
        })
            .on('mousedown',
                function () {
                    nofocus = 1;
                    setTimeout(function () { nofocus = 0; }, 100);
                })
            .on('focusin',
                function (e) {
                    if (!nofocus && !$(e.target).is(':input')) {
                        sctrl.autofocus();
                    }

                    nofocus = 0;
                })
            .on('focusout',
                function () {
                    sctrl.remf();
                })
            .on(saweload, removeTabIndex);

        function removeTabIndex() {
            grid.find('.awe-footer .awe-btn').each(function () {
                var btn = $(this);
                btn.attr('tabindex', -1);
            });
        }

        function chpage(val) {
            var res = o.lrs;
            if (res.p < res.pc && val > 0 || res.p > 1 && val === -1) {
                $.when(api.load({ oparams: { page: res.p + val } })).done(function () {
                    var tof = null;
                    if (val < 0) tof = grid.find(sawerowc).last();
                    sctrl.autofocus(tof);
                });
            }
        }
    }

    function dragAndDrop(opt) {
        var dropContainers = [];
        var dropFuncs = [];
        var dropHoverFuncs = [];

        loop(opt.to, function (val) {
            dropContainers.push(val.c);
            dropHoverFuncs.push(val.hover);
            dropFuncs.push(val.drop);
        });

        if (opt.dropSel) {
            opt.tof = function () {
                return $(opt.dropSel).map(function (i, el) { return $(el); }).get();
            };
        }

        return awe.rdd(opt.from, opt.sel, dropContainers, dropFuncs, opt.dragClass, opt.hide, dropHoverFuncs, opt.end,
            opt.reshov, opt.scroll, opt.wrap, opt.ch, opt.cancel, opt.kdh, opt.move, opt.hover, opt.drop, opt.handle, opt.gscroll, opt.tof);
    }

    function dragReor(opt) {
        var placeh;
        var plhclss = opt.plh || 'o-plh';
        var sel = opt.sel;
        var handle = opt.handle;
        var lasthov;
        var fromCont = opt.from;
        var previ;
        var ondrop = opt.ondrop;
        var newo = opt.newo;
        var initm;
        var justmoved;
        var hovs;
        var splh;

        var swrap = opt.swrap;
        var shov = opt.shov;

        if (opt.splh) {
            opt.hovec = opt.hovec || empf;
        }

        var gcon = opt.gcon || function (cx) {
            return cx.cont;
        };

        function wrap(cx) {
            var clone = swrap && swrap(cx);

            hovs = [0, 0];
            var dragObj = cx.drgo;
            previ = dragObj.index();
            placeh = dragObj.clone().addClass(plhclss);
            splh = opt.splh;
            cx.plh = placeh;

            initm = 1;
            justmoved = 0;
            placeh.hide();
            dragObj.after(placeh);

            return clone || dragObj.clone();
        }

        function reshov() {
            if (placeh && !splh) {
                placeh.detach();
            }

            lasthov = null;
        }

        // executed when hovering opt.to
        // returns the cont parameter in gscroll
        function hoverFunc(cx) {
            shov && shov(cx);
            placeh = cx.plh;
            var cont = gcon(cx), x = cx.x, y = cx.y;
            if (initm) {
                placeh.show();
                initm = 0;
            }

            if (opt.chkhov && !opt.chkhov(cx)) return cont;

            var hovered = 0;
            var elms = cont.find(sel + ':visible').get();

            // check still hovering last
            if (isNotNull(lasthov)) {
                var ofs = lasthov.offset();
                var lx = ofs.left;
                var ly = ofs.top;

                if (ly + lasthov.outerHeight() > y &&
                    ly < y &&
                    lx + lasthov.outerWidth() > x
                    && lx < x) {
                    return cont;
                }
            }

            var len = elms.length;
            var cof = cont.offset();
            var minDist;
            var isAbove = y < cof.top;
            var outside =
                isAbove || x < cof.left ||
                y > cof.top + cont.outerHeight() || x > cof.left + cont.outerWidth();

            if (outside && !splh) {
                return cont;
            }

            for (var i = 0; i < len; i++) {
                var item = $(elms[i]);
                var iof = item.offset();
                var iow = item.outerWidth();
                var ioh = item.outerHeight();

                var ix = iof.left + iow;
                var iy = iof.top + ioh;

                if (isAbove) {
                    var distance = Math.abs(x - (ix - iow / 2)) + Math.abs(y - (iy - ioh / 2));

                    if (!i || distance < minDist) {
                        minDist = distance;
                        lasthov = item;
                        hovered = item;
                    }
                } else {
                    if (y < iy && x < ix) {
                        lasthov = item;
                        hovered = item;
                        break;
                    }
                }
            }

            if (!hovered && outside) {
                for (var j = len - 1; j >= 0; j--) {
                    var itm = $(elms[j]);
                    var jof = itm.offset();
                    var jx = jof.left;
                    var jy = jof.top;

                    if (x > jx && y > jy) {
                        lasthov = itm;
                        hovered = itm;
                        break;
                    }
                }
            }

            if (justmoved) {
                if (!hovered) {
                    justmoved = 0;
                } else if (justmoved.is(hovered)) {
                    return cont;
                }
            }

            var st = $win.scrollTop();

            if (hovered) {
                justmoved = hovered;

                var pi = placeh.index();
                if (hovered.index() < pi || pi === -1) {
                    hovered.before(placeh);
                } else {
                    hovered.after(placeh);
                }

            } else {
                if (opt.hovec) {
                    opt.hovec(cx);
                } else {
                    cont.append(placeh);
                }
            }

            // chrome page jump
            if (st !== $win.scrollTop()) {
                $win.scrollTop(st);
            }

            return cont;
        }

        function dropFunc(cx) {
            var dragObj = cx.drgo;
            if (opt.dropFunc) return opt.dropFunc(cx);
            var nobj = dragObj;
            if (newo) {
                nobj = newo(cx);
            }

            if (placeh.closest('body').length) {
                placeh.after(nobj).remove();
            } else {
                // placeholder should be present
            }

            nobj.trigger('awedrop', { from: fromCont, previ: previ });
            ondrop && ondrop(cx);
        }

        // get additional containers to scroll on drag
        function gscroll(cont) {
            if (cont) {
                return [{ c: cont, y: 1 }];
            }
        }

        function end(cx) {
            placeh.remove();
            placeh = null;
        }

        return dragAndDrop({
            from: opt.from,
            sel: sel,
            handle: handle,
            dropSel: opt.to,
            tof: opt.tof,
            wrap: wrap,
            hover: hoverFunc,
            drop: dropFunc,
            reshov: reshov,
            cancel: opt.cancel,
            gscroll: opt.gscroll || gscroll,
            end: end,
            hide: 1, // hide dragObj until dropped
            scroll: opt.scroll || [{ c: $(window), y: 1 }]
        });
    }

    function multilookupGrid(o) {
        var popup;
        var gridsrl, gridsel;
        var api = o.api;
        o.p.dh = o.p.h;
        api.gsval = getSelectedValue;

        function getSelectedValue() {
            if (gridsel && dto(gridsel).lrs) {
                return gridsel.find(sawerowc).map(function () { return $(this).data('k'); }).get();
            } else {
                return awe.val(dto(popup).v);
            }
        }

        api.lay = function () {
            if (gridsrl && gridsel) {

                var resth = popup.find('.awe-scon').height() -
                    gridsrl.outerHeight() -
                    gridsel.outerHeight() +
                    popup.outerHeight() -
                    popup.height();

                var avh = o.avh || popup.height();
                var newh = (avh - resth - 1) / 2;

                setGridHeight(gridsrl, newh);
                setGridHeight(gridsel, newh);
            }
        };

        api.rload = function () {
            dapi(gridsrl).load();
            dapi(gridsel).load();
        };

        o.v.on('awepopupinit', function () {
            gridsrl = null;
            gridsel = null;
            popup = o.p.d;

            popup.on(sclick, '.awe-movebtn', function (e) {
                var trg = $(e.target);
                var gridfrom = gridsel, gridto = gridsrl;
                if (trg.closest(gridsrl).length) {
                    gridfrom = gridsrl;
                    gridto = gridsel;
                }

                var trgRow = trg.closest(sawerowc);


                gridto.find('.awe-content .awe-tbody')
                    .prepend(dapi(gridto).renderRow(dapi(gridfrom).model(trgRow)));

                trgRow.remove();
                movedGridRow(gridfrom, gridto);
            });

            popup.on('awefinit', function (e) {
                var it = $(e.target);
                if (it.is(sawegridcls)) {
                    var gdo = dto(it);
                    gdo.pro = dto(popup);

                    var getSelected = function () { return { selected: getSelectedValue() }; };
                    gdo.parf = gdo.parf ? gdo.parf.concat(getSelected) : [getSelected];

                    if (it.is('.awe-srl')) {
                        gridsrl = it;
                    }
                    else if (it.is('.awe-sel')) {
                        gridsel = it;
                        api.lay();
                    }
                }
            });
        });

        o.p.wlim = 5;
    }

    function lookupKeyNav(o) {
        var popup;
        var api = o.api;
        o.v.on('awepopupinit', function () {
            popup = o.p.d;

            handleCont(o.srl.closest('.awe-list'));

            if (o.sel) {
                handleCont(o.sel.closest('.awe-list'));
            }

            function handleCont(cont) {
                cont.attr('tabindex', 0);

                var sctrl = slist(cont, { sel: '.awe-li', enter: onenter });

                function onenter(e, focused) {
                    prevDef(e);
                    var shift = e.shiftKey;
                    if (focused.is('.awe-morecont')) {
                        var prev = focused.prev();
                        focused.parent()
                            .one(saweload, function () {
                                var tofocus = pickAvEl([prev.next(), prev, cont.find('.awe-li').first()]);

                                sctrl.focus(tofocus);
                            });
                        focused.find('.awe-morebtn').click();
                    } else if (focused.find('.awe-movebtn').length && !shift) {
                        var tofocus = pickAvEl([focused.next(), focused.prev()]);

                        focused.removeClass(sfocus);
                        focused.find('.awe-movebtn').click();

                        if (tofocus) {
                            sctrl.focus(tofocus);
                        }
                    }
                    else {
                        focused.click();
                        if (shift) {
                            focused.addClass(saweselected);
                        }
                    }

                    if (shift) {
                        api.ok();
                    }
                }

                function handleKeys(e) {
                    var keys = [40, 38, 35, 36, 34, 33];
                    if (sctrl.keyh(e) || $.inArray(which(e), keys) !== -1) {
                        prevDef(e);
                    }

                    if (which(e) === 32) { // space
                        onenter(e, cont.find('.focus'));
                    }
                }

                cont.keydown(handleKeys);
                cont.on('focusout', function () {
                    cont.find('.focus').removeClass(sfocus);
                }).on(skeyup, function (e) {
                    if (which(e) === 9)//tab
                        sctrl.autofocus();
                });
            }
        });
    }

    function lookupGrid(o) {
        var popup;
        var grid;
        var api = o.api;

        api.gsval = function () {
            return popup.find(saweselectedc).data('k');
        };

        api.lay = function () {

            if (grid) {
                var resth = popup.find('.awe-scon').height() - grid.outerHeight() + popup.outerHeight() - popup.height();

                var newh = (o.avh || popup.outerHeight()) - resth;

                setGridHeight(grid, newh);
            }
        };

        //api.rlay = function () {
        //    if (grid) {
        //        initgridh(grid);
        //    }
        //};

        api.rload = function () {
            dapi(grid).load();
        };

        o.v.on('awepopupinit', function () {
            popup = o.p.d;
            grid = null;

            popup.on('dblclick', sawerowc, function (e) {
                if (!istrg(e, '.awe-nonselect')) {
                    o.api.sval($(this).data('k'));
                }
            });

            popup.on(saweinit, function (e) {
                var g = $(e.target);
                if (g.is(sawegridcls)) {
                    dto(g).pro = dto(popup);
                    grid = g;
                    api.lay();
                }
            });
        });

        //o.p.af = 0;
        o.p.wlim = 5;
    }

    function tbtns(o) {
        var tabs = $('#' + o.i);

        function laybtns() {
            var av = tabs.width();
            var w = av;
            tabs.find('.awe-tabsbar br').remove();
            var btns = tabs.find('.awe-tab-btn');
            var len = btns.length;
            var isFirst = 1;
            for (var i = len - 1; i >= 0; i--) {
                var btn = btns.eq(i);
                w -= btn.outerWidth();

                if (w < 0) {
                    if (isFirst) continue;
                    btn.after('</br>');
                    isFirst = 1;
                    i++;
                    w = av;
                } else {
                    isFirst = 0;
                }
            }
        }

        tabs.on('awerender', function (e) {
            if (!$(e.target).is(tabs)) return;
            laybtns();
        });

        $win.off('resize domlay', laybtns).on('resize domlay', laybtns);
    }

    function dtp(o) {
        var id = o.i;
        var cmid = id + 'cm';
        var cyid = id + 'cy';
        var popupId = id + '-awepw';

        var monthNames = cd().Months;

        var dayNames = cd().Days.slice(0);

        if (awem.fdw) {
            dayNames.push(dayNames.shift());
        }

        var prm = o.p;
        var input = o.v;
        var openb = o.f.find('.awe-dpbtn');
        var selDate = null;
        var inline = prm.ilc;
        var inlCont = o.f.find('.awe-ilc');
        var rtl = o.rtl;
        var nxtcls = '.o-mnxt';
        var prvcls = '.o-mprv';

        if (rtl) {
            var c = nxtcls;
            nxtcls = prvcls;
            prvcls = c;
        }

        var cmdd;
        var cydd;
        var isOpening;
        var currDate;
        var today;

        var numberOfMonths;
        var defaultDate;
        var dateFormat;
        var changeYear;
        var changeMonth;
        var minDate;
        var maxDate;
        var amaxDate;
        var yearRange;

        var popup, cont;
        var wasOpen;
        var kval;

        init();

        input.attr('autocomplete', 'off');

        bind(o, input, skeyup, keyuph);
        bind(o, input, skeydown, inpkeyd);
        bind(o, input, schange, function () {
            var sval = input.val().trim();
            if (sval === se) return;

            var date = tryParse(sval, currDate, minDate, maxDate);

            if (!date) {
                input.val(se).change();
                return;
            }

            var nsdate = tryParse(sval);
            if (!nsdate || datesDif(date, nsdate) || formatDate(dateFormat, date) !== sval) {
                o.api.setDate(date);
            } else {
                setVal(date);
            }
        });

        openb.on(skeydown, function (e) {
            var key = which(e);
            if (key === keyEnter) {
                wasOpen = !isOpen();
            }

            if (keynav(key)) {
                prevDef(e);
            }
        }).on(skeyup, keyuph);

        if (inline) {
            openDtp();
        } else {
            if (!isMobile()) {
                bind(o, input, sclick, openDtp);
            }

            openb.on(sclick, openDtp);
        }

        o.api.getDate = function () {
            return tryParse(input.val());
        };

        o.api.setDate = function (val) {
            input.val(formatDate(dateFormat, val)).change();
        };

        o.api.render = updateCalendar;

        function setVal(newVal) {
            var change = 0;
            if (newVal && (!selDate || datesDif(newVal, selDate))) {
                selDate = newVal;
                setCurrDate(selDate);
                change = 1;
            }

            if (!newVal && selDate) {
                selDate = null;
                change = 1;
            }

            if (change && (cont && inline || isOpen())) {
                updateCalendar();
            }
        }

        function setCurrDate(newDate) {
            if (minDate && newDate < minDate) {
                currDate = cdate(minDate);
            }
            else if (amaxDate && newDate > amaxDate) {
                currDate = cdate(amaxDate);
            } else {
                currDate = cdate(newDate);
            }
        }

        function moveHov(dir) {
            var pivot = getHov();
            var sel = '.o-enb';
            if (cont.find(nxtcls).is(':enabled')) {
                sel = '.o-mnth:first ' + sel;
            }

            var list = cont.find(sel);

            var indx = list.index(pivot) + dir;
            var n = list.eq(indx);

            if (!n.length || indx < 0) {
                n = 0;
                var cls = dir > 0 ? nxtcls : prvcls;
                var fl = dir > 0 ? 'first' : 'last';
                var nbtn = cont.find(cls);

                if (nbtn.is(':enabled')) {
                    cont.find(cls).click();
                    n = cont.find('.o-mnth:first .o-enb:' + fl);
                }
            }

            if (n && n.length) {
                cont.find('.o-hov').removeClass('o-hov');
                n.addClass('o-hov');
            }
        }

        function keynav(key) {
            var res = 0;
            if (isOpen()) {
                if (key === keyDown) {
                    moveHov(1);
                    res = 1;
                }
                else if (key === keyUp) {
                    moveHov(-1);
                    res = 1;
                }
            }

            if (res) cont.addClass('o-nhov');
            return res;
        }

        function inpkeyd(e) {
            var key = which(e);

            if (keynav(key)) {
                prevDef(e);
            }

            if (!isOpen()) {
                if (key === keyDown || key === keyUp) {
                    openDtp(e);
                }
            }

            // / / . . - -
            awe.pnn(e, [191, 111, 190, 110, 189, 109]);

            kval = input.val();
        }

        function keyuph(e) {
            var k = which(e);

            if (isOpen()) {
                if (k === keyEnter) {
                    if (!wasOpen) {
                        getHov().click();
                    }
                } else if (!inline && k === keyEsc) {
                    dapi(popup).close();
                    e.stopPropagation();
                }
                else if (input.val() !== kval) {
                    var date = tryParse(input.val(), currDate, minDate, maxDate);
                    setVal(date);
                }
            }

            wasOpen = 0;
        }

        function isOpen() {
            return cont && cont.closest('body').length;
        }

        function getHov() {
            var h = cont.find('.o-hov');
            if (!h.length) h = cont.find('.o-enb:hover');
            if (!h.length) h = cont.find('.o-enb.o-selday');
            if (!h.length) h = cont.find('.o-enb.o-tday');
            if (!h.length) h = cont.find('.o-enb:first');

            return h;
        }

        function tryParse(sval, baseDate, mind, maxd) {
            var val = 0;
            try {
                if (!sval) return 0;
                val = parseDate(dateFormat, sval, baseDate, mind, maxd);
                if (isNaN(val)) val = 0;
            }
            catch (err) {
                /*val will be 0 on failure*/
            }

            return val;
        }

        function init() {
            today = cdate();
            remTime(today);

            numberOfMonths = prm.numberOfMonths || 1;
            defaultDate = prm.defaultDate;
            dateFormat = prm.dateFormat || awem.dateFormat;
            changeYear = prm.changeYear;
            changeMonth = prm.changeMonth;
            minDate = prm.minDate;
            maxDate = prm.maxDate;
            yearRange = prm.yearRange;

            if (prm.min) {
                minDate = tryParse(prm.min);
            }

            if (prm.max) {
                maxDate = tryParse(prm.max);
            }

            if (maxDate) {
                amaxDate = cdate(maxDate);
                amaxDate.setMonth(amaxDate.getMonth() - numberOfMonths + 1);
            }

            initCurrDate();
        }

        function initCurrDate() {
            selDate = tryParse(input.val());

            setCurrDate(selDate || currDate || defaultDate || today);

            remTime(currDate);
        }

        function openDtp(e) {
            if (isOpen() || isOpening) return;
            isOpening = 1;

            init();

            if ($('#' + popupId).length) {
                dapi($('#' + popupId)).destroy();
            }

            cont = $(rdiv('o-dtp')).hide();
            cont.appendTo($('body'));

            if (inline) {
                cont.addClass('o-inl');
            }

            if (inline) {
                inlCont.html(cont);
            } else {
                popup = $('<div id="' + popupId + '"/>');
                popup.append(cont);

                var ctf = input;
                if (input.is('[readonly]')) {
                    ctf = openb;
                }

                if (e && istrg(e, openb)) {
                    ctf = openb;
                }

                awem.dropdownPopup({
                    opener: o.f,
                    fcs: ctf,
                    rtl: rtl,
                    p: { d: popup, i: popupId, minw: 'auto', pc: 'o-dtpp', nf: 1 },
                    tag: { Dd: 1, MinWidth: '150px' }
                });

                dapi(popup).open({ e: e });
            }

            cont.html(render(currDate));

            changeMonth && awe.radioList({ i: cmid, nm: cmid, df: monthItems, md: awem.odropdown, tag: { Asmi: -1 } });

            changeYear && awe.radioList({ i: cyid, nm: cyid, df: yearItems, md: awem.odropdown, tag: { Asmi: -1 } });

            cmdd = $('#' + cmid);
            cydd = $('#' + cyid);

            updateCalendar(1);

            cont.on(smousemove, function () {
                cont.removeClass('o-nhov');
                cont.find('.o-hov').removeClass('o-hov');
            });

            cont.on(sclick,
                '.o-mday:not(.o-dsb)',
                function () {
                    var td = $(this);
                    cont.find('.o-selday').removeClass('o-selday');
                    td.addClass('o-selday');
                    selDate = new Date(td.data('y'), td.data('m'), td.data('d'));
                    input.val(formatDate(dateFormat, selDate));
                    awe.ach(o);
                    popup && dapi(popup).close();
                });

            cont.on(sclick,
                nxtcls,
                function () {
                    var ndate = cdate(currDate);
                    incMonth(ndate, 1);
                    setCurrDate(ndate);
                    updateCalendar();
                });

            cont.on(sclick,
                prvcls,
                function () {
                    var ndate = cdate(currDate);
                    incMonth(ndate, -1);
                    setCurrDate(ndate);
                    updateCalendar();
                });

            cont.show();

            popup && dapi(popup).lay();

            cmdd.change(function () {
                var ndate = cdate(currDate);
                ndate.setDate(1);
                ndate.setMonth(cmdd.val());
                setCurrDate(ndate);
                updateCalendar();
            });

            cydd.change(function () {
                var ndate = cdate(currDate);
                ndate.setDate(1);
                ndate.setFullYear(cydd.val());
                setCurrDate(ndate);
                updateCalendar();
            });

            isOpening = 0;
        }

        function updateCalendar(oinit) {
            var monthcs = cont.find('.o-mnth');
            var mlen = monthcs.length;
            monthcs.each(function (i, el) {
                var day = cdate(currDate);
                incMonth(day, i);
                var mc = $(el);
                mc.find('.o-tb').html(renderDaysTable(day, mlen));

                if (i || !changeYear) mc.find('.o-yhd').html(pad(year(day)));
                if (i || !changeMonth) mc.find('.o-mhd').html(pad(monthName(day)));

                if (mlen === i + 1) {
                    var ldm = lastDayOfMonth(day);
                    setDisabled(cont.find(nxtcls), maxDate && ldm >= maxDate);
                }
            });

            var fdm = firstDayOfMonth(currDate);
            setDisabled(cont.find(prvcls), minDate && fdm <= minDate);

            changeMonth && dapi(cmdd.val(currDate.getMonth())).load();
            changeYear && dapi(cydd.val(year(currDate))).load();

            if (!oinit) {
                popup && dapi(popup).lay();
            }
        }

        function yearItems() {
            var y = year(currDate);

            var res = [];
            var startYear = y - 15;
            var endYear = y + 15;

            if (yearRange) {
                var yra = yearRange.split(":");
                startYear = calcYear(yra[0], y, year(today));
                endYear = calcYear(yra[1], y, year(today));
            }

            if (minDate) {
                startYear = Math.max(startYear, year(minDate));
            }

            if (amaxDate) {
                endYear = Math.min(endYear, year(amaxDate));
            }

            for (var i = startYear; i <= endYear; i++) {
                res.push({ c: i, k: i });
            }

            return res;
        }

        function monthItems() {
            var allowed = null;
            if (minDate || amaxDate) {
                var min = null, max = null;

                if (amaxDate) {
                    max = cdate(amaxDate);
                    max.setDate(1);
                }

                if (minDate) {
                    min = cdate(minDate);
                    min.setDate(1);
                }

                var start = cdate(currDate);

                start.setDate(1);
                start.setMonth(0);
                allowed = {};

                for (var j = 0; j < 12; j++) {
                    if ((!min || start >= min) && (!max || start <= max)) {
                        allowed[j] = 1;
                    }

                    incMonth(start, 1);
                }
            }

            var res = [];
            for (var i = 0; i < monthNames.length; i++) {
                if (!allowed || allowed[i])
                    res.push({ c: monthNames[i], k: i });
            }

            return res;
        }

        function render(currDate) {
            var res = se;
            for (var i = 0; i < numberOfMonths; i++) {
                var day = cdate(currDate);
                incMonth(day, i);

                res += rdiv('o-mnth', renderMonth(day, i === 0, i === numberOfMonths - 1), 'data-i="' + i + '"');
            }

            return res;
        }

        function renderDaysTable(pivotDay, mlen) {
            var fdm = firstDayOfMonth(pivotDay);
            var ldm = lastDayOfMonth(pivotDay);

            var pmd0 = startOfWeek(fdm);
            var nm1 = endOfWeek(ldm);

            var day = pmd0;

            var table = se;

            function renderDay(d) {
                var date = d.getDate();
                var m = d.getMonth();
                var y = year(d);
                var cls = 'o-day';
                var enb = 0;
                var out = 0;
                if (d < fdm || d > ldm) {
                    cls += ' o-outm';
                    out = 1;
                } else {
                    cls += ' o-mday';
                    enb = 1;
                }

                if (d <= today && d >= today && !out && mlen) {
                    cls += ' o-tday';
                }

                var opt = { cls: cls, d: d };

                if (prm.dayf) {
                    prm.dayf(opt);
                    cls = opt.cls;
                }

                if (minDate && d < minDate || maxDate && d > maxDate || opt.dsb) {
                    cls += ' o-dsb';
                } else if (enb) {

                    cls += ' o-enb';

                    if (selDate && d <= selDate && d >= selDate) {
                        cls += ' o-selday';
                    }
                }

                return '<td class="' +
                    cls +
                    '" data-d="' +
                    date +
                    '" data-m="' +
                    m +
                    '" data-y="' +
                    y +
                    '" ><div>' +
                    date +
                    '</div></td>';
            }

            table += '<tr class="o-wdays">';
            for (var di = 0; di < dayNames.length; di++) {
                table += '<td>' + dayNames[di] + '</td>';
            }
            table += '</tr>';

            var i = 1;
            var rowstarted = 0;
            var rowCount = 0;
            while (day <= nm1 || rowCount < 6) {
                if (!rowstarted) {
                    table += '<tr>';
                    rowstarted = 1;
                }

                table += renderDay(day);

                if (i === 7) {
                    table += '</tr>';
                    rowstarted = 0;
                    i = 0;
                    rowCount++;
                }

                nextDay(day);
                i++;
            }

            return table;
        }

        function renderMonth(pivotDay, first, last) {
            var mbtn = function (cls, icls) {
                return rbtn('awe-btn o-cmbtn ' + cls, '<i class="o-arw ' + icls + '"></i>');
            };

            var topbar = '<div class="o-mtop">';

            if (first) {
                topbar += mbtn(rtl ? 'o-mnxt' : 'o-mprv', 'left');
            }

            var mval = pivotDay.getMonth();
            var yval = year(pivotDay);

            topbar += '<div class="o-ym"><div class="o-mhd">' +
                (first && changeMonth ? radioList(cmid, mval, 'o-cm') : pad(monthName(pivotDay))) +
                '</div>' +
                '<div class="o-yhd">' +
                (first && changeYear ? radioList(cyid, yval, 'o-cy') : pad(yval)) +
                '</div></div>';

            if (last) {
                topbar += mbtn(rtl ? 'o-mprv' : 'o-mnxt', 'right');
            }

            topbar += '</div>';

            return topbar + '<table class="o-tb"></table>';
        }

        function monthName(pivotDay) {
            var mval = pivotDay.getMonth();
            return monthNames[mval];
        }

        function pad(s) {
            return "<span class='o-txt'>" + s + "</span>";
        }

        function calcYear(fstr, cy, ty) {
            function f(res, i, fstr, cy, ty) {
                if (fstr[i] === 'c')
                    return f(cy, i + 1, fstr, cy, ty);
                if (fstr[i] === '-' || fstr[i] === '+')
                    if (res)
                        res = res + parseInt(fstr.substr(i));
                    else
                        res = ty + parseInt(fstr.substr(i));
                else return parseInt(fstr);

                return res;
            }

            return f(0, 0, fstr, cy, ty);
        }

        // utils methods

        function radioList(id, val, cls) {
            return rdiv('awe-ajaxradiolist-field ' + cls, '<input id="' + id +
                '" class="awe-val" type="hidden" value="' + val +
                '" />' + rdiv('awe-display'));
        }

        function startOfWeek(date) {
            var dat = cdate(date);

            var day = dat.getDay();
            var diff = dat.getDate() - day;

            if (awem.fdw) {
                diff += day === 0 ? -6 : 1;
            }

            dat.setDate(diff);
            return dat;
        }

        function endOfWeek(d) {
            var dat = cdate(startOfWeek(d));
            dat.setDate(dat.getDate() + 6);
            return dat;
        }

        function firstDayOfMonth(d) {
            var dat = cdate(d);
            dat.setDate(1);
            return dat;
        }

        function remTime(d) {
            d.setHours(0, 0, 0, 0);
        }

        function nextDay(d) {
            d.setDate(d.getDate() + 1);
        }

        function incMonth(d, m) {
            d.setDate(1);
            d.setMonth(d.getMonth() + m);
            return d;
        }
    }

    function rendOchk(o, radio, checked, type, name, value) {
        var attr = disbAttr(o);
        if (checked) attr += ' checked="checked"';
        if (name) attr += ' value="' + encode(value) + '" name="' + name + '"';
        return '<div tabindex="0" class="o-chk ' + (checked ? schked : se) + '" >' +
            (radio ? se : '<div class="o-chkc"><div class="o-chkico"></div></div>') +
            '</div><input type="' + type + '" ' + attr + ' style="display:none"/>';
    }

    function otggl(o) {
        return ochk(o, '.o-tg');
    }

    function ochk(o, cls) {
        var v = o.v;
        var chk = o.f.find(cls || '.o-chk');

        function toggle() {
            if (o.enb) {
                o.f.find(':checkbox').click();
            }
        }

        chk.on(sclick, function () {
            chk.blur();
            toggle();
        });

        chk.on(skeydown + ' ' + skeyup, function (e) {
            if (which(e) === keyEnter || which(e) === keySpace) {
                prevDef(e);
                if (e.type === skeyup)
                    toggle();
            }
        });

        var first = 1;
        var baseload = o.load;
        o.load = function () {
            baseload();
            var sel = chk.add(chk.closest('.o-chkm'));

            if (v.val() === 'true') {
                var tgg = sel.find('.o-tgg');
                first && tgg.css('transition', 'initial');
                sel.addClass(schked);
                first && setTimeout(function () { tgg.css('transition', ''); }, 300);
            }
            else sel.removeClass(schked);
            first = 0;
        };

        v.on(schange, o.load);

        chk.closest('label').on(sclick, function (e) {
            if ($(e.target).closest(chk).length) {
                prevDef(e);
            }
        });
    }

    function ochkl(o) {
        var radio = o.type === 'radioList' ? 1 : 0;
        var type = radio ? 'radio' : 'checkbox';
        var api = o.api;
        api.render = render;
        var disp = o.d;

        radio && disp.addClass('o-rdl') || disp.addClass('o-ochk');

        disp.on(schange, 'input:' + type, function () {
            var el = $(this);
            var ischk = el.is(':checked');
            var chk = el.prev().add(el.closest('.o-chkm'));

            radio && disp.find('.' + schked).removeClass(schked);

            if (ischk) {
                chk.addClass(schked);
            } else {
                !radio && chk.removeClass(schked);
            }

        }).on(skeydown + ' ' + skeyup, '.o-chk', function (e) {
            if (which(e) === keyEnter || which(e) === keySpace) {
                prevDef(e);
                if (e.type === skeyup) {
                    $(this).next().click();
                }
            }
        }).on(sclick, '.o-chk', function () {
            $(this).blur();
        });

        function render() {
            o.d.empty();
            var items = '<ul>';
            var vals = awe.val(o.v);
            for (var i = 0; i < o.lrs.length; i++) {
                var item = o.lrs[i];
                var checked = containsVal(kp(item), vals);
                var schkc = se;
                if (checked) {
                    schkc = schked;
                }

                items += '<li class="o-chkm ' + schkc + '"><label class="awe-label">' +
                    rendOchk(o, radio, checked, type, o.nm, kp(item)) +
                    '<span class="o-con">' + econ(item, o) + '</span></label></li>';
            }

            items += '</ul>';
            o.d.append(items);
        }
    }

    function initWave() {
        if ($doc.data('awewave')) return;
        $doc.data('awewave', 1);
        $(function () {
            $doc.on('mousedown touchstart', '.awe-btn, .awe-tab-btn, .o-wavs, .awe-sortable.awe-hc, .awe-sortable.awe-col, .o-chk', function (e) {
                var time = 700;
                var btn = $(this);
                if (btn.is(':disabled') || btn.closest('.awe-disabled').length || btn.closest('.nowave').length) return;

                var wc = $('<div class="o-wavc" tabindex="-1"/>');
                var wav = $('<div class="o-wav" tabindex="-1"/>');
                wc.append(wav);

                if (isMobile()) {
                    wc.addClass('o-mobl');
                }

                var csize;
                var istouch = e.type !== 'mousedown';
                var isCol = 0;

                if (istouch) {
                    btn.data('awewvtch', 1);
                    setTimeout(function () { btn.data('awewvtch', 0); }, 330);
                }

                if (btn.data('awewvtch') && !istouch) return;

                var startCoords = istouch ? e.originalEvent.touches[0] : e;

                var x = startCoords.pageX - btn.offset().left;
                var y = startCoords.pageY - btn.offset().top;
                var w = btn.outerWidth();
                var h = btn.outerHeight();

                if (btn.is('.o-chk')) {
                    time = 350;
                    csize = w = h = 57;
                    x = y = csize / 2;
                    var marg = csize / 2 - btn.outerWidth() / 2;
                    wc.css('top', -marg);
                    wc.css('left', -marg);
                }

                // ff col click
                if (btn.is('.awe-sortable .awe-col')) {
                    btn = btn.parent();
                    isCol = 1;
                }

                mouseup();

                if (btn.closest('.awe-groupable').length) {
                    var uprls;
                    var moved;
                    $(document)
                        .one('mouseup touchend',
                            function () {
                                uprls = 1;
                            })
                        .one('mousemove touchmove', function () {
                            moved = 1;
                        });

                    setTimeout(function () {
                        if (!uprls && moved) {
                            wc.remove();
                        }
                    },
                        200);
                }

                function mouseup() {
                    wc.width(w).height(isCol ? '100%' : h);
                    var size = Math.max(w, h);

                    wav.css('left', x);
                    wav.css('top', y);
                    wav.width(20).height(20);

                    btn.append(wc);
                    size = csize || Math.max(size * 2, 100);
                    wav.width(size).height(size);

                    wav.css('opacity', 0);
                    setTimeout(function () {
                        wc.remove();
                    }, time);
                }
            });
        });
    }

    function gridCstRen(opt) {
        return function (o) {
            eval(opt.mdf)(o);
        };
    }

    return {
        initWave: initWave,
        otggl: otggl,
        empf: empf,
        ochkl: ochkl,
        ochk: ochk,
        autocomplete: autocomplete,
        dropmenu: dropmenu,
        formatDate: formatDate,
        parseDate: parseDate,
        setgh: setGridHeight,
        dtp: dtp,
        fdw: 0,
        tbtns: tbtns,
        lookupKeyNav: lookupKeyNav,
        multilookupGrid: multilookupGrid,
        lookupGrid: lookupGrid,
        gridCstRen: gridCstRen,
        gridMovRows: gridMovRows,
        dragAndDrop: dragAndDrop,
        dragReor: dragReor,
        clientDict: clientDict,
        gridInlineEdit: gridInlineEdit,
        gridLoading: gridLoading,
        gldng: gldng,
        gridInfScroll: gridInfScroll,
        gridPageSize: gridPageSize,
        gridPageInfo: gridPageInfo,
        gridColSel: gridColSel,
        gridColAutohide: gridColAutohide,
        btnGroup: buttonGroupRadio,
        btnGroupChk: buttonGroupCheckbox,
        multiselect: multiselect,
        colorDropdown: colorDropdown,
        imgDropdown: imgDropdown,
        imgItem: imgItem,
        combobox: combobox,
        timepicker: timepicker,
        menuDropdown: menuDropdown,
        odropdown: odropdown,
        dropdownPopup: dropdownPopup,
        inlinePopup: inlinePopup,
        isMobileOrTablet: isMobileOrTablet,
        multiselb: multiselb,
        gridAutoMiniPager: gridAutoMiniPager,
        gridMiniPager: gridMiniPager,
        gridKeyNav: gridkeynav,
        notif: notif,
        escape: escape,
        slist: slist,
        dateFormat: se,
        version: '6.3.19'
    };
}(jQuery);

//export {awem};

/* eslint-disable */
//import * as jQuery from 'jquery';
//import { awef } from './awef';
//import { awe } from './awe';
//import { awem } from './awem';

var utils = function ($) {
    var loop = awef.loop, isNull = awef.isNull, isNotNull = awef.isNotNull;

    function toLowerFirst(s) {
        return s.substr(0, 1).toLowerCase() + s.substr(1);
    }

    function getColVal(str, o) {
        var v = getColsVal(str, o);
        return v ? v.join(' ') : '';
    }

    function getColsVal(name, o) {
        var names = name.split(',');
        return $.map(names, function (c) { return getNestVal(c.split('.'), o); });
    }

    function getNestVal(trail, o) {
        var val = o[trail.shift()];

        if (!trail.length) {
            if (val instanceof Date) {
                val = awem.formatDate('dd/mm/yy', val);
            }

            return val;
        }

        if (!val) return 0;
        return getNestVal(trail, val);
    }

    function id(o) {
        return o.Id || o.id;
    }

    function content(o) {
        return o.Content || o.content;
    }

    function flashz(d, back) {
        d.addClass('awe-ts');
        if (back)
            d.removeClass('awe-hl');
        else
            d.addClass('awe-hl');

        setTimeout(function () {
            d.removeClass('awe-ts');
        }, 500);
    }

    function setLrsObsl(g) {
        g.data('o').lrso = 1;
    }

    function dapi(g) {
        return g.data('api');
    }

    var flash = awe.flash;

    var Sort = {
        None: 0,
        Asc: 1,
        Desc: 2
    };

    var NodeType =
    {
        Node: 1,
        Items: 2,
        Lazy: 3
    };

    function getPage(items, p, ps) {
        var skip = (p - 1) * ps;
        return items.slice(skip, skip + ps);
    }

    function closeNest(nest) {
        dapi(nest.closest('.awe-grid')).nestClose(nest, 1);
    }

    function itemCreated(gridId) {
        return function (item) {
            var g = $("#" + gridId);
            var row = $(dapi(g).renderRow(item));

            g.trigger('awerowch', 1);
            g.find(".awe-itc").prepend(row);
            flash(row);

            var data = g.data('o').lrs.dt;
            if (data.it) {
                data.it.unshift(item);
            } else {
                setLrsObsl(g);
            }
        };
    }

    function itemEdited(gridId, nof, noTrigEdit) {
        return function (item) {
            var $grid = $('#' + gridId);
            var gapi = dapi($grid);
            var xhr = gapi.update(id(item));

            var row = gapi.select(id(item))[0];
            row.nextUntil(':not(.awe-nest)').each(function () {
                closeNest($(this));
            });

            $.when(xhr).done(function () {
                var newRow = gapi.select(id(item))[0];
                flash(newRow);

                setLrsObsl($grid);
                if (!nof) {
                    newRow.find('.editbtn').focus();
                }

                if (!noTrigEdit) {
                    newRow.trigger('itemedit');
                }
            });
        };
    }

    function handlePopVld(data, popup) {
        var errs = data._errs;
        if (errs && Object.keys(errs).length) {
            for (var name in errs) {
                var vmsg = '';
                loop(errs[name], function (msg) {
                    vmsg += '<div class="field-validation-error">' + msg + '</div>';
                });

                popup.find('[vld-for="' + name + '"]').html(vmsg);
            }

            return true;
        }
    }

    return {
        imgCaption: function (o) {
            return '<img class="cthumb" src="' + o.url + '" />' + o.c;
        },
        getColVal: getColVal,
        // grid crud
        delConfirmLoad: function (gridId) {
            return function () {

                if (!gridId) return;
                var $popup = this.p.d;

                var key = $popup.find('[name="id"]').val();
                var rows = dapi($('#' + gridId)).select(key);

                $.map(rows, function (row) {
                    flashz(row);
                });

                $popup.on('aweclose', function () {
                    $.map(rows, function (row) {
                        flashz(row, 1);
                    });
                });
            };
        },

        itemDeleted: function (gridId) {
            return function (res) {
                var $grid = $("#" + gridId);
                var row = dapi($grid).select(id(res))[0];
                row.find('button').attr('disabled', 'disabled');
                row.trigger('itemdelete');
                utils.delRow(row);
            };
        },

        delRow: function (row) {
            var g = row.closest('.awe-grid');
            row.nextUntil(':not(.awe-nest)').each(function () {
                closeNest($(this));
            });

            var next = row.next();
            if (!next.length || next.hasClass('awe-ghead')) {
                row.prevUntil('.awe-row').fadeOut(500);
            }

            row.fadeOut(500, function () {
                $(this).remove();
                if (!row.is('tr') || !g.find('.awe-row').length) { //|| g.data('o').gl 
                    dapi(g).load();
                    return;
                }

                g.trigger('awerowch', -1);
                setLrsObsl(g);
            });
        },
        initPopupInstVld: function (o, vldf) {
            var form = o.scon.find('form');
            utils.initInstVld(form, vldf);
        },
        initInstVld: function (cont, vldf) {
            cont.on('change', function (e) {
                var trg = $(e.target);
                var name = trg.attr('name');

                if (awef.isNull(name)) return;
                var sd = cont.find(':input').serializeArray();

                var ms = vldf(sd);
                var errors = ms.errors;
                cont.find('[vld-for]').each(function () {
                    var el = $(this);
                    var fname = el.attr('vld-for');
                    if (awef.isNotNull(errors[fname])) {
                        if (name === fname) {
                            var vmsg = '';
                            awef.loop(errors[fname],
                                function (msg) {
                                    vmsg += '<div class="field-validation-error">' + msg + '</div>';
                                });
                            el.html(vmsg);
                        }
                    } else {
                        el.html('');
                    }
                });
            });
        },

        itemEditedUi: function (gridId, nof, noTrigEdit) {
            return function (data, popup) {
                if (!handlePopVld(data, popup)) {
                    itemEdited(gridId, nof, noTrigEdit)(data);
                    popup.data('api').close();
                }
            }
        },

        itemCreatedUi: function (gridId) {
            return function (data, popup) {
                if (!handlePopVld(data, popup)) {
                    itemCreated(gridId)(data);
                    popup.data('api').close();
                }
            }
        },

        itemEdited: itemEdited,

        itemCreated: itemCreated,

        // grid nest
        loadNestPopup: function (popupName) {
            return function (row, nestrow, cell) {
                var params = {};
                params['id'] = id(utils.model($(row)));
                awe.open(popupName, { params: params, tag: { cont: cell } });
                cell.one('aweclose', function (e) {
                    if ($(e.target).is(cell.find('.awe-popup:first'))) {
                        closeNest(nestrow);
                    }
                });
            };
        },

        nestCreate: function (gridId, popup) {
            var $grid = $('#' + gridId).addClass('o-nstcreate');
            var place = $grid.find('.awe-content:first');
            awe.open(popup, { tag: { cont: place } });
            $grid.one('aweclose', function () {
                $grid.removeClass('o-nstcreate');
            });
        },

        // ajaxlist crud
        itemCreatedAlTbl: function (listId) {
            return function (o) {
                var row = $(content(o));
                $('#' + listId).parent().find('tbody').prepend(row);
                flash(row);
            };
        },

        itemEditedAl: function (listId, func) {
            return function (o) {
                var $item = $('#' + listId).find('[data-val="' + id(o) + '"]');
                var $newItem = $(content(o));
                $item.after($newItem).remove();

                flash($newItem, func);
            };
        },

        itemDeletedAl: function (listId) {
            return function (o) {
                $('#' + listId).find('[data-val="' + id(o) + '"]').fadeOut(500, function () { $(this).remove(); });
            };
        },

        itemCreatedAl: function (listId) {
            return function (o) {
                var it = $($.trim(content(o)));
                $('#' + listId).prepend(it);
                flash(it);
            };
        },

        scheduler: function (id, popupName) {
            var $grid = $('#' + id);
            var $sched = $grid.closest('.scheduler');
            var api = dapi($grid);
            var $viewType = $sched.find('.viewType .awe-val');

            $sched.find('.prevbtn').click(function () {
                api.load({ oparams: { cmd: 'prev' } });
            });

            $sched.find('.nextbtn').click(function () {
                api.load({ oparams: { cmd: 'next' } });
            });

            $sched.find('.todaybtn').click(function () {
                api.load({ oparams: { cmd: 'today' } });
            });

            $grid
                .on('aweload', function (e, data) {
                    var tag = data.tg;

                    if (tag.View === 'Agenda' || tag.View === 'Month') {
                        $('.schedBotBar').hide();
                    }
                    else
                        $('.schedBotBar').show();

                    if ($viewType.val() !== tag.View) {
                        dapi($viewType.val(tag.View)).render();
                    }

                    $sched.find('.schDate .awe-val').val(tag.Date);
                    $sched.find('.dateLabel').html(tag.DateLabel);
                })
                .on('click', '.eventTitle', function () {
                    awe.open('edit' + popupName, { params: { id: $(this).parent().data('id') } });
                })
                .on('click', '.delEvent', function () {
                    awe.open('delete' + popupName, { params: { id: $(this).closest('.schEvent').data('id') } });
                })
                .on('dblclick', 'td', function (e) {
                    var schdev = $(e.target).closest('.schEvent');
                    if (!schdev.length) {
                        var tp = $(this).find('.timePart');
                        awe.open('create' + popupName,
                            { params: { ticks: tp.data('ticks'), allDay: tp.data('allday') } });
                    } else {
                        if (!$(e.target).is('.delEvent'))
                            awe.open('edit' + popupName, { params: { id: schdev.data('id') } });
                    }
                })
                .on('click', '.day', function (e) {
                    if ($(e.target).is('.day')) {
                        api.load({ oparams: { viewType: 'Day', date: $(this).data('date') } });
                    }
                });
        },

        // misc
        refreshGrid: function (gridId) {
            return function () {
                dapi($("#" + gridId)).load();
            };
        },

        getMinutesOffset: function () {
            return { minutesOffset: new Date().getTimezoneOffset() };
        },

        // used for .DataFunc, items is KeyContent[]
        getItems: function (items) {
            return function () {
                return items;
            };
        },

        getEmpty: function () {
            return [];
        },

        escapeChars: function (str) {
            var entityMap = {
                "&": "&amp;",
                '"': '&quot;',
                "'": "&#39;"
            };
            return String(str).replace(/[&"'\/]/g, function (s) {
                return entityMap[s];
            });
        },
        
        serializeObj: function (sp, opt) {
            return utils.getParams(sp, opt);
        },

        getParams: function (sp, opt) {
            var res = {};
            opt = opt || {};
            var arrays = opt.arrays || [];
            var singles = opt.singles || [];
            var camelc = opt.camelc;

            loop(sp, function (it) {
                var val = it.value;
                var name = it.name || '';
                if (camelc) name = toLowerFirst(name);
                if (isNull(val)) val = '';

                if (isNotNull(res[name])) {
                    if ($.inArray(name, singles) < 0) {
                        if (!res[name].push) {
                            res[name] = [res[name]];
                        }

                        res[name].push(val);
                    }
                } else {
                    res[name] = $.inArray(name, arrays) >= 0 ? [val] : val;
                }
            });

            return res;
        },

        getGridParams: function (sp) {
            return utils.getParams(sp,
                {
                    arrays: ["sortNames", "sortDirections", "groups", "headers"],
                    singles: ["page", "pageSize", "paging"],
                    camelc: true
                });
        },

        gparams: function (sp) {
            return utils.getParams(sp,
                {
                    camelc: true
                });
        },

        init: function (dateFormat, isMobileOrTablet, decimalSep) {

            if (isMobileOrTablet) {
                awe.ff = function (o) {
                    // don't focus first element on mobile
                };
            }

            // checkbox
            awe.chkmd = awem.ochk;

            // set tabs mod
            awe.tmd = [awem.tbtns];

            // set lookup mod
            awe.lmd = awem.lookupKeyNav;

            // set datepicker
            awe.dpw = awem.dtp;

            awe.acw = awem.autocomplete;

            // grid global mods
            awe.ggmd = function (o) {
                var md = o.md = o.md || [];
                var amp = awem.gridAutoMiniPager;

                // grid loading anim, without no records msg
                var gld = awem.gldng(0, 1);

                if (md.indexOf(amp) === -1 && md.indexOf(awem.gridMiniPager) === -1) {
                    md.push(amp);
                }

                if (md.indexOf(gld) === -1) {
                    md.unshift(gld);
                }
            };

            !isMobileOrTablet && awem.initWave();

            // add antiforgery token before request
            var aftoken;
            awe.bfr = function (opt) {
                if (opt.type !== 'post') return;
                var key = '__RequestVerificationToken';
                var data = opt.data || [];
                if (!aftoken) aftoken = $('[name="' + key + '"]').val();
                if (aftoken) {
                    if (data.push) {
                        var found = 0;
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].name === key) found = 1;
                        }

                        if (!found) {
                            data.push({ name: key, value: aftoken });
                        }
                    } else if (data.append && data.has) {
                        if (!data.has(key)) {
                            data.append(key, aftoken);
                        }
                    }
                    else {
                        data[key] = aftoken;
                    }
                }

                opt.data = data;
            };

            if (dateFormat) {
                awem.dateFormat = dateFormat;
            }

            // by default jquery.validate doesn't validate hidden inputs
            if ($.validator) {
                $.validator.setDefaults({
                    ignore: [],
                    highlight: function (element, error) {
                        var $el = $(element);
                        if ($el.hasClass('awe-val')) {
                            var $fl = $el.closest(".awe-field");
                            if ($fl.length) {
                                $fl.addClass(error);
                            } else {
                                $el.addClass(error);
                            }
                        }
                    },
                    unhighlight: function (element, error) {
                        var $el = $(element);
                        if ($el.hasClass('awe-val')) {
                            var $fl = $el.closest(".awe-field");
                            if ($fl.length) {
                                $fl.removeClass(error);
                            } else {
                                $el.removeClass(error);
                            }
                        }
                    }
                });

                if (dateFormat) {
                    setjQueryValidateDateFormat(dateFormat);
                }

                $(function () {
                    // parsing the unobtrusive attributes when we get content via ajax
                    $(document).ajaxComplete(function () {
                        if ($.validator.unobtrusive) {
                            $.validator.unobtrusive.parse(document);
                        }
                    });
                });
            }

            if (decimalSep === ',') setjQueryValidateDecimalSepComm();

            utils.setPopup();

            var $doc = $(document);
            if (!$doc.data('aweldngset')) {
                $doc.data('aweldngset', 1);
                $(function () {
                    utils.consistentSearchTxt();
                    $(document).ajaxComplete(utils.consistentSearchTxt);
                    setFormLoadingAnim();
                });
            }

            // remove locaStorage keys from older versions of awesome; you can modify  ppk (awe.ppk = "myapp1_"), current value is "awe17_"
            try {
                for (var key in localStorage) {
                    if (key.indexOf("awe") === 0) {
                        if (key.indexOf(awe.ppk) !== 0) {
                            localStorage.removeItem(key);
                        }
                    }
                }
            } catch (err) {
                /*empty*/
            }

            /*begin*/
            awe.err = function (o, p2) {
                var msg = "unexpected error occured";
                if (p2) {
                    if (typeof p2 === 'string') {
                        msg = p2;
                    } else {
                        msg = p2.responseText || msg;
                    }
                }

                var content = msg;
                // handle ajax errors that return html with layout page
                if (msg.indexOf('<html>') > -1) {
                    content = $('<div>unexpected error<br/> (showing it will replace the whole page)<div/>');
                    var btn = $('<a href="">show</a>').click(function (e) {
                        e.preventDefault();
                        $('body').html(msg);
                    });

                    content.append(btn);
                }

                awem.notif(content, 0, 'o-err');

                // close popup that got error
                if (o && o.p && o.p.isOpen) {
                    dapi(o.p.d).close();
                }
            };
            /*end*/

            function setFormLoadingAnim() {

                function setLoading(cont, marg) {
                    var spin = $('<div class="spinCont"><div class="spinner"><div class="dot1"></div><div class="dot2"></div></div></div>').hide();
                    cont.append(spin);
                    var ldng = cont.find('.awe-loading:first');
                    cont.on('aweload', function () {
                        spin.remove();
                    });

                    setTimeout(function () {
                        if (cont.width() > 200 && cont.height() > 90) {
                            ldng.hide();
                            var h = cont.outerHeight(true);
                            spin.height(h);
                            spin.children().first().css('margin-top', h / 2 - marg + 'px');
                            spin.show();
                        }
                    }, 100);
                }

                $(document)
                    .on('awebeginload', function (e) {

                        var cont = $(e.target);

                        if (cont.is('.awe-popup')) {
                            setLoading(cont, 30);
                        }
                    })
                    .on('submit', function (e) {
                        var marg = 50;
                        var cont = $(e.target).closest('.awe-popupw, .formLoad');

                        if (cont.is('.formLoad')) {
                            marg = 30;
                        }

                        if (cont.length) {
                            setLoading(cont, marg);
                        }
                    });
            }

            function setjQueryValidateDateFormat(format) {
                //setting the correct date format for jquery.validate
                $.validator.addMethod(
                    'date',
                    function (value, element) {
                        if (this.optional(element)) {
                            return true;
                        }

                        var result = false;
                        try {
                            awem.parseDate(format, value);
                            result = true;
                        } catch (err2) {
                            result = false;
                        }
                        return result;
                    },
                    ''
                );
            }

            function setjQueryValidateDecimalSepComm() {
                if ($.validator) {
                    $.validator.methods.range = function (value, element, param) {
                        var globalizedValue = value.replace(",", ".");
                        return this.optional(element) || globalizedValue >= param[0] && globalizedValue <= param[1];
                    };

                    $.validator.methods.number = function (value, element) {
                        return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
                    };
                }
            }
        },

        remLSPref: function (pref, newName) {
            if (localStorage)
                for (var key in localStorage) {
                    if (key.indexOf(pref) === 0) {
                        if (key !== newName) {
                            localStorage.removeItem(key);
                        }
                    }
                }
        },

        // on ie hitting enter doesn't trigger change, 
        // all searchtxt inputs will trigger change on enter in all browsers
        consistentSearchTxt: function () {
            $('.searchtxt').each(function () {
                if ($(this).data('searchtxth') !== 1)
                    $(this).data('searchtxth', 1)
                        .data('myval', $(this).val())
                        .on('change', function (e) {
                            if ($(this).val() !== $(this).data('myval')) {
                                $(this).data('myval', $(this).val());
                            } else {
                                e.stopImmediatePropagation();
                            }
                        })
                        .on('keyup', function (e) {
                            if (e.which === 13) {
                                e.preventDefault();
                                if ($(this).val() !== $(this).data('myval')) {

                                    $(this).change();
                                }
                            }
                        });
            });
        },
        setPopup: function () {
            awe.popup = function (o) {
                if (o.tag && o.tag.DropdownPopup) {
                    return awem.dropdownPopup(o);
                } else if (o.tag && o.tag.Inline) {
                    return awem.inlinePopup(o);
                } else {
                    return awem.dropdownPopup(o);
                }
            };
        },
        postfix: function (o) {
            return function (val) {
                return val ? val + ' ' + o : '';
            };
        },

        prefix: function (o) {
            return function (val) {
                return val ? o + val : '';
            };
        },
        percent: function (val) {
            return (parseFloat(val.replace(',', '.')) * 100).toFixed() + ' %';
        },

        gridModelBuilder: function (opt) {
            var gp = opt.gp;
            var items = opt.items;
            var itemsCount = opt.itemsCount;
            var key = opt.key;
            var defaultKeySort = opt.defaultKeySort;
            if (isNull(defaultKeySort)) defaultKeySort = Sort.Desc;

            var sortNames = gp.sortNames || [];
            var sortDirections = gp.sortDirections || [];
            var getChildren = opt.getChildren;
            var paging = isNotNull(gp.paging) ? gp.paging : 1;

            var page = gp.page || 1;
            var lazyKey = gp.key;
            var getItem = opt.getItem;
            var pageCount;

            calcOrderParams();

            var map = opt.map || function (it) { return it; };

            var makeFooter = opt.makeFooter || function () { return null; };

            var areInSameGroup = opt.areInSameGroup || function (path, g1, g2) {
                if (path.indexOf(",") === -1) return getColVal(path, g1) === getColVal(path, g2);
                var props = path.split(',');

                var result = 1;
                $.each(props, function (i, prop) {
                    result = result && getColVal(prop, g1) === getColVal(prop, g2);
                });

                return result;
            };

            var makeKey = opt.makeKey || function (gkey, groupIndex, group, val) {
                return gkey + "$" + groupIndex + group + encodeURIComponent(val); //make $0gkey$1gkey2
            };

            var makeHeader = opt.makeHeader || function (info) {
                if (info.NodeItem) {
                    return { Item: map(info.NodeItem) };
                }

                var val = isNotNull(info.Val) ? info.Val : getColVal(info.Column, info.Items[0]);

                return {
                    Content: info.Header + ": " + val,
                    Collapsed: 0
                };
            };

            // build model
            var treeHeight = 0;

            if (opt.getChildren && !opt.key) {
                throw new Error("gridModelBuilder key should have value when GetChildren is set");
            }

            if (isNull(items) && isNull(opt.pageItems) && isNull(gp.key)) {
                throw new Error("GridModelBuilder items not set, either set the items, or set the pageItems proeperty");
            }

            var pageSize = parseInt(gp.pageSize || 10);
            if (pageSize < 1) pageSize = 10;

            var pageItems = items;

            if (!isNull(opt.pageItems)) {
                pageItems = opt.pageItems;
            } else {
                // when no custom querying
                if (isNull(itemsCount)) {

                    if (!lazyKey) {
                        items = orderBy(items);
                        if (paging) {
                            pageItems = getPage(items, page, pageSize);

                            if (pageItems.length === 0 && page > 1) {
                                page = 1;
                                pageItems = getPage(items, page, pageSize);
                            }

                        } else {
                            pageItems = items.slice(0);
                        }
                    } else {
                        // Lazy Key load
                        if (!getItem) {
                            throw new Error("GridModelBuilder getItem func needs to be defined (used by Lazy Loading and api.update)");
                        }

                        var list = [];
                        var item = getItem();
                        if (item) list.push(item);
                        pageItems = list;
                    }
                }
            }

            gp.groups = gp.groups || [];

            var data = buildData(lazyKey);

            if (isNull(itemsCount)) {
                itemsCount = items.length;
            }

            if (isNull(pageCount)) {
                pageCount = Math.ceil(itemsCount / pageSize);
            }

            var model = {
                Data: data,
                PageCount: pageCount,
                ItemsCount: itemsCount,
                PageSize: pageSize,
                Page: paging ? page : -1,
                Pgn: paging,
                GroupCount: gp.groups.length,
                Th: treeHeight,
                Key: key,
                Fr: opt.FrozenRows
            };

            function modelToDto(input) {
                var res =
                {
                    k: input.Key,
                    th: input.Th,
                    p: input.Page,
                    cs: input.Cs,
                    fr: input.Fr,
                    gc: input.GroupCount,
                    ic: input.ItemsCount,
                    pc: input.PageCount,
                    pgn: input.Pgn,
                    ps: input.PageSize,
                    tg: input.Tag,
                    A: 1
                };

                if (isNotNull(input.Data)) {
                    res.dt = ToGroupViewDto(input.Data);
                }

                return res;
            }

            function ToGroupViewDto(o) {
                var res =
                {
                    it: o.Items,
                    f: o.Footer,
                    nt: o.Nt,
                    h: ToGHeaderDto(o.Header)
                };

                if (isNotNull(o.groups)) {
                    res.gs = $.map(o.groups, ToGroupViewDto);
                }

                return res;
            }

            function ToGHeaderDto(o) {
                if (isNull(o)) return null;

                var res =
                {
                    k: o.Key,
                    c: o.Content,
                    i: o.Item,
                    cl: o.Collapsed,
                    ip: o.IgnorePersistence
                };

                return res;
            }

            return modelToDto(model);

            function calcOrderParams() {
                if (!sortNames.length && key && defaultKeySort !== Sort.None) {
                    // default sorting
                    sortNames = [key];
                    sortDirections = [defaultKeySort === Sort.Asc ? "asc" : "desc"];
                }
            }

            function orderBy(uitems) {
                if (sortNames.length) {
                    var getfunc = function (sname, a) {
                        return a[sname];
                    };
                    var getfuncs = $.map(sortNames, function (sname) {
                        if (sname.indexOf(',') + 1 || sname.indexOf('.') + 1)
                            return getColVal;
                        return getfunc;
                    });

                    uitems.sort(function (a, b) {
                        var res = 0;

                        loop(sortNames, function (sname, i) {
                            var direction = sortDirections[i];
                            var func = getfuncs[i];
                            var sa = func(sname, a), sb = func(sname, b);


                            if (typeof sa === "string") {
                                res = (sa || '').localeCompare(sb);
                            }
                            else {
                                res = sa - sb;
                            }

                            if (direction === 'desc') {
                                res = -res;
                            }

                            if (res !== 0) {
                                return false;
                            }
                        });

                        return res;
                    });
                }

                return uitems;
            }

            function buildData(lkey) {
                var gridModel = buildGroupView(pageItems, 0, "$" + page, !!lkey);

                return gridModel;
            }

            function buildGroupView(groupItems, groupIndex, keyPart, keyHasVal) {
                var groupColumns = keyHasVal ? [] : gp.groups;
                var groupHeaders = gp.headers;

                function addGroupView() {
                    var first = groupViewItems[0];
                    var gcol = groupColumns[groupIndex];

                    var info =
                    {
                        Items: groupViewItems,
                        Column: gcol,
                        Header: groupHeaders[groupIndex],
                        Level: lvl
                    };

                    var val = getColVal(gcol, first);
                    if (opt.getHeaderVal) {
                        var colFunc = opt.getHeaderVal[gcol];
                        if (colFunc) {
                            val = colFunc(first);
                            info.Val = val;
                        }
                    }

                    var newKey = makeKey(keyPart, groupIndex, group, val);

                    var gr = buildGroupView(groupViewItems, groupIndex + 1, newKey);
                    gr.Header = makeHeader(info);
                    gr.Header.Key = gr.Header.Key || newKey;
                    gr.Footer = makeFooter(info);

                    groupViews.push(gr);
                }

                var result = {};
                if (groupIndex == 0 && !keyHasVal) {
                    result.Footer = makeFooter({ Items: groupItems });
                }

                var lvl = groupIndex + 1;
                if (groupIndex === groupColumns.length) {
                    if (isNull(getChildren) || !groupItems.length) {
                        result.Items = $.map(groupItems, map);
                    }
                    else {
                        // set items or groups
                        buildNode(result, groupItems, key, lvl, 0);
                    }
                }
                else {
                    var groupViews = [];
                    var groupViewItems = [];

                    var group = groupColumns[groupIndex];
                    var i = 0;
                    while (i !== groupItems.length) {
                        var head = groupItems[i];

                        if (groupViewItems.length === 0)
                            groupViewItems.push(head);

                        else if (areInSameGroup(group, groupViewItems[0], head))
                            groupViewItems.push(head);

                        else {
                            addGroupView();
                            groupViewItems = [head];
                        }

                        i++;
                    }

                    if (groupViewItems.length !== 0) {
                        addGroupView();
                    }

                    result.groups = groupViews;
                }

                return result;
            }

            function buildNode(result, groupItems, keyPart, level, nodeLevel) {
                if (nodeLevel > treeHeight) treeHeight = nodeLevel;

                var groups = [];

                $.each(groupItems, function (i, groupItem) {
                    var children = getChildren(groupItem, nodeLevel + 1) || [];
                    var isLazyNode = children === "lazy";

                    // if item has no children or lazy filter it, and ignore if filtered out

                    if (!isLazyNode && children.length > 1) {
                        //sort children
                        orderBy(children);
                    }

                    if (isLazyNode || children.length) {
                        var keyValue = getColVal(key, groupItem);
                        var newKey = makeNodeKey(keyValue);

                        var nodeGroup = {};
                        nodeGroup.Nt = isLazyNode ? NodeType.Lazy : NodeType.Node;
                        nodeGroup.Header = makeHeader({
                            Items: children,
                            NodeItem: groupItem,
                            Level: level,
                            NodeLevel: nodeLevel,
                            Lazy: isLazyNode
                        });

                        nodeGroup.Header.Key = nodeGroup.Header.Key || newKey;

                        if (isLazyNode) {
                            nodeGroup.Header.Collapsed = true;
                        }
                        else {
                            buildNode(nodeGroup, children, newKey, level, nodeLevel + 1);
                            // if returns true we don't filter it, otherwise we add it to the must be filtered collection
                        }

                        groups.push(nodeGroup);
                    }
                    else {
                        // leaf
                        if (nodeLevel > treeHeight) treeHeight = nodeLevel;

                        if (groups.length === 0 || groups[groups.length - 1].Nt !== NodeType.Items) {
                            groups.push({ Items: [map(groupItem)], Nt: NodeType.Items });
                        }
                        else {
                            var last = groups[groups.length - 1];
                            last.Items.push(map(groupItem));
                        }
                    }
                });

                if (groups.length === 1 && groups[0].Nt === NodeType.Items) {
                    result.Items = groups[0].Items;
                }
                else {
                    result.groups = groups;
                }

                // filter 
                // return true if there's items after filtering
            }

            function makeNodeKey(val) {
                return "$" + encodeURIComponent(val);
            }
        },
        osearch: function (o, info) {
            var term = info.term;
            var c = info.cache;
            c.termsUsed = c.termsUsed || {};
            c.nrterms = c.nrterms || []; // no result terms

            if (c.termsUsed[term]) return [];
            c.termsUsed[term] = 1;

            // ignore terms that are contain nr terms
            var nores = 0;
            $.each(c.nrterms, function (i, val) {
                if (term.indexOf(val) >= 0) {
                    nores = 1;
                    return false;
                }
            });

            if (nores) {
                return [];
            }

            var prm = awe.params(o);
            prm.push({ name: "term", value: term });

            return awe.ajx({ url: o.tag.Url, data: prm }).then(function (data) {
                if (!data || !data.length) {
                    c.nrterms.push(term);
                }
                return data;
            }).fail(function () { c.termsUsed[term] = 0; });
        },
        model: function (row) {
            return dapi(row.closest('.awe-grid')).model(row) || {};
        },
        closeNest: closeNest,
        colf: function (cols) {
            return {
                fcoli: function (id) {
                    for (var i = 0; i < cols.length; i++) {
                        var col = cols[i];
                        if (col.I === id) return col;
                    }
                },
                fcol: function (bind) {
                    for (var i = 0; i < cols.length; i++) {
                        var col = cols[i];
                        if (col.P === bind) return col;
                    }
                }
            };
        },
        gcvw: function (api, col, opt, cls) {
            cls = cls || '';
            return '<div class="awe-cv ' + cls + '" data-i="' + col.ix + '">' + utils.gcv(api, col, opt) + '</div>';
        },
        gcv: function (api, col, opt) {
            return api.gcv(opt.itm, col, opt.nf);
        },
        getVisCols: function (g) {
            var columns = g.data('o').columns;
            var vcols = [];
            for (var i = 0; i < columns.length; i++) {
                var col = columns[i];
                if (!col.Hid) {
                    vcols.push(col.T || col.P);
                }
            }

            return vcols;
        },
        Sort: Sort,
        version: '6.3.19'
    };
}(jQuery);

//export { utils };
//import * as jQuery from 'jquery';
//import { awef, awe, awem, utils } from './aweui/all.js';

var sideMenu = function ($) {
    var loop = awef.loop;
    var isSelected, getHeight, cancelSync;
    var menu;
    var grid;

    function build(opt) {
        var sctrl;
        var gapi;
        var cont;
        var lastClicked;

        var gid = opt.id;
        grid = $('#' + gid);

        isSelected = opt.isSelected || function (item) { return false; };

        getHeight = opt.getHeight || function () {
            return $(window).height() - 20;
        };

        cancelSync = opt.cancelSync || function () { };

        function init() {
            gapi = grid.data('api');
            cont = grid.find('.awe-content');
            lastClicked = -1;

            sctrl = initMenuSeach();

            setHeight();

            grid.one('awerender', function () {
                scrollToSel();
            });

            var skey = gid + 'menust';
            var st = sessionStorage && sessionStorage.getItem(skey);
            if (st) {
                cont.scrollTop(st);
            }

            cont.on('scroll', function (e) {
                sessionStorage && sessionStorage.setItem(skey, cont.scrollTop());
            });
        }

        function initMenuSeach() {
            var txt = $('#' + opt.src);

            function onenter(e, item) {
                e.preventDefault();
                
                if (item.length) {                    
                    item[0].click();
                }

                txt.data('noaf', 1);
                txt.focus();
            }

            function topFunc() {
                $(window).scrollTop($(window).scrollTop() - 10);
            }

            function botFunc() {
                if ((cont.offset().top + cont.height() + 50) > ($(window).scrollTop() + $(window).height())) {
                    $(window).scrollTop($(window).scrollTop() + 10);
                }
            }

            sctrl = awem.slist(cont, { sel: '.awe-row', enter: onenter, fcls: 'awe-selected', sc: 'n', topf: topFunc, botf: botFunc });

            grid.on('click', 'a', function (e) {
                lastClicked = $(e.target).data('k');
            });

            var keyHandled;
            
            var go = grid.data('o');
            
            // using awe.bind instead of .on so that if grid is destroyed the events will unbind
            awe.bind(go, txt, 'keydown', function (e) {
                if (sctrl.keyh(e)) {
                    keyHandled = 1;
                }
            });

            awe.bind(go, txt, 'keyup', function () {
                if (!keyHandled) {
                    opt.keyupf && opt.keyupf();
                    gapi.load();
                    sctrl.autofocus();
                }

                keyHandled = 0;
            });

            awe.bind(go, txt, 'focusin', function () {
                // can't send event data, jquerybug
                if (!txt.data('noaf')) {
                    sctrl.autofocus();
                }

                txt.data('noaf', 0);
            });

            awe.bind(go, txt, 'blur', function () {
                if (txt.data('brf')) {
                    sctrl.remf();
                }
            });

            return sctrl;
        }

        function scrollToSel() {
            var menuc = cont;
            var sel = menuc.find('.selected');
            if (sel.length) {
                sctrl.scrollTo(menuc.find('.selected'));
            } else {
                sctrl.scrollTo(menuc.find('.awe-row'));
            }
        }

        function setHeight() {
            if (!grid.length) return;
            if ($(window).width() <= 767) {
                awem.setgh(grid, 0);
                return;
            }

            var gridh = getHeight();
            awem.setgh(grid, gridh);
        }

        menu = {
            setHeight: setHeight,
            getLastClicked: function () {
                return lastClicked;
            },
            selectById: function (id) {
                var sel = gapi.select(id);
                if (sel.length) {
                    sel = sel[0];
                    sctrl.focus(sel);

                    sctrl.scrollToFocused();
                }

                // show parent when scroll to the first page item
                if (id === 'p0') {
                    var prev = $(sel).prev();
                    if (prev.length)
                        sctrl.scrollTo(prev);
                }
            }
        };

        if (opt.scrollSync) {
            $(window)
                .on('scroll resize',
                    function (e) {
                        if ($(':focus').is('input') || $(window).width() < 1000) return;

                        if (cancelSync()) return;

                        var top = $(document).scrollTop() + 20;

                        $('h2').each(function (i) {
                            var ht = $(this).offset().top;
                            if (ht > top) {
                                var res = i;
                                if (i > 0 && ht > top + $(window).height() * .7) {
                                    res--;
                                }

                                var lix = menu.getLastClicked();
                                if (lix > 0) {
                                    // if last clicked h2 is about the same height
                                    var lh2 = $('h2').eq(lix).offset().top;

                                    if (lh2 > ht - 3 && lh2 < ht + 3) {
                                        res = lix;
                                    }
                                }

                                menu.selectById('p' + res);
                                return false;
                            }
                        });
                    });

            grid.find('a').click(function () {
                var k = $(this).data('k');
                awe.flash($('h2').eq(k));
            });
        }
        
        init();
        
        // in case of awem.rebuildAll
        grid.on('aweinit', init);

        return menu;
    }

    var lnodes = null;
    function getMenuGridFunc(nodesOrXhr, grido) {

        function addParentsTo(res, node, all) {
            if (node.ParentId) {
                var isFound;
                loop(res, function (o) {
                    if (o.Id === node.ParentId) {
                        isFound = true;
                        return false;
                    }
                });

                if (!isFound) {
                    var parent = $.grep(all, function (o) { return o.Id === node.ParentId; })[0];
                    res.push(parent);
                    addParentsTo(res, parent, all);
                }
            }
        }

        function equals(a, b) {
            return new RegExp("^" + a + "$", "i").test(b);
        }

        function buildMenuGridModel(gp) {
            gp.paging = false;
            var search = (gp.search || '').trim();

            // find selected
            var selectedItems = $.grep(lnodes, function (o) {
                o.Selected = '';
                return isSelected(o);
            });

            if (selectedItems.length > 1) {
                var anch = window.location.hash.substr(0);

                var anchsli = $.grep(selectedItems, function (o) {
                    return equals(anch, o.Anchor);
                });

                if (anchsli.length) {
                    selectedItems = anchsli.slice(0);
                }
            }

            if (selectedItems.length) {
                selectedItems[0].Selected = "selected";
                loop(selectedItems, function (item) {
                    addParentsTo(selectedItems, item, lnodes);
                });
            }

            loop(selectedItems, function (o) {
                o.IsNodeSelected = true;
            });

            var words = search.split(" ");

            var regs = $.map(words, function (w) {
                return new RegExp(w, "i");
            });

            var regsl = regs.length;

            var result = $.grep(lnodes, function (node) {
                var matches = 0;
                var s = node.Keywords + ' ' + node.Name;

                loop(regs, function (reg) {
                    reg.test(s) && matches++;
                });

                return regsl === matches && (!node.NoMenu || search);
            });

            var searchResult = result.slice(0);

            loop(searchResult, function (o) {
                addParentsTo(result, o, lnodes);
            });

            var rootNodes = $.grep(result, function (o) { return !o.ParentId; });

            var getChildren = function (node, nodeLevel) {
                return $.grep(result, function (o) { return o.ParentId === node.Id; });
            };

            function makeHeader(info) {
                var isNodeSelected = info.NodeItem.IsNodeSelected;
                var collapsed = !search && !isNodeSelected && info.NodeItem.Collapsed;
                return {
                    Item: info.NodeItem,
                    Collapsed: collapsed,
                    IgnorePersistence: search || isNodeSelected
                };
            }

            return utils.gridModelBuilder({
                key: "Id",
                gp: gp,
                items: rootNodes,
                getChildren: getChildren,
                defaultKeySort: utils.Sort.None,
                makeHeader: makeHeader
            });
        }

        return function (sgp) {
            var gp = utils.getGridParams(sgp);

            if (lnodes) {

                return buildMenuGridModel(gp);
            }

            return $.when(nodesOrXhr).then(function (res) {
                lnodes = res;
                if (lnodes) {
                    return buildMenuGridModel(gp);
                }
            });
        };
    }

    function menutree(o) {
        o.alt = 0; // no alt row css
        var api = o.api;
        // render row
        api.itmf = function (opt) {
            var content = '';
            var itm = opt.itm;
            if (opt.ceb) content += api.ceb();
            content += itm.Name;

            if (opt.ceb) {
                opt.clss += ' mnitm awe-ceb';
            } else {
                opt.clss += ' mnitm ';
            }

            if (itm.Page) opt.clss += ' pmnitem';

            var attr = opt.attr;
            attr += ' class="' + opt.clss + '"';
            var style = opt.style || '';

            if (opt.ind) {
                style += 'padding-left:' + opt.ind / 2 + 'em;';
            }

            style && (attr += ' style="' + style + '"');

            return itm.Url ?
                '<a href="' + itm.Url + '" ' + attr + ' >' + content + '</a>' :
                '<div ' + attr + '>' + content + '</div>';
        };
    }

    return {
        build: build,
        getMenuGridFunc: getMenuGridFunc,
        menutree: menutree
    };
}(jQuery);

//export { sideMenu };
var signalrSync = function () {
    function regGridSync() {
        function init() {
            if ($('.awe-grid[data-syncg]').length) {
                initSync();
            }
        }

        $(document).ajaxComplete(init);
        init();
    }

    function initSync() {
    if (document.isync) return;
    document.isync = 1;
    var root = document.root;

    $.ajax(root + '/js/signalr.js',
        {
            dataType: "script",
            cache: true,
            success: function () {
                init();
            }
        });

    function init() {
        var connection = new signalR.HubConnectionBuilder().withUrl(root + "/syncHub").build();

        connection.start().then(function () {
            $(document)
                .on('itemdelete', function (e) {
                    send(e, 'del');
                })
                .on('aweinlinesave itemedit', '.awe-row', function (e) {
                    send(e, '');
                });
        }).catch(function (err) {
            return console.error(err.toString());
        });

        connection.on("ReceiveMessage", function (key, act, group) {
            updateGrids(key, act, group);
        });

        function updateGrids(key, act, group, senderg) {
            $('.awe-grid[data-syncg="' + group + '"]').each(function (i, el) {
                if (senderg && $(el).is(senderg)) return;
                updateRow($(el), key, act);
            });
        }

        function send(e, act) {
            var key = $(e.target).data('k').toString();
            var grid = $(e.target).closest('.awe-grid');
            var group = grid.data('syncg');
            updateGrids(key, act, group, grid);            
            trysend(function () {
                connection.invoke("Send", key, act, group);
            });
        }

        function trysend(action, attempts) {
            attempts = attempts || 0;
            try {
                action();
            } catch (err) {
                if (attempts < 1) {
                    $.connection.start();
                    setTimeout(function () {
                        trysend(action, attempts + 1);
                    }, 300);
                }
            }
        }

        function updateRow(g, key, act) {
            var gid = g.attr('id');
            var row = g.find('.awe-row[data-k="' + key + '"]');
            if (row.length && !row.hasClass('o-glrow')) {
                if (act === 'del')
                    utils.delRow(row);
                else
                    utils.itemEdited(gid, 1, 1)({ id: key });
            }
        }
    }
}

    return {
        init: regGridSync
    };
}();
/* eslint-disable */
var storg = function () {
    var prefix = "awed.";
    var version = 1;
    var storage = sessionStorage || {};
    return {
        init: function (v) {
            version = v || 1;
            // remove storage keys from older versions; current value is "awe.oldversion"
            try {
                for (var key in storage) {
                    if (key.indexOf(prefix) === 0) {
                        if (key.indexOf(prefix + version) !== 0) {
                            storage.removeItem(key);
                        }
                    }
                }
            } catch (err) {
                /*empty*/
            }
        },
        getOrAddAndRun: function (key, loadFunc, onGetFunc) {
            if (!onGetFunc) onGetFunc = function (res) { return res; }
            key = prefix + version + key;
            if (storage[key]) {
                var itms = JSON.parse(storage[key]);
                return onGetFunc(itms);

            } else {
                return loadFunc().then(function (items) {
                    storage[key] = JSON.stringify(items);
                    return onGetFunc(items);
                });
            }
        }
    };
}();

//export {storg};
/* eslint-disable */
//import * as jQuery from 'jquery';
//import { sideMenu } from './sidemenu';
//import { awef, awe, aweui, utils } from './aweui/all.js';
//import { storg } from './storg.js';

var site = function ($) {
    var encode = awef.encode;
    var menu;
    function documentReady() {
        var root = document.root || './';

        storg.init(document.ver);
        setupSideMenu();
        setupFmwPicker();

        layPage();
        $(window).on('resize', layPage);

        handleAnchors();

        $('#btnLogo').click(function (e) {
            if ($(window).width() < 1050) {
                e.preventDefault();
                $('#btnMenuToggle').click();
            }
        });

        $('#btnMenuToggle').click(function () {
            menuToggle($('#demoMenu').is(':visible'));
        });

        site.parseCode && site.parseCode();

        handleTabs();

        $('#chTheme').change(function () {
            var theme = $('#chTheme').val();
            $('#aweStyle').attr('href', root + "/css/themes/" + theme + "/AwesomeMvc.css?v=" + document.ver);
            $('body').attr('class', theme);
            Cookies && Cookies.set('awedemset2', theme, { expires: 30 });
        });

        signalrSync.init();

        $(document).on('aweload', 'table.awe-ajaxlist', wrapLists);

        var lastw = 0;
        function layPage() {
            var ww = $(window).width();

            $("#main").css("min-height", ($(window).height() - 120) + "px");
            $('#maincont').css("min-height", $(window).height() - ($('#header').outerHeight() + 110));
            if (lastw !== ww) {
                menuToggle(ww < 1050);
            }

            lastw = ww;
            menu.setHeight();
        }
    }

    function setupFmwPicker() {
        var lastw = 1001;
        function setFmwPicker(ww) {
            awe.destroy($('#ddlFmw').data('o'));
            var cfg = {
                id: 'ddlFmw',
                dataFunc: function () {
                    return [
                        { c: 'aweui (Angular, React, Vue)', k: 'https://aweui.aspnetawesome.com' },
                        { c: 'ASP.net Core/MVC', k: 'https://demo.aspnetawesome.com' },
                        { c: 'ASP.net Web-Forms', k: 'https://demowf.aspnetawesome.com' }
                    ];
                }
            };

            if (ww > 1000) {
                cfg.buttongroup = true;
            } else {
                cfg.odropdown =
                {
                    inLabel: 'for: ',
                    openOnHover: true
                }
            }

            aweui.radioList(cfg);

            lastw = ww;
        }

        setFmwPicker($(window).width());
        $(window).on('resize', function () {
            var ww = $(window).width();

            if (lastw > 1000 && ww < 1000 || lastw < 1000 && ww > 1000) {
                setFmwPicker(ww);
            }
        });

        $('#ddlFmw').on('change', function () {
            window.location.href = $(this).val();
        });
    }

    function setupSideMenu() {
        var px;
        $(window).on('mousemove', function (e) {
            px = e.pageX;
        });

        menu = sideMenu.build({
            id: 'Menu',
            src: 'msearch',
            keyupf: srckup,
            isSelected: function (item) {
                return item.Action == document.action && item.Controller == document.controller;
            },
            getHeight: function () {
                return $(window).height() - $('#header').height() - 70;
            },
            scrollSync: true,
            cancelSync: function () {
                return px < $('#Menu').outerWidth() + 20;
            }
        });

        function srckup() {
        }
    }

    var tabid = 0;
    function handleTabs() {
        $('.tabs').each(function (i, item) {
            var tabs = $(item);
            if (!tabs.data('tabsh')) {
                tabs.data('tabsh', 1);

                var id = 'mytab' + tabid++;
                tabs.attr('id', id).addClass('awe-tabs');
                tabs.children().wrapAll('<div class="awe-tabscontent"/>').addClass('awe-tab');

                $('<div class="awe-tabsbar"></div>').prependTo(tabs);
                awe.tabs({ i: id });
            }
        });
    }

    function getAnchorName(a) {
        var name = a.data('name');
        if (!name) name = $.trim(a.html()).replace(/ /g, '-').replace(/\(|\)|:|\.|\;|\\|\/|\?|,/g, '');
        name = name.replace('&lt', '').replace('&gt', '');
        return name;
    }

    function handleAnchors() {
        var anchor = window.location.hash.replace('#', '').replace(/\(|\)|:|\.|\;|\\|\/|\?|,/g, '');
        $('h3,h2').each(function (_, e) {
            var a = $(e);
            if (!a.data('ah')) {
                a.data('ah', 1);
                var name = a.data('name');
                var url = a.data('u') || '';
                if (!name) name = $.trim(a.html()).replace(/ /g, '-').replace(/\(|\)|:|\.|\;|\\|\/|\?|,/g, '');
                name = name.replace('&lt', '').replace('&gt', '').replace('\'', '');
                a.append("<a class='anchor' name='" + name + "' href='" + url + "#" + name + "' tabIndex='-1'>&nbsp;<i class='ico-link'></i></a>");

                if (name === anchor) {
                    window.location.href = "#" + name;
                    awe.flash(a);
                }
            }
        });
    }

    // wrap ajaxlists for horizontal scrolling on small screens
    function wrapLists() {
        $('table.awe-ajaxlist:not([wrapped])').each(function () {
            var columns = $(this).find('thead th').length;
            var mw = $(this).data('mw');
            if (columns || mw) {
                mw = mw || columns * 120;

                $(this).wrap('<div style="width:100%; overflow:auto;"></div>')
                    .wrap('<div style="min-width:' + mw + 'px;padding-bottom:2px;"></div>')
                    .attr('wrapped', 'wrapped');
            }
        });
    }

    function menuToggle(hide) {
        var page = $('#demoPage').show();
        var menu = $('#demoMenu').css('width', '').css('position', '');

        if (hide) {
            menu.hide();
            page.css('margin-left', "0");
            $('#btnMenuToggle').show().removeClass('on');
            $('body').trigger('domlay');
        } else {
            menu.show();

            page.css('margin-left', "14.5em");

            if (page.width() < 200) {
                page.hide();
                menu.css('width', '100%');
                menu.css('position', 'static');
            }

            $('#btnMenuToggle').addClass('on');

            $('body').trigger('domlay');
        }
    }

    function slide(popup) {
        var o = popup.data('o');
        var maxtop = $(window).height();
        var div = popup.closest('.o-pmc');

        o.p.nolay = 1;

        div.css('transform', 'translateY(' + maxtop + 'px)');

        setTimeout(function () {
            div.css('transition', '.5s');
            div.css('transform', 'translateY(0)');
            setTimeout(function () {
                o.p.nolay = 0;
                div.css('transition', '');
                div.css('transform', '');
                o.cx.api.lay();
            }, 500);
        }, 30);
    }


    return {
        documentReady: documentReady,
        getAnchorName: getAnchorName,
        handleAnchors: handleAnchors,
        handleTabs: handleTabs,
        slide: slide,
        getFormattedTime: function () {
            var d = new Date();
            return ('0' + d.getHours()).slice(-2) + ":" + ('0' + d.getMinutes()).slice(-2) + ":" + ('0' + d.getSeconds()).slice(-2);
        },
        getThemes: function () {
            return $.map(["wui", "mui", "bts", "met", "gui", "gui3", "start", "black-cab"], function (v) { return { k: v, c: v } });
        },
        parseCode: function () {
            $('pre').addClass('prettyprint');

            // show code 
            $('.code').each(function (i, el) {
                var codediv = $(el);
                if (!codediv.data('h')) {
                    codediv.data('h', 1);

                    var scbtn = $('<span class="shcode">show code</span>')
                        .click(function () {
                            var btn = $(this);
                            btn.toggleClass("hideCode showCode");
                            var parent = $(this).parent();
                            var div = parent.next();

                            div.find('.srccode').each(function () {
                                var d = $(this);
                                if (d.data('handled')) return;
                                d.data('handled', 1);
                                var name = d.data('name');

                                var backbtn = $('<button class="awe-btn backbtn" type="button">go back</button>').click(setMain);

                                d.append(strUtil.wrapCode(''));

                                var main = d.find('pre');

                                function setMain() {
                                    var code = strUtil.getCode(name);
                                    main.html(code).removeClass('prettyprinted');
                                    site.prettyPrint();
                                    backbtn.hide();
                                }

                                d.find('.codeWrap').prepend(backbtn);
                                setMain();
                            });

                            if (div.closest('.cbl').length) {
                                aweui.initPopup({
                                    id: 'showCode',
                                    setCont: function (sp, o) {
                                        o.scon.html(div);
                                        div.show();
                                    },
                                    close: function () {
                                        parent.after(div.hide());
                                    },
                                    modal: true,
                                    width: 900,
                                    outClickClose: true
                                });

                                awe.open('showCode');
                            }
                            else if (btn.hasClass("hideCode")) {
                                btn.html("hide code");
                                div.fadeIn();
                            } else {
                                btn.html("show code");
                                div.fadeOut();
                            }
                        });

                    var wrp = $('<div/>').append(scbtn);
                    codediv.wrap('<div/>')
                        .parent()
                        .hide()
                        .before(wrp);
                }
            });
        },
        prettyPrint: function () {
            try {
                PR && PR.prettyPrint();
            } catch (ex) {
                //ignore
            }
        },
        getDownloads: function () {
            return [
                { k: "https://www.aspnetawesome.com/Download/MvcCoreDemoApp", c: "Main Demo - ASP.net Core (this demo)" },
                { k: "https://www.aspnetawesome.com/Download/MinSetupCoreDemo", c: "Min Setup Demo - ASP.net Core (Template Project)" },
                { k: "https://www.aspnetawesome.com/Download/RazorPagesDemo", c: "Razor Pages Demo" },
                { k: "https://www.aspnetawesome.com/Download/ProDinner", c: "ProDinner demo (EFCore, SQL Server DB, and more)" },
                { k: "https://www.aspnetawesome.com/Download/AweMySql", c: "ASP.net Core/aweui + MySql demo (EFCore)" },
                { k: "https://www.aspnetawesome.com/Download/MvcTrial", c: "Trial version binaries for ASP.net Core, MVC 5/4/3" },
                { k: "", c: "MVC5", cs: "citm", nv: 1 },
                { k: "https://www.aspnetawesome.com/Download/MvcDemoApp", c: "Main Demo - MVC 5 (this demo)" },
                { k: "https://www.aspnetawesome.com/Download/MvcMinSetupDemo", c: "Min Setup Demo - MVC 5 (Template Project)" },
                { k: "https://www.aspnetawesome.com/Download/SimpleDemo", c: "Simple Demo MVC5" },
                { k: "https://www.aspnetawesome.com/Download/VBnetDemo", c: "VB.net Demo" },
                { k: "", c: "", cs: "o-litm", nv: 1 },
                { k: "", c: "See other live demos:", cs: "citm", nv: 1 },
                { k: "https://prodinner.aspnetawesome.com", c: "ProDinner demo live" },
                { k: "https://angular.aspnetawesome.com", c: "Angular aweui demo" }
            ];
        },
        loadWhenSeen: function (el, url, indx, callback) {
            var started = 0;
            if (!loadIfVis()) {
                $(window).on('scroll resize', loadIfVis);
            }

            function loadIfVis() {
                if (el.offset().top + el.outerHeight() < $(window).height() + $(window).scrollTop() + 300) {
                    if (started) return 1;
                    started = 1;

                    $(window).off('scroll resize', loadIfVis);
                    $.get(url, { v: indx }, function (res) {
                        callback(res);
                    });

                    return 1;
                }
            }
        },
        getSideMenuData: function (url) {
            var storageKey = awe.ppk + "_menuNodes";
            if (sessionStorage && sessionStorage[storageKey]) {
                return JSON.parse(sessionStorage[storageKey]);
            } else {
                return $.get(url).then(function (items) {
                    sessionStorage[storageKey] = JSON.stringify(items);
                    return items;
                });
            }
        },
        getCaretWord: function (el) {
            // textarea autocomplete 
            function getWordAtPos(s, pos) {
                var preText = s.substring(0, pos);
                if (preText.indexOf(" ") > 0 || preText.indexOf("\n") > 0) {
                    var words = preText.split(" ");
                    words = words[words.length - 1].split("\n");
                    return words[words.length - 1]; // return last word
                }
                else {
                    return preText;
                }
            }

            function getCaretPos(ctrl) {
                var caretPos = 0;
                if (document.selection) {
                    ctrl.focus();
                    var sel = document.selection.createRange();
                    sel.moveStart('character', -ctrl.value.length);
                    caretPos = sel.text.length;
                }
                else if (ctrl.selectionStart || ctrl.selectionStart === '0') {
                    caretPos = ctrl.selectionStart;
                }

                return caretPos;
            }

            var pos = getCaretPos(el);
            return getWordAtPos(el.value, pos);
        },
        replaceInTexarea: function (t, text, word) {
            if (t.setSelectionRange) {
                var sS = t.selectionStart - word.length;
                var sE = t.selectionEnd;
                t.value = t.value.substring(0, sS) + text + t.value.substr(sE);
                t.setSelectionRange(sS + text.length, sS + text.length);
                t.focus();
            }
            else if (t.createTextRange) {
                document.selection.createRange().text = text;
            }
        },
        gitCaption: function (item) {
            return '<img class="cthumb" src="' + encode(item.avatar) + '&s=40" />' + encode(item.c);
        },
        gitItem: function (item) {
            var res = "<div class='content'>" + '<div class="title">' + encode(item.c) + '<img class="thumb" src="' + encode(item.avatar) + '&s=40" />' + '</div>';
            if (item.desc) res += '<p class="desc">' + encode(item.desc) + '</p>';
            res += '</div>';
            return res;
        },
        gitRepoSearch: function (o, info) {
            var term = info.term;
            var c = info.cache;
            c.termsUsed = c.termsUsed || {};
            c.nrterms = c.nrterms || []; // no result terms

            if (c.termsUsed[term]) return [];
            c.termsUsed[term] = 1;

            var nores = 0;
            // don't search terms that contain nrterms
            $.each(c.nrterms, function (i, val) {
                if (term.indexOf(val) >= 0) {
                    nores = 1;
                    return false;
                }
            });

            if (nores) {
                return [];
            }

            return $.get('https://api.github.com/search/repositories', { q: term })
                .then(function (data) {
                    if (!data || !data.items.length) {
                        c.nrterms.push(term);
                    }

                    return $.map(data.items, function (item) { return { k: item.id, c: item.full_name, avatar: item.owner.avatar_url, desc: item.description }; });
                })
                .fail(function () { c.termsUsed[term] = 0; });
        },
    };
}(jQuery);

//export {site};
var awedict = {
    Empty: 'empty',
    GridInfo: "of {0} items",
    Select: 'please select',
    SearchForRes: 'search for more results',
    NoRecFound: 'no records found',
    PageSize: 'page size',
    Months: [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ],
    Days: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],

    Yes: 'Yes',
    No: 'No',
    Cancel: 'Cancel',
    Ok: 'Ok',
    GridGroupBar: 'Drag a column header and drop it here to group by that column',
    More: 'more',
    Search: 'Search'
};

//export {awedict};
/* eslint-disable */
//import * as jQuery from 'jquery';
//import { awef } from './awef.js';
//import { awe } from './awe.js';
//import { awem } from './awem.js';
//import { awedict } from './awedict.js';

var aweui = function ($) {
    var nul = null, loop = awef.loop, isNull = awef.isNull, isNotNull = awef.isNotNull;
    var disbattr = 'disabled="disabled"';

    function dict() {
        return aweui.dict;
    }

    function addDomDestrf(o, field, input) {
        awe.addDestr(o,
            function () {
                field.before(input);
                field.remove();
            },
            'dom');
    }

    function toData(ps) {
        var keys = [];
        var vals = [];
        var ls = [];
        if (ps) {
            for (var i = 0; i < ps.length; i++) {
                var el = ps[i];
                keys.push(el.name);
                vals.push(el.id);
                ls.push(isNotNull(el.load) ? el.load : 1);
            }
        }

        return { keys: keys, vals: vals, l: ls };
    }

    function toPars(ps) {
        var keys = [];
        var vals = [];
        if (ps) {
            for (var i = 0; i < ps.length; i++) {
                var el = ps[i];
                keys.push(el.name);
                vals.push(el.val);
            }
        }

        return { keys: keys, vals: vals };
    }

    function toBtns(btns) {
        var res = [];
        loop(btns, function (el) {
            el.sf = el.action;
            res.push(el);
        });

        return res;
    }

    function renderInput(opt) {
        var res = '<input type="' + opt.type + '" id="' + opt.id + '" ';
        if (isNotNull(opt.attr)) res += opt.attr;
        res += '/>';
        return res;
    }

    function renderButton(opt) {
        opt.attr = ifnul(opt.attr, (opt.dsb ? disbattr : ''));

        return '<button type="button" ' + opt.attr + ' class="awe-btn ' + opt.cls + '">' + (opt.cont || '') + '</button>';
    }

    function renderField(input, eo, id, o) {
        input.addClass('awe-val');

        if (eo.multi) {
            input.addClass('awe-array');
            input.attr('disabled', 'disabled');
        }

        var dispstr = eo.dispf ? eo.dispf(id) : '<div class="awe-display"></div>';

        var fclss = 'awe-' + eo.fieldcls + '-field awe-field';
        if (o.enb === false) fclss += ' awe-disabled';

        var field = $('<div class="' + fclss + '">' + dispstr + '</div>');
        input.after(field);
        field.prepend(input);
        return field;
    }

    function editor(rcfg) {
        return function (o) {
            var tag = {};
            var id = o.id;
            var input = getElm(o);
            var name = input.attr('name') || o.name || id;

            var field = renderField(input, rcfg, id, o);

            var mo = { tag: tag };
            rcfg.modf && rcfg.modf(mo);

            var cfg = {
                orig: o,
                type: rcfg.type,
                i: id,
                elm: o.elm,
                nm: name,
                url: o.url,
                df: o.dataFunc,
                l: isNull(o.load) ? true : o.load,
                data: toData(o.parents),
                pars: toPars(o.parameters),
                parf: o.parameterFunc,
                enb: o.enb,
                md: mo.mod,
                tag: mo.tag
            };

            setPar(cfg, o);

            rcfg.func(cfg);

            addDomDestrf(cfg, field, input);
        }
    }

    function getElm(o) {
        return o.elm && $(o.elm) || $('#' + o.id);
    }

    function setPar(cfg, o) {
        cfg.data = toData(o.parents);
        cfg.pars = toPars(o.parameters);
        cfg.parf = o.parameterFunc;
        return cfg;
    }

    function mapHeaderGroups(o) {
        var res = [];
        loop(o.headerGroups, function (n) {
            res.push({
                L: n.level,
                C: n.content,
                Cc: n.cssClass
            });
        });

        return res;
    }

    function mapNests(o) {
        var res = [];
        loop(o.nests, function (n) {
            res.push({
                C: n.name,
                F: n.setCont,
                U: n.url,
                L: n.loadOnce,
                T: ifnul(n.toggle, true),
                S: n.single
            });
        });

        return res;
    }

    function mapColumns(o) {
        var ucols = o.columns;
        var cols = [];

        function getMinWidth(c1) {
            if (isNotNull(c1.minWidth)) {
                return c1.width > 0 ? math.min(c1.width, c1.minWidth) : c1.minWidth;
            }

            return c1.width > 0 ? c1.width : 140;
        }

        loop(ucols, function (c) {
            var mod = c.mod || {};
            mod.inline = c.inline;
            mod.inlinef = c.inlinef;

            var col = {
                I: c.id,
                P: c.bind,
                H: c.header || c.bind || '',
                T: c.clientFormat,
                Ft: c.footerClientFormat,
                F: c.clientFormatFunc,
                G: c.groupable,
                S: c.sortable,
                W: c.width,
                Gd: c.group,
                So: c.sortRank,
                Gk: c.groupRank,
                Gr: ifnul(c.groupRemovable, true),
                Sort: c.sort || 0,
                O: c.order,
                Mw: getMinWidth(c),
                R: c.resizable,
                Re: c.reorderable,
                Hid: c.hidden,
                Cc: c.cssClass,
                Hcc: c.headerCssClass,
                tag: mod,
                Hg: c.headerGroupsIndx
            };

            cols.push(col);
        });

        return cols;
    }

    function ifnul(val, dval) {
        return isNull(val) ? dval : val;
    }

    function getPopupPrm(o, id, dflt) {
        dflt = dflt || {};
        var width = ifnul(dflt.w, 700);
        var height = ifnul(dflt.h, 330);
        var wws = 0;
        var hws = 0;

        if (isNotNull(o.width)) {
            width = o.width;
            wws = 1;
        }

        if (isNotNull(o.height)) {
            height = o.height;
            hws = 1;
        }

        var prms = {
            f: o.fullscreen,
            i: id,
            g: o.group,
            t: o.title,
            w: width,
            wws: wws,
            mw: o.maxWidth || 0,
            h: height,
            hws: hws,
            m: o.modal,
            pc: o.popupClass,
            dntr: o.loadOnce,
            top: o.top,
            cl: o.close
        };

        return prms;
    }

    function initPopup(o, opt) {
        var id = o.id;
        var tag = {};

        tag.Dd = o.dropdown;
        tag.Occ = o.outClickClose;
        tag.Sh = o.showHeader;
        tag.Tg = o.toggle;
        tag.Inline = o.inline;

        var cfg = {
            orig: o,
            i: id,
            type: opt.type,
            u: o.url,
            setCont: o.setCont,
            dataFunc: o.dataFunc,
            postFunc: o.postFunc,
            c: o.content,
            data: toData(o.parents),
            pars: toPars(o.parameters),
            parf: o.parameterFunc,
            b: toBtns(o.btns),
            ol: o.onLoad,
            tags: '',
            lo: o.loadOnce,
            p: getPopupPrm(o, id),
            tag: tag
        };

        opt.modCfg && opt.modCfg(cfg);

        awe.ip(cfg);
    }

    function initLookup(o, multi) {
        var type = 'lookup';
        var mod = nul;
        if (multi) type = 'multi' + type;

        var tag = {};
        var id = o.id;
        var input = getElm(o);
        var name = input.attr('name') || o.name || id;
        var enabled = o.enb !== false;
        var clearBtnStr = '';
        var openBtnStr = renderButton({ cls: 'awe-openbtn', dsb: !enabled, cont: '...' });

        if (o.clearButton) {
            clearBtnStr = renderButton({ cls: 'awe-clearbtn', dsb: !enabled, cont: '<span class="awe-icon awe-icon-x"></span>' });
        }

        input.data('name', name);

        input.addClass('awe-multilookup');

        var field = renderField(input,
            {
                multi: multi,
                fieldcls: type,
                dispf: function () {
                    if (multi) {
                        return '<div style="display:none;"></div><ul class="awe-display"><li>&nbsp;</li></ul>' + openBtnStr + clearBtnStr;
                    }

                    return '<div class="awe-display"><div class="awe-caption">&nbsp;</div></div>' + openBtnStr + clearBtnStr;
                }
            }, id, o);

        var gmod = o.lookupGrid;
        var popUrl = o.popupUrl;
        var setCont = null;
        if (isNotNull(gmod)) {
            mod = awem.lookupGrid;
            popUrl = gmod.url;
            setCont = gmod.setCont;
        }

        gmod = o.multilookupGrid;
        if (isNotNull(gmod)) {
            mod = awem.multilookupGrid;
            popUrl = gmod.url;
            setCont = gmod.setCont;
        }

        var w = ifnul(o.width, 0);
        var h = ifnul(o.heigth, multi ? 500 : 400);

        o.loadOnce = true;

        var cfg = {
            type: type,
            p: getPopupPrm(o, id + '-awepw', { w: w, h: h }),
            i: id,
            nm: name,
            getMultipleUrl: o.getUrl,
            getUrl: o.getUrl,
            searchUrl: o.searchUrl,
            selectedUrl: o.selectedUrl,
            dg: ifnul(o.dragAndDrop, true),
            ok: dict().Ok,
            cancel: dict().Cancel,
            st: dict().Search,
            stp: dict().Search,
            mt: dict().More,
            sf: o.sformUrl,
            pu: popUrl,
            sc: ifnul(o.searchOnChange, 1),
            hi: o.highlightChange,
            enb: enabled,
            md: mod,
            tag: tag,
            dataFunc: o.dataFunc,
            setCont: setCont
        };

        setPar(cfg, o);

        if (multi) {
            awe.multilookup(cfg);
        } else {
             awe.lookup(cfg);
        }

        addDomDestrf(cfg, field, input);
    }

    function createTag(name, attr) {
        var res = '<' + name;

        for (var nm in attr) {
            var val = attr[nm];
            if (isNotNull(val) && val !== '') {
                res += ' ' + nm + '="' + val + '"';
            }
        }

        res += '/>';

        return res;
    }

    return {
        btn: renderButton,
        flash: awe.flash,
        init: function () {
            if (awedict) {
                aweui.dict = awem.clientDict = awedict;
            }
            awem.aweui = aweui;
        },
        getErrors: function (errs) {
            return { _errs: errs };
        },
        inlRes: function (o) {
            return { Item: o };
        },
        listRes: function (o) {
            return {
                d: {
                    it: o.items,
                    m: o.more,
                    p: o.pivot,
                    c: o.content
                }
            };
        },
        selectionType: function () {
            return {
                single: 1,
                multiple: 2,
                multicheck: 3
            };
        }(),
        grid: function (o) {
            o.origf = aweui.grid;
            var orig = o;
            var contentStr =
                '<table class="awe-table"><colgroup></colgroup><tbody class="awe-tbody awe-itc"></tbody></table>';

            var mods = [];
            var props = {};
            var id = o.id;
            var cont = getElm(o);
            cont.addClass('awe-grid');
            if (o.cssClass) cont.addClass(o.cssClass);

            var selectionType = 0;
            var filterSelector = '';

            var selectable = o.selectable;

            if (selectable) {
                selectionType = ifnul(selectable.type, aweui.selectionType.multicheck);
                filterSelector = ifnul(selectable.filterSelector, '');
            }

            var defl = { sortable: true, resizable: true, groupable: true };

            o = $.extend(defl, o);

            var om = o.mod;
            if (om) {
                if (om.pageSize) mods.push(awem.gridPageSize);
                if (om.columnsSelector) mods.push(awem.gridColSel);
                if (om.pageInfo) mods.push(awem.gridPageInfo);
                if (om.infiniteScroll) mods.push(awem.gridInfScroll);
                if (om.keyNav) mods.push(awem.gridKeyNav);

                if (om.autoMiniPager) {
                    mods.push(awem.gridAutoMiniPager);
                }
                else if (om.miniPager) {
                    mods.push(awem.gridMiniPager);
                }

                var inl = om.inlineEdit;
                if (inl) {
                    mods.push(awem.gridInlineEdit(
                        inl.createUrl,
                        inl.editUrl,
                        inl.oneRow,
                        inl.reloadOnSave,
                        inl.rowClickEdit,
                        inl.dataFunc,
                        inl.initRow));
                }

                var ldng = om.loading;
                if (ldng) {
                    mods.push(awem.gldng(ldng.ldngDisb, ldng.noEmpMsg));
                    props["empMsg"] = ldng.emptyMessage || dict().NoRecFound;
                }

                var mvrows = om.movableRows;
                if (mvrows) {
                    mvrows.G = mvrows.dropOn;
                    mods.push(awem.gridMovRows(mvrows));
                }

                if (om.customRender) {
                    var cropt = { mdf: om.customRender };
                    contentStr = '<div class="awe-itc"></div>';
                    mods.push(awem.gridCstRen(cropt));
                }

                if (om.custom) {
                    mods = mods.concat(om.custom);
                }
            }

            var autohide = false;
            var isGroupColPres = false;
            loop(o.columns,
                function (col) {
                    var cmod = col.mod;
                    if (om && om.columnsAutohide) {
                        autohide = true;
                        if (isNull(cmod)) {
                            cmod = col.mod = {};
                        }

                        if (isNull(cmod.autohide)) {
                            cmod.autohide = true;
                        }

                        if (cmod.nohide) {
                            cmod.autohide = false;
                        }
                    }
                    else if (cmod && cmod.autohide) {
                        autohide = true;
                    }

                    col.groupable = ifnul(col.groupable, o.groupable);
                    col.sortable = ifnul(col.sortable, o.sortable);
                    col.resizable = ifnul(col.resizable, o.resizable);
                    col.reorderable = ifnul(col.reorderable, o.reorderable);

                    if (!col.bind) {
                        col.sortable = col.groupable = false;
                    }

                    if (col.groupable) isGroupColPres = true;
                });

            if (autohide) {
                mods.push(awem.gridColAutohide);
            }

            var groupBar = ifnul(o.showGroupBar, isGroupColPres) ? '<div class="awe-groupbar"></div>' : '';

            var footer = ifnul(o.showFooter, true)
                ? '<div class="awe-footer"><div class="awe-relbox"><button type="button" class="awe-btn awe-reload"><span class="awe-reload-ico"></span></button>' +
                '<span class="awe-gblc"></span></div><div class="awe-pager"></div></div>'
                : '';

            var thead = ifnul(o.showHeader, true)
                ? '<div class="awe-header"><div class="awe-hcon"><div class="awe-colw"><table><colgroup></colgroup><tbody class="awe-hrow"></tbody></table></div></div></div>'
                : '';

            var fzContent = '<div class="awe-gfc"><div class="awe-tablc"><div class="awe-tablw">' + contentStr + '</div></div></div>';

            var mainContent =
                '<div class="awe-content awe-tablc"><div class="awe-tablw">' + contentStr + '</div></div>';

            var gridContent = '<div class="awe-mcontent">' + fzContent + mainContent + '</div>';

            var reh =
                '<div class="awe-reh" style="display:none;"><span class="awe-spindown-ico"></span><span class="awe-spinup-ico"></span></div>';

            var scont = groupBar + thead + gridContent + footer + reh;

            cont.html(scont);

            // set header group indexes
            loop(o.columns, function (col) {
                var groupix = [];
                var haslvl0 = false;
                loop(col.headerGroups, function (hgid) {
                    // get index
                    loop(o.headerGroups,
                        function (hg, i) {
                            if (hg.id === hgid) {
                                groupix.push(i);
                                if (hg.level === 0) haslvl0 = true;
                            }
                        });
                });

                if (groupix.length && !haslvl0) {
                    awe.lerr('columns with headerGroups must have at least one group with level = 0 grid:' + id + ' col:' + col.bind);
                }

                col.headerGroupsIndx = groupix;
            });

            var cfg = {
                orig: orig,
                i: id,
                url: o.url,
                df: o.dataFunc,
                columns: mapColumns(o),
                nsts: mapNests(o),
                hg: mapHeaderGroups(o),
                s: o.singleColumnSort,
                sh: ifnul(o.showHeader, true),
                sgc: ifnul(o.showGroupedColumn, true),
                gbt: dict().GridGroupBar,
                h: o.height,
                mh: o.minHeight,
                pk: o.persistenceKey,
                prs: o.persistence,
                cps: o.columnsPersistence,
                cohc: ifnul(o.collapseOnHeaderClick, true),
                p1: o.page1OnSort,
                rcf: o.rowClassClientFormat,
                lpc: ifnul(o.loadOnParentChange, true),
                l: ifnul(o.load, true),
                cw: o.columnWidth || 140,
                st: selectionType,
                fs: filterSelector,
                ps: o.pageSize || 10,
                sc: o.sendColumns,
                enc: ifnul(o.encode, true),
                md: mods,
                props: props
            };

            setPar(cfg, o);

            awe.grid(cfg);

            awe.addDestr(cfg,
                function () {
                    awe.destroyCont(cont);
                    cont.empty().removeClass('awe-grid');
                },
                'dom');
        },
        list: function (o) {
            o.origf = aweui.grid;
            var id = o.id;
            var cont = getElm(o);
            cont.addClass('awe-ajaxlist awe-srl');

            awe.ajaxList(setPar({
                orig: o,
                i: id,
                type: 'ajaxList',
                searchUrl: o.url,
                mt: o.moreText || dict().More,
                lpc: o.loadOnParentChange
            }, o));
        },
        readonly: function (o) {
            var input = getElm(o);
            input.after(input.val());
        },
        txt: function (o) {
            o.origf = aweui.txt;
            var id = o.id;
            var input = getElm(o);
            var enabled = o.enb !== false;

            var numeric = o.numeric;
            var isNumeric = !!numeric;
            if (numeric === true) numeric = {};

            var showSpinners = false;

            if (numeric) {
                if (isNull(numeric.min) && !numeric.allowNegative) {
                    numeric.min = 0;
                }

                showSpinners = ifnul(numeric.showSpinners, true);
            }

            input.addClass('awe-txt awe-val');

            var editorAttr = {
                type: 'text',
                size: 1,
                id: id + '-awed',
                placeholder: o.placeholder,
                maxlength: o.maxlength,
                "class": 'awe-display awe-txt' + (showSpinners ? ' awe-hasSpinners' : ''),
                disabled: enabled ? nul : 'disabled',
                autocomplete: isNumeric ? 'off' : nul,
                readonly: o.readonlyInput ? 'readonly' : nul
            };

            var spinners = '';
            function spinbtn(dir) {
                return renderButton({
                    cont: '<span class="awe-spin' + dir + '-ico"></span>',
                    cls: 'awe-spinbtn awe-spin' + dir,
                    attr: 'tabindex="-1" ' + (enabled ? '' : disbattr)
                });
            }

            if (showSpinners) {
                spinners = '<div class="awe-spincont">' +
                    spinbtn('up') +
                    spinbtn('down') +
                    '</div>';
            }

            var dispInp = createTag('input', editorAttr);

            var field = $('<div class="awe-txt-field awe-field">' + dispInp + spinners + '</div>');
            input.after(field);
            field.prepend(input);

            var cfg = {
                orig: o,
                i: id,
                num: isNumeric,
                ss: showSpinners,
                sep: aweui.decimalSep,
                enb: enabled,
                ff: o.formatFunc
            };

            if (isNumeric) {
                cfg.stp = ifnul(numeric.step, 1);
                cfg.dec = numeric.decimals;
                cfg.max = numeric.max;
                cfg.min = numeric.min;
            }

            awe.txt(cfg);

            addDomDestrf(cfg, field, input);
        },
        autocomplete: function (o) {
            o.origf = aweui.atuocomplete;
            var id = o.id;
            var input = getElm(o);
            var enabled = o.enb !== false;
            var placeh = o.placeholder;

            input.addClass('awe-txt awe-autocomplete awe-val');
            if (!enabled) input.attr('disabled', 'disabled');
            if (placeh) input.attr('placeholder', placeh);

            awe.autocomplete(setPar({
                orig: o,
                i: id,
                u: o.url,
                df: o.dataFunc,
                itemFunc: o.itemFunc,
                c: o.cache,
                ck: o.cacheKey,
                ml: o.minLength,
                dl: o.delay,
                af: o.autofocus,
                enb: enabled,
                num: o.numeric
            }, o));

        },
        datepicker: function (o) {
            o.origf = aweui.datepicker;
            var id = o.id;
            var inline = o.inline;
            var input = getElm(o);
            var enabled = o.enb !== false;
            var disbStr = enabled ? '' : disbattr;
            var clearbtn = o.clearButton ? renderButton({ attr: disbStr, cls: 'awe-clearbtn', cont: '<span class="awe-icon awe-icon-x"></span>' }) : '';
            var openbtn = renderButton({ cls: 'awe-dpbtn', attr: disbStr, cont: '<span class="awe-icon awe-icon-datepicker"></span>' });


            input.addClass('awe-val awe-txt awe-display');
            input.attr("size", 1);

            if (!enabled) input.attr('disabled', 'disabled');
            var midstr = openbtn + clearbtn;

            var clss = '';

            if (inline) {
                midstr = "<div class='awe-ilc'></div>";
                clss = 'awe-inl';
            }

            var field = $('<div class="awe-datepicker-field awe-field ' + clss + '">' + midstr + '</div>');
            input.after(field);
            field.prepend(input);

            o.p = { ilc: inline, changeMonth: true, changeYear: true };
            $.extend(o.p, o);

            o.i = id;
            o.elm = input;
            o.enb = enabled;

            o.orig = o;

            awe.dtp(o);

            addDomDestrf(o, field, input);
        },
        chk: function (o) {
            o.origf = aweui.chk;
            var mod = null;
            var id = o.id;
            var input = getElm(o);
            var simpChkOpt = { id: id + '-awed', type: 'checkbox' };
            var enabled = o.enb !== false;

            simpChkOpt.attr = !enabled ? disbattr : '';

            if (o.ochk) {
                mod = awem.ochk;

                simpChkOpt.attr += ' style="display:none;"';

                o.renderDisp = function () {
                    var tabAttr = 'tabindex="0"';
                    var chkedcls = input.val() && input.val() === 'true' ? 'o-chked' : '';

                    if (!enabled) {
                        tabAttr = '';
                    }

                    var str = '<div class="o-chk ' + chkedcls + '"><div class="o-chkc"><div ' + tabAttr + ' class="o-chkico"></div></div></div>'
                        + renderInput(simpChkOpt);
                    return str;
                };
            }
            else if (o.otoggl) {
                mod = awem.otggl;
                var tcfg = o.otoggl;
                simpChkOpt.attr += ' style="display:none;"';

                o.renderDisp = function () {
                    var tabAttr = 'tabindex="0"';
                    var chkedcls = input.val() && input.val() === 'true' ? 'o-chked' : '';
                    var yes = tcfg.yes || dict().Yes, no = tcfg.no || dict().No;

                    if (!enabled) {
                        tabAttr = '';
                    }



                    var style = ' style="width:' + tcfg.width + ';"';

                    var str =
                        '<div ' + tabAttr + style + ' class="o-tg ' + chkedcls + '">' +
                        '<div class="o-tgg">' +
                        '<div class="o-tgon"><span class="o-ccon">' + yes + '</span></div>' +
                        '<div class="o-tgoff"><span class="o-ccon">' + no + '</span></div>' +
                        '<div class="o-tgh awe-btn o-btn"></div>' +
                        '</div>' +
                        '</div>' +
                        renderInput(simpChkOpt);
                    return str;
                };
            }

            var disp = isNotNull(o.renderDisp) ?
                o.renderDisp(o) :
                renderInput(simpChkOpt);

            input.addClass('awe-val awe-chk');

            var fclss = 'awe-chk-field awe-field';
            if (!enabled) {
                fclss += ' awe-disabled';
            }

            var field = $('<div class="' + fclss + '"><div class="awe-display">' + disp + '</div></div>');
            input.after(field);
            field.prepend(input);

            var cfg = {
                orig: o,
                i: o.id,
                enb: enabled,
                efv: o.emptyFalseVal,
                md: mod
            };

            awe.chk(cfg);

            addDomDestrf(cfg, field, input);
        },
        checkboxList: function (o) {
            o.origf = aweui.checkboxList;
            var cfg = {
                type: 'checkboxList',
                func: awe.checkboxList,
                fieldcls: 'ajaxcheckboxlist',
                multi: true,
                modf: function (mo) {
                    if (o.ochk) {
                        mo.mod = awem.ochkl;
                    }

                    if (o.multiselect) {
                        mo.mod = awem.multiselect;
                        mo.tag.reorderable = true;
                        mo.tag = $.extend(mo.tag, o.multiselect);
                    }
                }
            };

            return editor(cfg)(o);
        },
        radioList: function (o) {
            o.origf = aweui.radioList;
            var cfg = {
                type: 'radioList',
                func: awe.radioList,
                fieldcls: 'ajaxradiolist',
                modf: function (mo) {
                    var tag = null;

                    if (o.ochk) {
                        mo.mod = awem.ochkl;
                    }
                    else if (o.odropdown) {
                        mo.mod = awem.odropdown;
                        tag = o.odropdown;
                    }
                    else if (o.combobox) {
                        mo.mod = awem.combobox;
                        tag = o.combobox;
                    }
                    else if (o.buttongroup) {
                        mo.mod = awem.btnGroup;
                        tag = o.buttongroup;
                    }
                    else if (o.menuDropdown) {
                        mo.mod = awem.menuDropdown;
                        tag = o.menuDropdown;
                    }

                    if (tag) {
                        var autos = tag.autoSearch;

                        if (isNotNull(autos)) {
                            if (autos === false) {
                                autos = -1;
                            } else if (autos === true) {
                                autos = 0;
                            }

                            tag.asmi = autos;
                        }

                        mo.tag = tag;
                    }
                }
            };

            return editor(cfg)(o);
        },
        add: function (o) {
            var cfg = {
                type: 'add',
                func: awe.add,
                fieldcls: 'ajaxdropdown',
                dispf: function (id) { return '<select id="' + id + '-awed" class="awe-display">'; }
            };

            return editor(cfg)(o);
        },
        initPopupForm: function (o) {
            o.origf = aweui.initPopupForm;
            initPopup(o,
                {
                    type: 'pf',
                    modCfg: function (cfg) {
                        $.extend(cfg,
                            {
                                rs: o.refreshOnSuccess,
                                ot: ifnul(o.okText, dict().Ok),
                                ct: ifnul(o.cancelText, dict().Cancel),
                                sf: o.success,
                                cs: ifnul(o.closeOnSuccess, true),
                                udb: ifnul(o.useDefaultButtons, true),
                                ufd: o.useFormData
                            });
                    }
                });
        },
        initPopup: function (o) {
            o.origf = aweui.initPopup;
            initPopup(o, { type: 'op' });
        },
        open: awe.open,
        lookup: function (o) {
            initLookup(o);
        },
        multilookup: function (o) {
            initLookup(o, true);
        },
        rebuildAll: function () {
            function rebuild(o) {
                if (o && o.orig) {
                    awe.destroy(o);
                    o.orig.origf(o.orig);
                }
            }

            // popups
            for (var key in awe.storage) {
                var so = awe.storage[key];
                rebuild(so);
            };

            $('body').find('.awe-grid,.awe-val').each(function () {
                rebuild($(this).data('o'));
            });
        },
        decimalSep: '.',
        version: '6.3.19'
    };
}(jQuery);

//export { aweui };

//import { awef } from '../aweui/all.js';

var aweq = function () {
    var loop = awef.loop, isNotNull = awef.isNotNull, isNull = awef.isNull, isNullOrEmp = awef.isNullOrEmp;
    function toKeyContArr(arr, keyp, conp) {
        var res = [];

        loop(arr, function (o) {
            res.push(newKeyCon(o[keyp], o[conp]));
        });

        return res;
    }

    function select(list, func) {
        var res = [];
        loop(list, function (el) {
            res.push(func(el));
        });

        return res;
    }

    function contains(str, src) {
        return isNullOrEmp(src) || str.toLowerCase().indexOf(src) > -1;
    }

    function equalsn(v1, v2) {
        return isNullOrEmp(v2) || !isNullOrEmp(v1) && v1.toString() === v2.toString();
    }

    function arrContains(list, val) {
        var res = false;
        val = val.toString();
        loop(list, function(it) {
            if (it.toString() === val) {
                res = true;
                return false;
            }
        });

        return res;
    }

    function where(list, func) {
        var res = [];
        loop(list,
            function (el) {
                if (func(el)) {
                    res.push(el);
                }
            });

        return res;
    }

    function first(list, func) {
        return where(list, func)[0];
    }
    
    function getById(list, id) {
        id = id.toString();
        return where(list, function (o) { return o.id.toString() === id; })[0];
    }

    // id: string
    function removeById(list, id) {
        var index;

        loop(list, function (o, ix) {
            if (o.id.toString() === id) {
                index = ix;
            }
        });

        if (isNotNull(index)) {
            list.splice(index, 1);
        }
    }
    
    function getByIds(list, ids) {
        if (isNotNull(ids) && !(ids instanceof Array)) {
            ids = [ids];
        }

        var res = [];
        loop(ids, function (id) {
            var fit = first(list,
                function (it) {
                    return it.id.toString() === id.toString();
                });

            if (isNotNull(fit)) {
                res.push(fit);
            }
        });

        return res;
    }

    function takePage(list, page, pageSize) {
        var skipsize = (page - 1) * pageSize;
        return list.slice(skipsize, skipsize + pageSize);
    }

    function newKeyCon(key, con) {
        return { k: key, c: con };
    }

    return {
        toKeyContArr: toKeyContArr,
        newKeyCon: newKeyCon,
        takePage: takePage,
        first: first,
        where: where,
        contains: contains,
        select: select,
        getById: getById,
        getByIds: getByIds,
        removeById: removeById,
        arrContains: arrContains,
        equalsn: equalsn
    };
}();

//export { aweq };
//import { awef, awem, utils, aweui } from '../aweui/all.js';

var formBuilder = function (opt) {
    var model = opt.model;
    var str = '';
    var funcs = [];
    var prefix = '';

    if (opt.sp) {
        var prm = utils.getParams(opt.sp);
        if (prm.__aweconid) {
            prefix = prm.__aweconid;
        }
    }

    return {
        id: function (idstr) {
            return prefix + idstr;
        },
        str: function (s) {
            str += s;
        },
        add: function (o) {
            var val = model[o.prop];
            var name = o.prop;
            var label = o.label || name;
            var id = o.id || prefix + name;
            var inpcls = o.inpcls || '';
            var inptype = 'hidden';

            var finput = function () {
                return '<input type="' + inptype + '" id="' + id + '" name="' + name + '" value="' + val + '"/>';
            };

            if (o.func === aweui.datepicker) {
                inptype = 'text';
            }

            if (awef.isNotNull(val)) {
                if (val instanceof Date) {
                    val = awem.formatDate(awem.dateFormat, val);
                } else if (val instanceof Array) {
                    val = JSON.stringify(val);
                }
            } else {
                val = '';
            }

            if (o.hidden) {
                inptype = 'hidden';
                str += finput();
            } else {
                str += '<div class="efield">';
                str += '<div class="elabel"><label>' + label + '</label></div>\n';
                str += '<div class="einput ' + inpcls + '">' +
                    finput() +
                    '<span vld-for="' + name + '"></span></div>';
                str += '</div>';
            }

            if (o.func) {
                var opt = o.opt || {};
                opt.id = id;
                funcs.push({ f: o.func, opt: opt });
            }
        },
        applyToPopup: function (o) {
            o.scon.html('<form>' + str + '</form>');
            awef.loop(funcs,
                function (fo) {
                    fo.f(fo.opt);
                });
        }
    };
};

//export { formBuilder };