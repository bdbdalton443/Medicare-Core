#pragma checksum "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cc9385639275d9a3c9e12fcc31fca773e62e8891"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_GridNoRecordsFoundCustomLoadingDemo_Index), @"mvc.1.0.view", @"/Views/GridNoRecordsFoundCustomLoadingDemo/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using Omu.AwesomeMvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using Omu.Awem.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Utils;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Helpers.Awesome;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Helpers;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cc9385639275d9a3c9e12fcc31fca773e62e8891", @"/Views/GridNoRecordsFoundCustomLoadingDemo/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4be622e01f8f56f0dd36faab0a36e6216511e344", @"/Views/_ViewImports.cshtml")]
    public class Views_GridNoRecordsFoundCustomLoadingDemo_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml"
  
    ViewBag.Title = "Grid Custom Loading, display no records found";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<h1>Grid with custom loading animation</h1>
<div class=""expl"">
    Using grid mods to add custom loading animation, try to change page or filter the grid to get the loading animation, there's a Task.Delay used on the server side.<br />
    Search for something inexistent to get the ""no records found""  message.
</div>
<br />
");
            WriteLiteral("<div style=\"padding-bottom: .5em\">\r\n    <div class=\"awe-il\">");
#nullable restore
#line 12 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml"
                   Write(Html.Awe().TextBox("txtperson").Placeholder("search for person ...").CssClass("searchtxt"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n    <div class=\"awe-il\">");
#nullable restore
#line 13 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml"
                   Write(Html.Awe().TextBox("txtfood").Placeholder("search for food ...").CssClass("searchtxt"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n</div>\r\n");
#nullable restore
#line 15 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml"
Write(Html.Awe().Grid("CustomLoadingGrid")
        .Mod(o => o.Loading().ColumnsSelector())
        .Columns(
            new Column { Bind = "Id", Width = 75, Groupable = false, Resizable = false },
            new Column { Bind = "Person" },
            new Column { Bind = "Food" },
            new Column { Bind = "Location" },
            new Column { Bind = "Date", Width = 120 },
            new Column { Bind = "Country.Name", ClientFormat = ".(CountryName)", Header = "Country" },
            new Column { Bind = "Chef.FirstName,Chef.LastName", ClientFormat = ".(ChefName)", Header = "Chef" })
        .Url(Url.Action("GridGetItems"))
        .Height(300)
        .Resizable()
        .Reorderable()
        .Parent("txtperson", "person")
        .Parent("txtfood", "food"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral(@"<br/>
<br/>
<div class=""tabs"">
    <div data-caption=""description"" class=""expl"">
        Setting custom loading animation, css and html for the loading animation grabbed from here: <a href=""http://tobiasahlin.com/spinkit/"">http://tobiasahlin.com/spinkit/</a>.
        You can use a different loading animation by editing the html in awem.js (gridLoading func) 
        and replacing css from AwesomeMvc.css or you can add another function that calls awem.gridLoading as done for the next grid.
    </div>
    <div data-caption=""view"">
        ");
#nullable restore
#line 42 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml"
   Write(Html.Source("GridNoRecordsFoundCustomLoadingDemo/Index.cshtml"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n    <div data-caption=\"controller\">\r\n        ");
#nullable restore
#line 45 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml"
   Write(Html.Csource("Demos/Grid/GridNoRecordsFoundCustomLoadingDemoController.cs"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n</div>\r\n\r\n<br/>\r\n<br/>\r\n\r\n");
#nullable restore
#line 53 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml"
Write(Html.Awe().Grid("CustomLoadingGrid2")
        .Mod(o => o.Custom("gridLoading1").ColumnsSelector())
        .Height(300)
        .Resizable()
        .Reorderable()
        .Columns(
            new Column { Bind = "Id", Width = 75, Groupable = false, Resizable = false },
            new Column { Bind = "Person" },
            new Column { Bind = "Food" },
            new Column { Bind = "Location" },
            new Column { Bind = "Date", Width = 120 },
            new Column { Bind = "Country.Name", ClientFormat = ".(CountryName)", Header = "Country" },
            new Column { Bind = "Chef.FirstName,Chef.LastName", ClientFormat = ".(ChefName)", Header = "Chef" })
        .Url(Url.Action("GridGetItems")));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script>
    function gridLoading1(o) {
        return awem.gridLoading(o, { lhtm: '<div class=""myspinner""><div class=""mybounce1""></div><div class=""mybounce2""></div><div class=""mybounce3""></div></div>', ctm:15 });
    }
    // css for this grid loading (found in site.css file) has been prefixed with 'my' so it would not interfere with the css from the previous example 
</script>
");
            WriteLiteral("<div class=\"code\">\r\n    ");
#nullable restore
#line 76 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridNoRecordsFoundCustomLoadingDemo\Index.cshtml"
Write(Html.Source("GridNoRecordsFoundCustomLoadingDemo/Index.cshtml", 2));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
