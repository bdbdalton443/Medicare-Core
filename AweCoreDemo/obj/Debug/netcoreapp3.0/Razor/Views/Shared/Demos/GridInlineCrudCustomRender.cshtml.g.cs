#pragma checksum "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "39a566aaf6b12f486173ca21653317cd7230a906"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Demos_GridInlineCrudCustomRender), @"mvc.1.0.view", @"/Views/Shared/Demos/GridInlineCrudCustomRender.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using Omu.AwesomeMvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using Omu.Awem.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Utils;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Helpers.Awesome;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
using AweCoreDemo.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"39a566aaf6b12f486173ca21653317cd7230a906", @"/Views/Shared/Demos/GridInlineCrudCustomRender.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4be622e01f8f56f0dd36faab0a36e6216511e344", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Demos_GridInlineCrudCustomRender : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<h2 data-u=\"");
#nullable restore
#line 2 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
       Write(Url.Action("Index","GridCustomRender"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\">Grid Custom Render with Inline Editing</h2>\r\n");
#nullable restore
#line 4 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
  
    var gridId = "InlineCustomRender";
    var initObj = new
    {
        Name = DemoUtils.RndName(),
        Date = DateTime.Now.ToShortDateString(),
        ChefId = Db.Chefs.First().Id,
        MealsIds = Db.Meals.Take(2).Select(o => o.Id).ToArray()
    };


#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"bar\">\r\n    <div style=\"float: right;\">\r\n        ");
#nullable restore
#line 17 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
   Write(Html.Awe().TextBox("txtSearchInlCr").Placeholder("search...").CssClass("searchtxt"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n    <button type=\"button\"");
            BeginWriteAttribute("onclick", " onclick=\"", 597, "\"", 647, 3);
            WriteAttributeValue("", 607, "$(\'#", 607, 4, true);
#nullable restore
#line 19 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
WriteAttributeValue("", 611, gridId, 611, 7, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 618, "\').data(\'api\').inlineCreate()", 618, 29, true);
            EndWriteAttribute();
            WriteLiteral(" class=\"awe-btn\">Create</button>\r\n\r\n    ");
#nullable restore
#line 21 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
Write(Html.InlineCreateButtonForGrid(gridId, initObj, "Create with predefined values"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n");
#nullable restore
#line 24 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
Write(Html.InitDeletePopupForGrid(gridId, "GridInlineEditDemo"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 26 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
Write(Html.Awe().Grid(gridId)
    .Mod(o => o.PageInfo()
          .InlineEdit(Url.Action("Create", "GridInlineEditDemo"), Url.Action("Edit", "GridInlineEditDemo"))
          .CustomRender("inlDinner"))
      .Url(Url.Action("GridGetItems", "GridInlineEditDemo"))
      .Parent("txtSearchInlCr", "search")
      .Height(620)
      .ColumnWidth(100)
      .Attr("data-syncg", "dinner") // crud sync using signalr in site.js
      .Columns(
          new Column { Bind = "Id", Width = 75, Hidden = true }
              .Mod(o => o.InlineId()),

          new Column { Bind = "Name" }
              .Mod(o => o.Inline(Html.Awe().TextBox("Name"))),

          new Column { Bind = "Date" }
              .Mod(o => o.Inline(Html.Awe().DatePicker("Date").ReadonlyInput().ChangeYear().ChangeMonth())),

          new Column { Id = "chef", Bind = "Chef.FirstName,Chef.LastName", ClientFormat = ".(ChefName)", Header = "Chef" }
              .Mod(o => o.Inline(Html.Awe().Lookup("Chef").Controller("ChefLookup"), "ChefId")),

          new Column { Id = "meals", ClientFormat = ".(Meals)", Header = "Meals" }
              .Mod(o => o.Inline(Html.Awe().AjaxCheckboxList("Meals").CssClass("cedMulti").Multiselect().DataFunc("utils.getItems(meals)"), "MealsIds")),

          new Column { Bind = "BonusMeal.Name", ClientFormat = ".(BonusMeal)", Header = "Bonus Meal", Width = 140 }
              .Mod(o => o.Inline(Html.Awe().AjaxRadioList("BonusMealId").Odropdown().DataFunc("utils.getItems(meals)"), "BonusMealId")),

          new Column { Bind = "Organic", ClientFormat = ".(DispOrganic)" }
              .Mod(o => o.Inline(Html.Awe().CheckBox("Organic").Otoggl())),

          new Column { Id = "edit", ClientFormat = GridUtils.InlineEditFormat(), Hidden = true },
          new Column { Id = "del", ClientFormat = Html.InlineDeleteFormatForGrid(gridId), Hidden = true }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script>
    function inlDinner(o) {
        var api = o.api;

        // node (group) content add wrap for padding
        api.ncon = function(p) {
            if (!p.lvl) return p.ren();
            return '<div style=""padding-left:' + p.lvl + 'em;"" >' + p.ren() + '</div>';
        };

        // group header content
        api.ghead = function(g) {
            return api.ceb() + g.c;
        };

        // render item (row)
        api.itmf = function(opt) {
            var content = '';

            // content already set (group header)
            if (opt.con) {
                content = opt.con;
            } else {
                var colFuncs = utils.colf(o.columns);
                var colByBind = colFuncs.fcol; // find column by Bind
                var colById = colFuncs.fcoli; // find column by Id

                // get column value
                function val(col, cls) {
                    return utils.gcvw(api, col, opt, cls);
                }

            ");
            WriteLiteral(@"    function field(col, nolabel) {
                    var label = '';
                    if (col.H && !nolabel) {
                        label = '<div class=""elabel"">' + col.H + ':</div> ';
                    }
                    return '<div class=""efield"">' + label + '<div class=""einput"">' + val(col) + '</div></div>';
                }

                function hid(col) {
                    return '<div style=""display:none;"">' + val(col) + '</div>';
                }

                content += hid(colByBind('Id')) +
                    '<div class=""earea"">' +
                    field(colByBind('Name')) +
                    field(colByBind('Date')) +
                    field(colById('chef')) +
                    '</div><div class=""earea"">' +
                    field(colByBind('BonusMeal.Name')) +
                    field(colByBind('Organic')) +
                    '</div>' +
                    field(colById('meals')) +
                    '<div class=""inlbtns"">' +
       ");
            WriteLiteral(@"             val(colById('edit'), 'awe-il') +
                    val(colById('del'), 'awe-il') +
                    '</div>';
            }

            // has collapse button
            if (opt.ceb) {
                opt.clss += ' cardhead';
                opt.style += 'margin-left:' + opt.ind + 'em;';
            } else {
                opt.clss += ' edcard';
            }

            var attr = opt.attr;
            attr += ' class=""' + opt.clss + '""';
            opt.style && (attr += ' style=""' + opt.style + '""');

            return '<div ' + attr + '>' + content + '</div>';
        };

        // ignore columns width for grid content
        o.syncon = 0;

        // no alt rows
        o.alt = 0;
    }
</script>
");
            WriteLiteral("<br />\r\n<div class=\"tabs\">\r\n    <div data-caption=\"description\" class=\"expl\">\r\n        Grid with custom rendering and inline editing mod applied. Edit on row click can also be used.\r\n    </div>\r\n    <div data-caption=\"view\">");
#nullable restore
#line 147 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\Shared\Demos\GridInlineCrudCustomRender.cshtml"
                        Write(Html.Source("Shared/Demos/GridInlineCrudCustomRender.cshtml"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
