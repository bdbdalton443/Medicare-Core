#pragma checksum "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "624491e4e479ffec9756c6db333b18a2de4e2e3e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_GridSpreadsheetDemo_Index), @"mvc.1.0.view", @"/Views/GridSpreadsheetDemo/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using Omu.AwesomeMvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using Omu.Awem.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Utils;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Helpers.Awesome;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\_ViewImports.cshtml"
using AweCoreDemo.Helpers;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"624491e4e479ffec9756c6db333b18a2de4e2e3e", @"/Views/GridSpreadsheetDemo/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4be622e01f8f56f0dd36faab0a36e6216511e344", @"/Views/_ViewImports.cshtml")]
    public class Views_GridSpreadsheetDemo_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
  
    ViewBag.Title = "Grid Spreadsheet Demo";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Grid Spreadsheet Demo</h1>
The grid is used as an excel/google docs spreadsheet. ClientFormatFunc is set for each column to render a textbox for each cell, and some css to hide the borders of the textbox and make the cell look like one.
    Once the js change event is triggered on the textbox an ajax request is sent to the server to save the value. The Id is not shown and is not editable, but it's used to identify the records when editing them.
<br />
<br />
Try and edit some cells, after switch pages/refresh browser. Note you have to exit the cell or hit enter in order for the change to be persisted.
<br />
<h2>Simple spreadsheet grid</h2>
<div class=""bar"">
    <button type=""button"" class=""awe-btn"" id=""addrow"">add row</button>
</div>

");
#nullable restore
#line 18 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
Write(Html.Awe().Grid("Spreadsheet")
    .Groupable(false)
    .Sortable(false)
    .Url(Url.Action("GridGetItems"))
    .CssClass("spreadsh")
    .Columns(
        new Column { Bind = "Name", ClientFormatFunc = "txt" },
        new Column { Bind = "Location", ClientFormatFunc = "txt" },
        new Column { Bind = "Meal", ClientFormatFunc = "txt" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<textarea id=""log"" class=""log""></textarea>
<script>
    function txt(model, name) {
        var val = model[name];
        if (!val) val = """"; // replace null with """"
        return ""<input type='text' name='"" + name + ""' value='"" + utils.escapeChars(val) + ""'/>"";
    }

    $(function () {
        var g = $('#Spreadsheet');
        var api = g.data('api');
        function add() {
            var xhr = api.load({ oparams: { page: 1 } }); // first go to page 1

            $.when(xhr).done(function () {
                var row = $(api.renderRow({ Id: 0 }));
                g.find('.awe-row:first').before(row); // insert the row
                row.find('input:first').focus();
            });
        }

        g.on('change', 'input', function () {
            var input = $(this);
            var model = utils.model(input.closest('.awe-row'));
            var prop = input.attr(""name"");
            model[prop] = input.val();

            // using awe.ajx instead of $.ajax to get the");
            WriteLiteral(" antiforgery token added automatically + error handling\r\n            awe.ajx(\'");
#nullable restore
#line 55 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
                 Write(Url.Action("Save"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"', awe.srl({ id: model.Id, name: prop, value: model[prop] }))
                .done(function(res) {
                    if (model.Id == 0) {
                        model.Id = res.Id;
                        $('#log').prepend('new record added id = ' + res.Id + ' \n');
                    }

                    $('#log').prepend(model[prop] + ' saved \n');
                });
        });

        $('#addrow').on('click', add);
    });
</script>

<style>
    .spreadsh .awe-row td {
        background: white;
        padding: 0;
        text-align: center;
    }

    .spreadsh input[type=""text""] {
        width: 100%;
        margin: auto;
        border: none;
        padding: .5em .7em;
    }
</style>
");
            WriteLiteral("<br />\r\n<div class=\"tabs code\">\r\n    <div data-caption=\"view\">");
#nullable restore
#line 87 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
                        Write(Html.Source("GridSpreadsheetDemo/Index.cshtml"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n    <div data-caption=\"controller\">");
#nullable restore
#line 88 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
                              Write(Html.Csource("Demos/Grid/GridSpreadsheetDemoController.cs"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n</div>\r\n<br />\r\n<br />\r\n<h2>Add columns and bound to array</h2>\r\n");
            WriteLiteral("<div class=\"bar\">\r\n    <button type=\"button\" class=\"awe-btn\" id=\"btnArrAddRow\">add row</button>\r\n    <button type=\"button\" class=\"awe-btn\" onclick=\"awe.oc(\'addCol\')\">add column</button>\r\n</div>\r\n");
#nullable restore
#line 98 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
  
    var gridId = "SpreadArrGrid";

#line default
#line hidden
#nullable disable
#nullable restore
#line 101 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
Write(Html.Awe().Grid(gridId)
      .Mod(o => o.ColumnsSelector())
      .Url(Url.Action("MultiColGrid"))
      .CssClass("spreadsh")
      .SendColumns(true));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 107 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
Write(Html.Awe().InitCall("addCol").Url(Url.Action("AddColumn")).Success("utils.refreshGrid('" + gridId + "')"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script>
    function txtVal(i) {
        return function (model, name) {
            var val = model.Values[i];
            if (!val) val = """"; //replace null with """"
            return ""<input type='text' name='"" + name + ""' value='"" + utils.escapeChars(val) + ""'/>"";
        };
    }

    $(function () {
        var g = $('#");
#nullable restore
#line 119 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
                Write(gridId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"');

        $('#btnArrAddRow').click(function () {
            var row = $(g.data('api').renderRow({ Id: 0, Values: [] }));
            g.find('.awe-row:last').after(row); // insert the row
            g.data('o').lrso = 1; // flag last result not matching the rendered rows
            row.find('input:first').focus();
        });

        g.find('.awe-content').on('change', 'input', function () {
            var model = utils.model($(this).closest('.awe-row'));
            var col = parseInt($(this).attr(""name""));
            var val = $(this).val();
            model.Values[col] = val;
            
            awe.ajx('");
#nullable restore
#line 134 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
                 Write(Url.Action("SaveArr"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"', awe.srl({ id: model.Id, col: col, value: val }))
                .done(function (res) {
                    if (!model.Values[0]) {
                        model.Id = res.Id;
                        $('#log').prepend('new record added id = ' + res.Id + ' \n');
                    }

                    $('#log').prepend(val + ' saved \n');
                });
        });
    });
</script>
");
            WriteLiteral("\r\n<div class=\"tabs code\">\r\n    <div data-caption=\"view\">");
#nullable restore
#line 149 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
                        Write(Html.Source("GridSpreadsheetDemo/Index.cshtml", 2));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n    <div data-caption=\"controller\">");
#nullable restore
#line 150 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
                              Write(Html.Csource("Demos/Grid/GridSpreadsheetDemoController.cs", 2));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n</div>\r\n<br />\r\n<br />\r\n<a");
            BeginWriteAttribute("href", " href=\"", 5544, "\"", 5578, 1);
#nullable restore
#line 154 "D:\Tutorials\ASP Core Tables\AweCoreDemo\AweCoreDemo\AweCoreDemo\Views\GridSpreadsheetDemo\Index.cshtml"
WriteAttributeValue("", 5551, Url.Action("Autocomplete"), 5551, 27, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">Autocomplete Cells Spreadsheet Demo</a>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
